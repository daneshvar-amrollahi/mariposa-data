(set-option :auto-config false)
(set-option :produce-unsat-cores false)
(set-option :smt.mbqi.max_iterations 10000000)
(set-option :smt.relevancy 0)
(declare-fun c0 () Bool)
(declare-fun c1 () Bool)
(define-fun e2 () Bool (not c1))
(declare-fun c3 () Bool)
(define-fun e4 () Bool (not c3))
(declare-fun c5 () Bool)
(define-fun e6 () Bool (not c5))
(define-fun e7 () Bool (and c0 e2 e4 e6))
(declare-fun c8 () Bool)
(define-fun e9 () Bool (not c8))
(define-fun e10 () Bool (and e7 e9))
(define-fun e11 () Bool (not e10))
(declare-fun c12 () (_ BitVec 64))
(define-fun e13 () (_ BitVec 64) (_ bv1024 64))
(define-fun e14 () Bool (bvult c12 e13))
(define-fun e15 () (_ BitVec 64) (_ bv1 64))
(declare-fun c16 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e17 () (_ BitVec 64) (c16 c12))
(define-fun e18 () Bool (= e15 e17))
(define-fun e19 () Bool (and e14 e18))
(declare-fun c20 () (_ BitVec 64))
(define-fun e21 () Bool (bvult c20 e13))
(define-fun e22 () (_ BitVec 64) (_ bv0 64))
(define-fun e23 () (_ BitVec 64) (c16 c20))
(define-fun e24 () Bool (= e22 e23))
(define-fun e25 () Bool (and e21 e24))
(declare-fun c26 ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(define-fun e27 () (_ BitVec 64) (_ bv2 64))
(define-fun e28 () (_ BitVec 64) (c26 c12 e27))
(define-fun e29 () Bool (= e22 e28))
(define-fun e30 () Bool (and e9 e19 e25 e29))
(define-fun e31 () Bool (not e19))
(define-fun e32 () Bool (not e21))
(define-fun e33 () Bool (not e25))
(define-fun e34 () Bool (not e29))
(define-fun e35 () Bool (and e25 e34))
(define-fun e36 () Bool (or e33 e35))
(define-fun e37 () Bool (and e21 e36))
(define-fun e38 () Bool (or e32 e37))
(define-fun e39 () Bool (and e19 e38))
(define-fun e40 () Bool (or e31 e39))
(define-fun e41 () Bool (and e9 e40))
(define-fun e42 () Bool (or c8 e41))
(define-fun e43 () Bool (or e30 e42))
(define-fun e44 () Bool (or e43 e11))
(declare-fun c45 () Bool)
(define-fun e46 () Bool (not c45))
(declare-fun c47 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e48 () (_ BitVec 64) (c47 c12))
(define-fun e49 () Bool (= e15 e48))
(define-fun e50 () Bool (and e14 e49))
(define-fun e51 () (_ BitVec 64) (c47 c20))
(define-fun e52 () Bool (= e22 e51))
(define-fun e53 () Bool (and e21 e52))
(declare-fun c54 ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(define-fun e55 () (_ BitVec 64) (c54 c12 e27))
(define-fun e56 () Bool (= e22 e55))
(define-fun e57 () Bool (and e46 e50 e53 e56))
(define-fun e58 () Bool (not e50))
(define-fun e59 () Bool (not e53))
(define-fun e60 () Bool (not e56))
(define-fun e61 () Bool (and e53 e60))
(define-fun e62 () Bool (or e59 e61))
(define-fun e63 () Bool (and e21 e62))
(define-fun e64 () Bool (or e32 e63))
(define-fun e65 () Bool (and e50 e64))
(define-fun e66 () Bool (or e58 e65))
(define-fun e67 () Bool (and e46 e66))
(define-fun e68 () Bool (or c45 e67))
(define-fun e69 () Bool (or e57 e68))
(define-fun e70 () Bool (or e69 e11))
(define-fun e71 () Bool (and e44 e70))
(define-fun e72 () Bool (or e11 e71))
(define-fun e73 () Bool (not e72))
(assert e73)
(check-sat)
