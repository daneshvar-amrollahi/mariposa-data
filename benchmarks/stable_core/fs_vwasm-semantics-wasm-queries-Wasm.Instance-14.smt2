(set-option :global-decls false)
(set-option :smt.mbqi false)
(set-option :auto_config false)
(set-option :model true)
(set-option :smt.case_split 3)
(set-option :smt.relevancy 2)
(declare-sort FString 0)
(declare-fun FString_constr_id (FString) Int)
(declare-sort Term 0)
(declare-fun Term_constr_id (Term) Int)
(declare-sort Dummy_sort 0)
(declare-fun Dummy_value () Dummy_sort)
(declare-sort Fuel 0)
(declare-fun ZFuel () Fuel)
(declare-fun SFuel (Fuel) Fuel)
(declare-fun MaxIFuel () Fuel)
(declare-fun MaxIFuel () Fuel)
(declare-fun MaxFuel () Fuel)
(declare-fun PreType (Term) Term)
(declare-fun Valid (Term) Bool)
(declare-fun HasTypeFuel (Fuel Term Term) Bool)
(define-fun HasTypeZ ((x Term) (t Term)) Bool (HasTypeFuel ZFuel x t))
(define-fun HasType ((x Term) (t Term)) Bool (HasTypeFuel MaxIFuel x t))
(declare-fun IsTotFun (Term) Bool)
(assert (forall ((f Fuel) (x Term) (t Term)) (! (= (HasTypeFuel (SFuel f) x t) (HasTypeZ x t)) :pattern ((HasTypeFuel (SFuel f) x t)))))
(declare-fun NoHoist (Term Bool) Bool)
(assert (forall ((dummy Term) (b Bool)) (! (= (NoHoist dummy b) b) :pattern ((NoHoist dummy b)))))
(define-fun  IsTyped ((x Term)) Bool (exists ((t Term)) (HasTypeZ x t)))
(declare-fun ApplyTF (Term Fuel) Term)
(declare-fun ApplyTT (Term Term) Term)
(declare-fun Rank (Term) Int)
(declare-fun Closure (Term) Term)
(declare-fun ConsTerm (Term Term) Term)
(declare-fun ConsFuel (Fuel Term) Term)
(declare-fun Tm_uvar (Int) Term)
(define-fun Reify ((x Term)) Term x)
(declare-fun Prims.precedes (Term Term Term Term) Term)
(declare-fun Range_const (Int) Term)
(declare-fun _mul (Int Int) Int)
(declare-fun _div (Int Int) Int)
(declare-fun _mod (Int Int) Int)
(declare-fun __uu__PartialApp () Term)
(assert (forall ((x Int) (y Int)) (! (= (_mul x y) (* x y)) :pattern ((_mul x y)))))
(assert (forall ((x Int) (y Int)) (! (= (_div x y) (div x y)) :pattern ((_div x y)))))
(assert (forall ((x Int) (y Int)) (! (= (_mod x y) (mod x y)) :pattern ((_mod x y)))))
(declare-fun _rmul (Real Real) Real)
(declare-fun _rdiv (Real Real) Real)
(assert (forall ((x Real) (y Real)) (! (= (_rmul x y) (* x y)) :pattern ((_rmul x y)))))
(assert (forall ((x Real) (y Real)) (! (= (_rdiv x y) (/ x y)) :pattern ((_rdiv x y)))))
(declare-fun FString_const (Int) FString)
(assert (! (forall ((@u0 Int)) (! (= 0 (FString_constr_id (FString_const @u0))) :pattern ((FString_const @u0)) :qid constructor_distinct_FString_const)) :named constructor_distinct_FString_const))
(declare-fun FString_const_proj_0 (FString) Int)
(assert (! (forall ((@u0 Int)) (! (= (FString_const_proj_0 (FString_const @u0)) @u0) :pattern ((FString_const @u0)) :qid projection_inverse_FString_const_proj_0)) :named projection_inverse_FString_const_proj_0))
(define-fun is-FString_const ((__@u0 FString)) Bool (and (= (FString_constr_id __@u0) 0) (= __@u0 (FString_const (FString_const_proj_0 __@u0)))))
(declare-fun Tm_type () Term)
(assert (! (= 2 (Term_constr_id Tm_type)) :named constructor_distinct_Tm_type))
(define-fun is-Tm_type ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 2) (= __@x0 Tm_type)))
(declare-fun Tm_arrow (Int) Term)
(assert (! (forall ((@u0 Int)) (! (= 3 (Term_constr_id (Tm_arrow @u0))) :pattern ((Tm_arrow @u0)) :qid constructor_distinct_Tm_arrow)) :named constructor_distinct_Tm_arrow))
(declare-fun Tm_arrow_id (Term) Int)
(assert (! (forall ((@u0 Int)) (! (= (Tm_arrow_id (Tm_arrow @u0)) @u0) :pattern ((Tm_arrow @u0)) :qid projection_inverse_Tm_arrow_id)) :named projection_inverse_Tm_arrow_id))
(define-fun is-Tm_arrow ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 3) (= __@x0 (Tm_arrow (Tm_arrow_id __@x0)))))
(declare-fun Tm_unit () Term)
(assert (! (= 6 (Term_constr_id Tm_unit)) :named constructor_distinct_Tm_unit))
(define-fun is-Tm_unit ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 6) (= __@x0 Tm_unit)))
(declare-fun BoxInt (Int) Term)
(assert (! (forall ((@u0 Int)) (! (= 7 (Term_constr_id (BoxInt @u0))) :pattern ((BoxInt @u0)) :qid constructor_distinct_BoxInt)) :named constructor_distinct_BoxInt))
(declare-fun BoxInt_proj_0 (Term) Int)
(assert (! (forall ((@u0 Int)) (! (= (BoxInt_proj_0 (BoxInt @u0)) @u0) :pattern ((BoxInt @u0)) :qid projection_inverse_BoxInt_proj_0)) :named projection_inverse_BoxInt_proj_0))
(define-fun is-BoxInt ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 7) (= __@x0 (BoxInt (BoxInt_proj_0 __@x0)))))
(declare-fun BoxBool (Bool) Term)
(assert (! (forall ((@u0 Bool)) (! (= 8 (Term_constr_id (BoxBool @u0))) :pattern ((BoxBool @u0)) :qid constructor_distinct_BoxBool)) :named constructor_distinct_BoxBool))
(declare-fun BoxBool_proj_0 (Term) Bool)
(assert (! (forall ((@u0 Bool)) (! (= (BoxBool_proj_0 (BoxBool @u0)) @u0) :pattern ((BoxBool @u0)) :qid projection_inverse_BoxBool_proj_0)) :named projection_inverse_BoxBool_proj_0))
(define-fun is-BoxBool ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 8) (= __@x0 (BoxBool (BoxBool_proj_0 __@x0)))))
(declare-fun BoxString (FString) Term)
(assert (! (forall ((@u0 FString)) (! (= 9 (Term_constr_id (BoxString @u0))) :pattern ((BoxString @u0)) :qid constructor_distinct_BoxString)) :named constructor_distinct_BoxString))
(declare-fun BoxString_proj_0 (Term) FString)
(assert (! (forall ((@u0 FString)) (! (= (BoxString_proj_0 (BoxString @u0)) @u0) :pattern ((BoxString @u0)) :qid projection_inverse_BoxString_proj_0)) :named projection_inverse_BoxString_proj_0))
(define-fun is-BoxString ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 9) (= __@x0 (BoxString (BoxString_proj_0 __@x0)))))
(declare-fun BoxReal (Real) Term)
(assert (! (forall ((@u0 Real)) (! (= 10 (Term_constr_id (BoxReal @u0))) :pattern ((BoxReal @u0)) :qid constructor_distinct_BoxReal)) :named constructor_distinct_BoxReal))
(declare-fun BoxReal_proj_0 (Term) Real)
(assert (! (forall ((@u0 Real)) (! (= (BoxReal_proj_0 (BoxReal @u0)) @u0) :pattern ((BoxReal @u0)) :qid projection_inverse_BoxReal_proj_0)) :named projection_inverse_BoxReal_proj_0))
(define-fun is-BoxReal ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 10) (= __@x0 (BoxReal (BoxReal_proj_0 __@x0)))))
(declare-fun Prims.lex_t () Term)
(assert (forall ((t1 Term) (t2 Term) (e1 Term) (e2 Term)) (! (= (Valid (Prims.precedes t1 t2 e1 e2)) (Valid (Prims.precedes Prims.lex_t Prims.lex_t e1 e2))) :pattern ((Prims.precedes t1 t2 e1 e2)))))
(assert (forall ((t1 Term) (t2 Term)) (! (= (Valid (Prims.precedes Prims.lex_t Prims.lex_t t1 t2)) (< (Rank t1) (Rank t2))) :pattern ((Prims.precedes Prims.lex_t Prims.lex_t t1 t2)))))
(assert (forall ((e Term) (t Term)) (! (=> (HasType e t) (Valid t)) :pattern ((HasType e t) (Valid t)) :qid __prelude_valid_intro)))
(declare-fun Prims.attribute () Term)
(declare-fun Prims.cps () Term)
(declare-fun Prims.hasEq (Term) Term)
(declare-fun Tm_arrow_ef9cb512a25ee351fa5536d617490497 () Term)
(declare-fun Prims.hasEq@tok () Term)
(declare-fun Prims.eqtype () Term)
(declare-fun Tm_refine_414d0a9f578ab0048252f8c8f552b99f () Term)
(declare-fun Prims.bool () Term)
(declare-fun Prims.c_False () Term)
(define-fun is-Prims.c_False ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 111) (= __@x0 Prims.c_False)))
(declare-fun Prims.c_True () Term)
(declare-fun Prims.T () Term)
(declare-fun Prims.T@tok () Term)
(define-fun is-Prims.c_True ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 116) (= __@x0 Prims.c_True)))
(define-fun is-Prims.T ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 122) (= __@x0 Prims.T)))
(declare-fun Prims.uu___is_T (Term) Term)
(declare-fun Tm_arrow_1ca40bedfbd5ea31ac81af74c119a09e () Term)
(declare-fun Prims.uu___is_T@tok () Term)
(declare-fun Prims.unit () Term)
(declare-fun Prims.squash (Term) Term)
(declare-fun Prims.squash@tok () Term)
(declare-fun Tm_refine_2de20c066034c13bf76e9c0b94f4806c (Term) Term)
(declare-fun Prims.auto_squash (Term) Term)
(declare-fun Prims.auto_squash@tok () Term)
(declare-fun Prims.logical () Term)
(declare-fun Prims.smt_theory_symbol () Term)
(declare-fun Prims.l_True () Term)
(declare-fun Prims.l_False () Term)
(declare-fun Prims.equals (Term Term Term) Term)
(declare-fun Prims.equals@x0 (Term) Term)
(declare-fun Prims.equals@x1 (Term) Term)
(declare-fun Prims.equals@x2 (Term) Term)
(declare-fun Prims.equals@tok () Term)
(declare-fun Prims.Refl (Term Term) Term)
(declare-fun Prims.Refl_a (Term) Term)
(declare-fun Prims.Refl_x (Term) Term)
(declare-fun Prims.Refl@tok () Term)
(declare-fun Tm_arrow_8e00c6263684633abbc1d1a87608e391 () Term)
(define-fun is-Prims.equals ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 134) (exists ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= __@x0 (Prims.equals @x0 @x1 @x2)) :qid is-Prims.equals))))
(define-fun is-Prims.Refl ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 141) (= __@x0 (Prims.Refl (Prims.Refl_a __@x0) (Prims.Refl_x __@x0)))))
(declare-fun Prims.uu___is_Refl (Term Term Term Term) Term)
(declare-fun Tm_arrow_2a4540f76c8969717ea911077d7b4d15 () Term)
(declare-fun Prims.uu___is_Refl@tok () Term)
(declare-fun Prims.eq2 (Term Term Term) Term)
(declare-fun Tm_arrow_1ec40cec1da281b45a559c74dd57f3b7 () Term)
(declare-fun Prims.eq2@tok () Term)
(declare-fun Prims.h_equals (Term Term Term Term) Term)
(declare-fun Prims.h_equals@x0 (Term) Term)
(declare-fun Prims.h_equals@x1 (Term) Term)
(declare-fun Prims.h_equals@x2 (Term) Term)
(declare-fun Prims.h_equals@x3 (Term) Term)
(declare-fun Prims.h_equals@tok () Term)
(declare-fun Prims.HRefl (Term Term) Term)
(declare-fun Prims.HRefl_a (Term) Term)
(declare-fun Prims.HRefl_x (Term) Term)
(declare-fun Prims.HRefl@tok () Term)
(declare-fun Tm_arrow_88c25e785888d4e0c2c73392ffd9505d () Term)
(define-fun is-Prims.h_equals ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 149) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= __@x0 (Prims.h_equals @x0 @x1 @x2 @x3)) :qid is-Prims.h_equals))))
(define-fun is-Prims.HRefl ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 156) (= __@x0 (Prims.HRefl (Prims.HRefl_a __@x0) (Prims.HRefl_x __@x0)))))
(declare-fun Prims.uu___is_HRefl (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_985220cbab27fbd2cc6dbc457b76b91a () Term)
(declare-fun Prims.uu___is_HRefl@tok () Term)
(declare-fun Prims.eq3 (Term Term Term Term) Term)
(declare-fun Tm_arrow_7fcb145b23c2ac843afd9b126c4f71a9 () Term)
(declare-fun Prims.eq3@tok () Term)
(declare-fun Prims.b2t (Term) Term)
(declare-fun Prims.c_and (Term Term) Term)
(declare-fun Prims.c_and@x0 (Term) Term)
(declare-fun Prims.c_and@x1 (Term) Term)
(declare-fun Prims.c_and@tok () Term)
(declare-fun Prims.And (Term Term Term Term) Term)
(declare-fun Prims.And_p (Term) Term)
(declare-fun Prims.And_q (Term) Term)
(declare-fun Prims.And__0 (Term) Term)
(declare-fun Prims.And__1 (Term) Term)
(declare-fun Prims.And@tok () Term)
(declare-fun Tm_arrow_c964acbbcf3ac1f157b4be52412de0f2 () Term)
(define-fun is-Prims.c_and ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 164) (exists ((@x0 Term) (@x1 Term)) (! (= __@x0 (Prims.c_and @x0 @x1)) :qid is-Prims.c_and))))
(define-fun is-Prims.And ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 171) (= __@x0 (Prims.And (Prims.And_p __@x0) (Prims.And_q __@x0) (Prims.And__0 __@x0) (Prims.And__1 __@x0)))))
(declare-fun Prims.uu___is_And (Term Term Term) Term)
(declare-fun Tm_arrow_98dc03784ff39a101fb534007f473933 () Term)
(declare-fun Prims.uu___is_And@tok () Term)
(declare-fun Prims.__proj__And__item___0 (Term Term Term) Term)
(declare-fun Tm_arrow_62000c87a2ac04dc4129db0bf2e4a484 () Term)
(declare-fun Prims.__proj__And__item___0@tok () Term)
(declare-fun Prims.__proj__And__item___1 (Term Term Term) Term)
(declare-fun Tm_arrow_74ecbc1aa6be8c1f078b3f4a04e85892 () Term)
(declare-fun Prims.__proj__And__item___1@tok () Term)
(declare-fun Prims.l_and (Term Term) Term)
(declare-fun Tm_arrow_289ee2cc5874944bf725b9e3db8c0fd6 () Term)
(declare-fun Prims.l_and@tok () Term)
(declare-fun Prims.c_or (Term Term) Term)
(declare-fun Prims.c_or@x0 (Term) Term)
(declare-fun Prims.c_or@x1 (Term) Term)
(declare-fun Prims.c_or@tok () Term)
(declare-fun Prims.Left (Term Term Term) Term)
(declare-fun Prims.Left_p (Term) Term)
(declare-fun Prims.Left_q (Term) Term)
(declare-fun Prims.Left__0 (Term) Term)
(declare-fun Prims.Left@tok () Term)
(declare-fun Prims.Right (Term Term Term) Term)
(declare-fun Prims.Right_p (Term) Term)
(declare-fun Prims.Right_q (Term) Term)
(declare-fun Prims.Right__0 (Term) Term)
(declare-fun Prims.Right@tok () Term)
(declare-fun Tm_arrow_fd80693647ee9c426b2ca647008a9d5a () Term)
(declare-fun Tm_arrow_e817f0b7fc30ff1a4a48917b36fbcdd7 () Term)
(define-fun is-Prims.c_or ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 183) (exists ((@x0 Term) (@x1 Term)) (! (= __@x0 (Prims.c_or @x0 @x1)) :qid is-Prims.c_or))))
(define-fun is-Prims.Left ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 190) (= __@x0 (Prims.Left (Prims.Left_p __@x0) (Prims.Left_q __@x0) (Prims.Left__0 __@x0)))))
(define-fun is-Prims.Right ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 195) (= __@x0 (Prims.Right (Prims.Right_p __@x0) (Prims.Right_q __@x0) (Prims.Right__0 __@x0)))))
(declare-fun Prims.uu___is_Left (Term Term Term) Term)
(declare-fun Tm_arrow_0f4b00d5a737ef6de69227e014837c34 () Term)
(declare-fun Prims.uu___is_Left@tok () Term)
(declare-fun Tm_refine_51387c0a7ef77e43ab89d4ae2b6b464d (Term Term) Term)
(declare-fun Prims.__proj__Left__item___0 (Term Term Term) Term)
(declare-fun Tm_arrow_e072c573e2fe374200b0390c4a6c5fa4 () Term)
(declare-fun Prims.__proj__Left__item___0@tok () Term)
(declare-fun Prims.uu___is_Right (Term Term Term) Term)
(declare-fun Prims.uu___is_Right@tok () Term)
(declare-fun Tm_refine_95f078f2b9cfbd740f9afd162814a526 (Term Term) Term)
(declare-fun Prims.__proj__Right__item___0 (Term Term Term) Term)
(declare-fun Tm_arrow_9ffbbc9e6859bf06a2b5db4593c4f0d9 () Term)
(declare-fun Prims.__proj__Right__item___0@tok () Term)
(declare-fun Prims.l_or (Term Term) Term)
(declare-fun Prims.l_or@tok () Term)
(declare-fun Prims.l_imp (Term Term) Term)
(declare-fun Prims.l_imp@tok () Term)
(declare-fun Tm_ghost_arrow_0283b8a2a36bbec52abac4e3d837674a (Term Term) Term)
(declare-fun Prims.l_iff (Term Term) Term)
(declare-fun Prims.l_iff@tok () Term)
(declare-fun Prims.l_not (Term) Term)
(declare-fun Tm_arrow_8178e3b6934aa50ea45bb0ccea2d9711 () Term)
(declare-fun Prims.l_not@tok () Term)
(declare-fun Prims.has_type (Term Term Term) Term)
(declare-fun Tm_arrow_b5d8ed0243b8c7c893f2b329de57c62b () Term)
(declare-fun Prims.has_type@tok () Term)
(declare-fun Tm_arrow_2eaa01e78f73e9bab5d0955fc1a662da (Term) Term)
(declare-fun Prims.l_Forall (Term Term) Term)
(declare-fun Tm_arrow_977ec6901669a051ac66211b8e72666a () Term)
(declare-fun Prims.l_Forall@tok () Term)
(declare-fun Tm_ghost_arrow_3aa447697277bb40c9738c9125c3e80f (Term Term) Term)
(declare-fun Prims.subtype_of (Term Term) Term)
(declare-fun Tm_arrow_28becc0427b69ebf63ea956148504d97 () Term)
(declare-fun Prims.subtype_of@tok () Term)
(declare-fun Tm_abs_2319c8dded71dc14c3f65c301c18a7ca (Term Term) Term)
(declare-fun Prims.prop () Term)
(declare-fun Tm_refine_73f210ca6e0061ed4a3150f69b8f33bf () Term)
(declare-fun Prims.range () Term)
(declare-fun Prims.string () Term)
(declare-fun Prims.pure_pre () Term)
(declare-fun Prims.pure_post_ (Term Term) Term)
(declare-fun Tm_arrow_e4cf09589736facd1137944a1f5a00a6 () Term)
(declare-fun Prims.pure_post_@tok () Term)
(declare-fun Tm_refine_8d65e998a07dd53ec478e27017d9dba5 (Term Term) Term)
(declare-fun Tm_arrow_92458cff82f9ffee1f6e26a1c0c579f3 (Term Term) Term)
(declare-fun Prims.pure_post (Term) Term)
(declare-fun Prims.pure_post@tok () Term)
(declare-fun Prims.pure_wp (Term) Term)
(declare-fun Prims.pure_wp@tok () Term)
(declare-fun Tm_arrow_e5c03abbf8b0946a9aa7ee31bb7999a4 (Term) Term)
(declare-fun Prims.guard_free (Term) Term)
(declare-fun Prims.guard_free@tok () Term)
(declare-fun Prims.pure_assert_wp (Term Term) Term)
(declare-fun Tm_arrow_ca3deb07e9f0f186aabfaffa00eb51fd () Term)
(declare-fun Prims.pure_assert_wp@tok () Term)
(declare-fun Prims.pure_assume_wp (Term Term) Term)
(declare-fun Prims.pure_assume_wp@tok () Term)
(declare-fun Prims.dtuple2 (Term Term) Term)
(declare-fun Prims.dtuple2@x0 (Term) Term)
(declare-fun Prims.dtuple2@x1 (Term) Term)
(declare-fun Prims.dtuple2@tok () Term)
(declare-fun Prims.Mkdtuple2 (Term Term Term Term) Term)
(declare-fun Prims.Mkdtuple2_a (Term) Term)
(declare-fun Prims.Mkdtuple2_b (Term) Term)
(declare-fun Prims.Mkdtuple2__1 (Term) Term)
(declare-fun Prims.Mkdtuple2__2 (Term) Term)
(declare-fun Prims.Mkdtuple2@tok () Term)
(declare-fun Tm_arrow_22a50f5c5c9bb74bac4384fb8999be8b () Term)
(define-fun is-Prims.dtuple2 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 264) (exists ((@x0 Term) (@x1 Term)) (! (= __@x0 (Prims.dtuple2 @x0 @x1)) :qid is-Prims.dtuple2))))
(define-fun is-Prims.Mkdtuple2 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 273) (= __@x0 (Prims.Mkdtuple2 (Prims.Mkdtuple2_a __@x0) (Prims.Mkdtuple2_b __@x0) (Prims.Mkdtuple2__1 __@x0) (Prims.Mkdtuple2__2 __@x0)))))
(declare-fun Prims.uu___is_Mkdtuple2 (Term Term Term) Term)
(declare-fun Tm_arrow_e6f9f7cb1936ec43b52469e706dcadcc () Term)
(declare-fun Prims.uu___is_Mkdtuple2@tok () Term)
(declare-fun Prims.__proj__Mkdtuple2__item___1 (Term Term Term) Term)
(declare-fun Tm_arrow_26c013ffba39d4f7eeb4bcc80d2d4e22 () Term)
(declare-fun Prims.__proj__Mkdtuple2__item___1@tok () Term)
(declare-fun Prims.__proj__Mkdtuple2__item___2 (Term Term Term) Term)
(declare-fun Tm_arrow_870cc7701a0d9a8a2d6fb92427a97d66 () Term)
(declare-fun Prims.__proj__Mkdtuple2__item___2@tok () Term)
(declare-fun Prims.l_Exists (Term Term) Term)
(declare-fun Prims.l_Exists@tok () Term)
(declare-fun Prims.int () Term)
(declare-fun Prims.range_0 () Term)
(declare-fun Prims.mk_range (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_5f96b500c0940697aac1b5a6625b2368 () Term)
(declare-fun Prims.mk_range@tok () Term)
(declare-fun Prims.op_AmpAmp (Term Term) Term)
(declare-fun Prims.op_AmpAmp@tok () Term)
(declare-fun Prims.op_BarBar (Term Term) Term)
(declare-fun Prims.op_BarBar@tok () Term)
(declare-fun Prims.op_Negation (Term) Term)
(declare-fun Prims.op_Negation@tok () Term)
(declare-fun Prims.op_Multiply (Term Term) Term)
(declare-fun Prims.op_Multiply@tok () Term)
(declare-fun Prims.op_Subtraction (Term Term) Term)
(declare-fun Prims.op_Subtraction@tok () Term)
(declare-fun Prims.op_Addition (Term Term) Term)
(declare-fun Prims.op_Addition@tok () Term)
(declare-fun Prims.op_Minus (Term) Term)
(declare-fun Prims.op_Minus@tok () Term)
(declare-fun Prims.op_LessThanOrEqual (Term Term) Term)
(declare-fun Prims.op_LessThanOrEqual@tok () Term)
(declare-fun Prims.op_GreaterThan (Term Term) Term)
(declare-fun Prims.op_GreaterThan@tok () Term)
(declare-fun Prims.op_GreaterThanOrEqual (Term Term) Term)
(declare-fun Prims.op_GreaterThanOrEqual@tok () Term)
(declare-fun Prims.op_LessThan (Term Term) Term)
(declare-fun Prims.op_LessThan@tok () Term)
(declare-fun Prims.op_Equality (Term Term Term) Term)
(declare-fun Prims.op_Equality@tok () Term)
(declare-fun Prims.op_disEquality (Term Term Term) Term)
(declare-fun Prims.op_disEquality@tok () Term)
(declare-fun Prims.exn () Term)
(declare-fun Prims.array (Term) Term)
(declare-fun Prims.array@tok () Term)
(declare-fun Prims.deprecated (Term) Term)
(declare-fun Tm_arrow_2863eb88d7490a9c3cf347c16ca04740 () Term)
(declare-fun Prims.deprecated@tok () Term)
(declare-fun Prims.warn_on_use (Term) Term)
(declare-fun Prims.warn_on_use@tok () Term)
(declare-fun Prims.strcat (Term Term) Term)
(declare-fun Tm_arrow_b66cecec1d56111347abe61e89557dd1 () Term)
(declare-fun Prims.strcat@tok () Term)
(declare-fun Prims.list (Term) Term)
(declare-fun Prims.list@x0 (Term) Term)
(declare-fun Prims.list@tok () Term)
(declare-fun Prims.Nil (Term) Term)
(declare-fun Prims.Nil_a (Term) Term)
(declare-fun Prims.Nil@tok () Term)
(declare-fun Prims.Cons (Term Term Term) Term)
(declare-fun Prims.Cons_a (Term) Term)
(declare-fun Prims.Cons_hd (Term) Term)
(declare-fun Prims.Cons_tl (Term) Term)
(declare-fun Prims.Cons@tok () Term)
(declare-fun Tm_arrow_3864bd5fbb999b4fe4487408df9b3401 () Term)
(declare-fun Tm_arrow_02c072760cbad0f5a4706f6cffab6c94 () Term)
(define-fun is-Prims.list ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 332) (exists ((@x0 Term)) (! (= __@x0 (Prims.list @x0)) :qid is-Prims.list))))
(define-fun is-Prims.Nil ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 339) (= __@x0 (Prims.Nil (Prims.Nil_a __@x0)))))
(define-fun is-Prims.Cons ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 344) (= __@x0 (Prims.Cons (Prims.Cons_a __@x0) (Prims.Cons_hd __@x0) (Prims.Cons_tl __@x0)))))
(declare-fun Prims.uu___is_Nil (Term Term) Term)
(declare-fun Tm_arrow_606904b0fa72729a20285beb231f9f2e () Term)
(declare-fun Prims.uu___is_Nil@tok () Term)
(declare-fun Prims.uu___is_Cons (Term Term) Term)
(declare-fun Prims.uu___is_Cons@tok () Term)
(declare-fun Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32 (Term) Term)
(declare-fun Prims.__proj__Cons__item__hd (Term Term) Term)
(declare-fun Tm_arrow_27c3547831737e5a63950f3d18bf3d22 () Term)
(declare-fun Prims.__proj__Cons__item__hd@tok () Term)
(declare-fun Prims.__proj__Cons__item__tl (Term Term) Term)
(declare-fun Tm_arrow_4e740085106d54d8b48ffe3c6c20ef21 () Term)
(declare-fun Prims.__proj__Cons__item__tl@tok () Term)
(declare-fun Prims.returnM (Term Term) Term)
(declare-fun Tm_arrow_99724436653747ac6f5a6a00c64ff8bc () Term)
(declare-fun Prims.returnM@tok () Term)
(declare-fun Prims._assume (Term) Term)
(declare-fun Non_total_Tm_arrow_17922c7474b277539913d1f56365d3b9 () Term)
(declare-fun Prims._assume@tok () Term)
(declare-fun Prims.admit (Term Term) Term)
(declare-fun Prims.admit@tok () Term)
(declare-fun Prims.magic (Term Term) Term)
(declare-fun Tm_arrow_f5df98ce82fbcebbbdb844c958bee4fb () Term)
(declare-fun Prims.magic@tok () Term)
(declare-fun Prims.unsafe_coerce (Term Term Term) Term)
(declare-fun Tm_arrow_443ab41008720460b7a09e280558a60f () Term)
(declare-fun Prims.unsafe_coerce@tok () Term)
(declare-fun Prims.admitP (Term) Term)
(declare-fun Prims.admitP@tok () Term)
(declare-fun Prims._assert (Term) Term)
(declare-fun Non_total_Tm_arrow_1e42c129c62265872e42c56d034abab3 () Term)
(declare-fun Prims._assert@tok () Term)
(declare-fun Prims.cut (Term) Term)
(declare-fun Prims.cut@tok () Term)
(declare-fun Prims.nat () Term)
(declare-fun Tm_refine_542f9d4f129664613f2483a6c88bc7c2 () Term)
(declare-fun Prims.pos () Term)
(declare-fun Tm_refine_774ba3f728d91ead8ef40be66c9802e5 () Term)
(declare-fun Prims.nonzero () Term)
(declare-fun Tm_refine_0766302b68bb44ab7aff8c4d8be0b46f () Term)
(declare-fun Prims.op_Modulus (Term Term) Term)
(declare-fun Prims.op_Modulus@tok () Term)
(declare-fun Prims.op_Division (Term Term) Term)
(declare-fun Prims.op_Division@tok () Term)
(declare-fun Prims.pow2.fuel_instrumented (Fuel Term) Term)
(declare-fun Prims.pow2.fuel_instrumented_token () Term)
(declare-fun Prims.pow2 (Term) Term)
(declare-fun Prims.pow2@tok () Term)
(declare-fun Tm_arrow_c331a0e032e021e1eaa359b3983de4f2 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term)) (! (= (Prims.pow2.fuel_instrumented (SFuel @u0) @x1) (Prims.pow2.fuel_instrumented ZFuel @x1)) :pattern ((Prims.pow2.fuel_instrumented (SFuel @u0) @x1)) :qid @fuel_irrelevance_Prims.pow2.fuel_instrumented)) :named fuel_irrelevance_Prims.pow2.fuel_instrumented))
(assert (! (forall ((@x0 Term)) (! (= (Prims.pow2 @x0) (Prims.pow2.fuel_instrumented MaxFuel @x0)) :pattern ((Prims.pow2 @x0)) :qid @fuel_correspondence_Prims.pow2.fuel_instrumented)) :named fuel_correspondence_Prims.pow2.fuel_instrumented))
(declare-fun Prims.min (Term Term) Term)
(declare-fun Tm_arrow_47fc285d7b44e13bcb7e420cbfc55623 () Term)
(declare-fun Prims.min@tok () Term)
(declare-fun Prims.abs (Term) Term)
(declare-fun Tm_arrow_35447810753695c4fe25c93af1251992 () Term)
(declare-fun Prims.abs@tok () Term)
(declare-fun Prims.string_of_bool (Term) Term)
(declare-fun Tm_arrow_e86b54405c2a58719f5e8112efd48c09 () Term)
(declare-fun Prims.string_of_bool@tok () Term)
(declare-fun Prims.string_of_int (Term) Term)
(declare-fun Tm_arrow_2bc066ec63734c94a3c008e1e72cae2b () Term)
(declare-fun Prims.string_of_int@tok () Term)
(declare-fun Prims.labeled (Term Term Term) Term)
(declare-fun Tm_arrow_04aa773f28f907e6a0b5741576bf5493 () Term)
(declare-fun Prims.labeled@tok () Term)
(declare-fun Prims.__cache_version_number__ () Term)
(declare-fun FStar.Pervasives.Native.option (Term) Term)
(declare-fun FStar.Pervasives.Native.option@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.option@tok () Term)
(declare-fun FStar.Pervasives.Native.None (Term) Term)
(declare-fun FStar.Pervasives.Native.None_a (Term) Term)
(declare-fun FStar.Pervasives.Native.None@tok () Term)
(declare-fun FStar.Pervasives.Native.Some (Term Term) Term)
(declare-fun FStar.Pervasives.Native.Some_a (Term) Term)
(declare-fun FStar.Pervasives.Native.Some_v (Term) Term)
(declare-fun FStar.Pervasives.Native.Some@tok () Term)
(declare-fun Tm_arrow_48b914114ec9f2f1caadf0f6848a9741 () Term)
(declare-fun Tm_arrow_b93a364b5144c2a5f3e9d1ea7b881752 () Term)
(define-fun is-FStar.Pervasives.Native.option ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 101) (exists ((@x0 Term)) (! (= __@x0 (FStar.Pervasives.Native.option @x0)) :qid is-FStar.Pervasives.Native.option))))
(define-fun is-FStar.Pervasives.Native.None ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 108) (= __@x0 (FStar.Pervasives.Native.None (FStar.Pervasives.Native.None_a __@x0)))))
(define-fun is-FStar.Pervasives.Native.Some ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 113) (= __@x0 (FStar.Pervasives.Native.Some (FStar.Pervasives.Native.Some_a __@x0) (FStar.Pervasives.Native.Some_v __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_None (Term Term) Term)
(declare-fun Tm_arrow_f1a97bcd6ba9b40d22609b756f183afa () Term)
(declare-fun FStar.Pervasives.Native.uu___is_None@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Some (Term Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_Some@tok () Term)
(declare-fun Tm_refine_4d5241eb6fe198666a8101195bbd4a2a (Term) Term)
(declare-fun FStar.Pervasives.Native.__proj__Some__item__v (Term Term) Term)
(declare-fun Tm_arrow_1b1398c011ff53e4194fc2ec00c7b411 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Some__item__v@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple2 (Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple2@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple2@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple2@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple2 (Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple2__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple2__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple2__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple2__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple2@tok () Term)
(declare-fun Tm_arrow_4054cc0a51327db54c2ed9ba3376a093 () Term)
(define-fun is-FStar.Pervasives.Native.tuple2 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 125) (exists ((@x0 Term) (@x1 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple2 @x0 @x1)) :qid is-FStar.Pervasives.Native.tuple2))))
(define-fun is-FStar.Pervasives.Native.Mktuple2 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 132) (= __@x0 (FStar.Pervasives.Native.Mktuple2 (FStar.Pervasives.Native.Mktuple2__a __@x0) (FStar.Pervasives.Native.Mktuple2__b __@x0) (FStar.Pervasives.Native.Mktuple2__1 __@x0) (FStar.Pervasives.Native.Mktuple2__2 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple2 (Term Term Term) Term)
(declare-fun Tm_arrow_eff71eeee4474e017e02350f86f54756 () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple2__item___1 (Term Term Term) Term)
(declare-fun Tm_arrow_b8cce376a4a678a51298a0f3945f25ce () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple2__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple2__item___2 (Term Term Term) Term)
(declare-fun Tm_arrow_d952d001575ecb20c572af535c88dd2d () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple2__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.fst (Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.fst@tok () Term)
(declare-fun FStar.Pervasives.Native.snd (Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.snd@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple3 (Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple3@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple3@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple3@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple3@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple3 (Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3@tok () Term)
(declare-fun Tm_arrow_1bedda193f13e939931cf5d46ad84216 () Term)
(define-fun is-FStar.Pervasives.Native.tuple3 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 146) (exists ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple3 @x0 @x1 @x2)) :qid is-FStar.Pervasives.Native.tuple3))))
(define-fun is-FStar.Pervasives.Native.Mktuple3 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 153) (= __@x0 (FStar.Pervasives.Native.Mktuple3 (FStar.Pervasives.Native.Mktuple3__a __@x0) (FStar.Pervasives.Native.Mktuple3__b __@x0) (FStar.Pervasives.Native.Mktuple3__c __@x0) (FStar.Pervasives.Native.Mktuple3__1 __@x0) (FStar.Pervasives.Native.Mktuple3__2 __@x0) (FStar.Pervasives.Native.Mktuple3__3 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple3 (Term Term Term Term) Term)
(declare-fun Tm_arrow_f03c6dc5b30146aaca49ed4bf6f332a7 () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple3__item___1 (Term Term Term Term) Term)
(declare-fun Tm_arrow_592c45439d32a71e1933eacb9776c9ed () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple3__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple3__item___2 (Term Term Term Term) Term)
(declare-fun Tm_arrow_9c9b0c5ac9b0fbfc367f406af296ecab () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple3__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple3__item___3 (Term Term Term Term) Term)
(declare-fun Tm_arrow_08246a62c9aeca08c44c602ad80e95a4 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple3__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple4 (Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple4@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple4@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple4@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple4@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple4@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple4 (Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4@tok () Term)
(declare-fun Tm_arrow_cbe72a10167439fe1ecfaf4fec8fd23f () Term)
(define-fun is-FStar.Pervasives.Native.tuple4 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 165) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple4 @x0 @x1 @x2 @x3)) :qid is-FStar.Pervasives.Native.tuple4))))
(define-fun is-FStar.Pervasives.Native.Mktuple4 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 172) (= __@x0 (FStar.Pervasives.Native.Mktuple4 (FStar.Pervasives.Native.Mktuple4__a __@x0) (FStar.Pervasives.Native.Mktuple4__b __@x0) (FStar.Pervasives.Native.Mktuple4__c __@x0) (FStar.Pervasives.Native.Mktuple4__d __@x0) (FStar.Pervasives.Native.Mktuple4__1 __@x0) (FStar.Pervasives.Native.Mktuple4__2 __@x0) (FStar.Pervasives.Native.Mktuple4__3 __@x0) (FStar.Pervasives.Native.Mktuple4__4 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple4 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_4319694c225efa92ce9fad6e9d81f761 () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___1 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_382d1e9129053162252ec57e86d46f82 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___2 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_fffd25e5325d259efa0675ef649c6864 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___3 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_57b4005e0833f7b396e349ed7cdd1bb2 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___4 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9e6c1a63d63f8735645b9898955a2dca () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple5 (Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple5@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple5@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple5@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple5@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple5@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple5@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple5 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5@tok () Term)
(declare-fun Tm_arrow_dd8a078a1b97a81b5089dc3637cc2887 () Term)
(define-fun is-FStar.Pervasives.Native.tuple5 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 186) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple5 @x0 @x1 @x2 @x3 @x4)) :qid is-FStar.Pervasives.Native.tuple5))))
(define-fun is-FStar.Pervasives.Native.Mktuple5 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 193) (= __@x0 (FStar.Pervasives.Native.Mktuple5 (FStar.Pervasives.Native.Mktuple5__a __@x0) (FStar.Pervasives.Native.Mktuple5__b __@x0) (FStar.Pervasives.Native.Mktuple5__c __@x0) (FStar.Pervasives.Native.Mktuple5__d __@x0) (FStar.Pervasives.Native.Mktuple5__e __@x0) (FStar.Pervasives.Native.Mktuple5__1 __@x0) (FStar.Pervasives.Native.Mktuple5__2 __@x0) (FStar.Pervasives.Native.Mktuple5__3 __@x0) (FStar.Pervasives.Native.Mktuple5__4 __@x0) (FStar.Pervasives.Native.Mktuple5__5 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple5 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_cfa2e2c8b8b41312889ff659c4faa5f9 () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___1 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_7519f72fe101267af170e00c6ce694af () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___2 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_3e46329f224aa70981a337f98afbaa87 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___3 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_55e6dc1b736536de45fedf844003f847 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___4 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_3a4e86c6aee1a39b4811bdbc12405398 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___5 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1a78355922fdaba3f3848932dfc0a089 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple6 (Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple6@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple6@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple6@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple6@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple6@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple6@x5 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple6@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple6 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6@tok () Term)
(declare-fun Tm_arrow_f277ffaa7e891207f9c6bff5b88ffd67 () Term)
(define-fun is-FStar.Pervasives.Native.tuple6 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 209) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple6 @x0 @x1 @x2 @x3 @x4 @x5)) :qid is-FStar.Pervasives.Native.tuple6))))
(define-fun is-FStar.Pervasives.Native.Mktuple6 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 216) (= __@x0 (FStar.Pervasives.Native.Mktuple6 (FStar.Pervasives.Native.Mktuple6__a __@x0) (FStar.Pervasives.Native.Mktuple6__b __@x0) (FStar.Pervasives.Native.Mktuple6__c __@x0) (FStar.Pervasives.Native.Mktuple6__d __@x0) (FStar.Pervasives.Native.Mktuple6__e __@x0) (FStar.Pervasives.Native.Mktuple6__f __@x0) (FStar.Pervasives.Native.Mktuple6__1 __@x0) (FStar.Pervasives.Native.Mktuple6__2 __@x0) (FStar.Pervasives.Native.Mktuple6__3 __@x0) (FStar.Pervasives.Native.Mktuple6__4 __@x0) (FStar.Pervasives.Native.Mktuple6__5 __@x0) (FStar.Pervasives.Native.Mktuple6__6 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple6 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_286587a1b9d299ba75a076f54a6dad5f () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___1 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_5b1e145eeceab869b8e427e6927dbd63 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___2 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_3207475e225d584881d3e0a297482887 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___3 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_43e491b3b537a523a4f10de18b1915f5 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___4 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_f5747d5b721642d7ecb757b043f20880 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___5 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_d6501381a0206e157ecc43950bb31fea () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___6 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9c342f41120d0c7aea115b09b58cefb2 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple7 (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple7@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple7@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple7@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple7@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple7@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple7@x5 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple7@x6 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple7@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple7 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__g (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__7 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7@tok () Term)
(declare-fun Tm_arrow_37ee9ec407a0f7bb69bf1b308f74a230 () Term)
(define-fun is-FStar.Pervasives.Native.tuple7 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 234) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple7 @x0 @x1 @x2 @x3 @x4 @x5 @x6)) :qid is-FStar.Pervasives.Native.tuple7))))
(define-fun is-FStar.Pervasives.Native.Mktuple7 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 241) (= __@x0 (FStar.Pervasives.Native.Mktuple7 (FStar.Pervasives.Native.Mktuple7__a __@x0) (FStar.Pervasives.Native.Mktuple7__b __@x0) (FStar.Pervasives.Native.Mktuple7__c __@x0) (FStar.Pervasives.Native.Mktuple7__d __@x0) (FStar.Pervasives.Native.Mktuple7__e __@x0) (FStar.Pervasives.Native.Mktuple7__f __@x0) (FStar.Pervasives.Native.Mktuple7__g __@x0) (FStar.Pervasives.Native.Mktuple7__1 __@x0) (FStar.Pervasives.Native.Mktuple7__2 __@x0) (FStar.Pervasives.Native.Mktuple7__3 __@x0) (FStar.Pervasives.Native.Mktuple7__4 __@x0) (FStar.Pervasives.Native.Mktuple7__5 __@x0) (FStar.Pervasives.Native.Mktuple7__6 __@x0) (FStar.Pervasives.Native.Mktuple7__7 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple7 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_612dde2fedb1440c5d790ba7f5015319 () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple7@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___1 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_01c4488a68699f466c59799f5c1173ff () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___2 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_f317591858699585c67fe4ba8664e34c () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___3 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_44afce9d86f095aacc82b3ea2e0e223c () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___4 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_e857539d4cc5be0510cbcfb97cb64b35 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___5 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_a249d3d5ba06026b12d41e289bb88061 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___6 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_bf614c740d11cac9b5f8eb20b24c7d00 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___7 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_e775fbf03b08091e48143165286522f7 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___7@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple8 (Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@x5 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@x6 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@x7 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple8 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__g (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__h (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__7 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__8 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8@tok () Term)
(declare-fun Tm_arrow_e922a339a0aa0f375ed7113049811583 () Term)
(define-fun is-FStar.Pervasives.Native.tuple8 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 261) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple8 @x0 @x1 @x2 @x3 @x4 @x5 @x6 @x7)) :qid is-FStar.Pervasives.Native.tuple8))))
(define-fun is-FStar.Pervasives.Native.Mktuple8 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 268) (= __@x0 (FStar.Pervasives.Native.Mktuple8 (FStar.Pervasives.Native.Mktuple8__a __@x0) (FStar.Pervasives.Native.Mktuple8__b __@x0) (FStar.Pervasives.Native.Mktuple8__c __@x0) (FStar.Pervasives.Native.Mktuple8__d __@x0) (FStar.Pervasives.Native.Mktuple8__e __@x0) (FStar.Pervasives.Native.Mktuple8__f __@x0) (FStar.Pervasives.Native.Mktuple8__g __@x0) (FStar.Pervasives.Native.Mktuple8__h __@x0) (FStar.Pervasives.Native.Mktuple8__1 __@x0) (FStar.Pervasives.Native.Mktuple8__2 __@x0) (FStar.Pervasives.Native.Mktuple8__3 __@x0) (FStar.Pervasives.Native.Mktuple8__4 __@x0) (FStar.Pervasives.Native.Mktuple8__5 __@x0) (FStar.Pervasives.Native.Mktuple8__6 __@x0) (FStar.Pervasives.Native.Mktuple8__7 __@x0) (FStar.Pervasives.Native.Mktuple8__8 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple8 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_ee31533e24c78558f4566668a6ec027c () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple8@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___1 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_c971649e117e4941e7317eff508d5ea7 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___2 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_97dd51e3888c1c543d8f6c73d1808548 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___3 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_3931d1873633dc65fed4e022ee3df3ca () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___4 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_5c791e62f9472e4c351c2befb2b7a3d8 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___5 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_7ef7cac898ca0ef25893959e91d8c6ce () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___6 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_b0ae5f58a7fa002e0313b58bf5fc74cb () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___7 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_7fcd94f7549ca8acfadc26bc5b82f590 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___7@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___8 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_feaaf61fa62fef18c5ee7c39e9f86573 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___8@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple9 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@x5 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@x6 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@x7 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@x8 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple9 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__g (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__h (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__i (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__7 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__8 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__9 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9@tok () Term)
(declare-fun Tm_arrow_0c6bc368a301d7de6e1939ebea91ee60 () Term)
(define-fun is-FStar.Pervasives.Native.tuple9 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 290) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term) (@x8 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple9 @x0 @x1 @x2 @x3 @x4 @x5 @x6 @x7 @x8)) :qid is-FStar.Pervasives.Native.tuple9))))
(define-fun is-FStar.Pervasives.Native.Mktuple9 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 297) (= __@x0 (FStar.Pervasives.Native.Mktuple9 (FStar.Pervasives.Native.Mktuple9__a __@x0) (FStar.Pervasives.Native.Mktuple9__b __@x0) (FStar.Pervasives.Native.Mktuple9__c __@x0) (FStar.Pervasives.Native.Mktuple9__d __@x0) (FStar.Pervasives.Native.Mktuple9__e __@x0) (FStar.Pervasives.Native.Mktuple9__f __@x0) (FStar.Pervasives.Native.Mktuple9__g __@x0) (FStar.Pervasives.Native.Mktuple9__h __@x0) (FStar.Pervasives.Native.Mktuple9__i __@x0) (FStar.Pervasives.Native.Mktuple9__1 __@x0) (FStar.Pervasives.Native.Mktuple9__2 __@x0) (FStar.Pervasives.Native.Mktuple9__3 __@x0) (FStar.Pervasives.Native.Mktuple9__4 __@x0) (FStar.Pervasives.Native.Mktuple9__5 __@x0) (FStar.Pervasives.Native.Mktuple9__6 __@x0) (FStar.Pervasives.Native.Mktuple9__7 __@x0) (FStar.Pervasives.Native.Mktuple9__8 __@x0) (FStar.Pervasives.Native.Mktuple9__9 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple9 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9ac8f39c7b1df1e87db7c9bf5bc37a38 () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple9@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___1 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_270119cc1f13c9afeb25322d78efc328 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___2 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_3c368dee2c86a1af7bd7ea91baab7613 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___3 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_e9c745e2da3dec50930b0a7e01a11cc3 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___4 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_a82ff41c5c66cd37481c83584c94a54d () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___5 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1b3b4c5e68fdf7277f64bde93e6534de () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___6 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_837f1324f6fa51bb8a0e45ee48e4e058 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___7 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_a7562220963e3431d35de76c3c9c87b9 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___7@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___8 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_861b810bc1c20bbd221cecbce824b695 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___8@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___9 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9a54b18d8e08fdf0e20244b3f960c9dc () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___9@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple10 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x5 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x6 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x7 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x8 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x9 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple10 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__g (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__h (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__i (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__j (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__7 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__8 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__9 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__10 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10@tok () Term)
(declare-fun Tm_arrow_61d31241317018093b2245d256adbcb5 () Term)
(define-fun is-FStar.Pervasives.Native.tuple10 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 321) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term) (@x8 Term) (@x9 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple10 @x0 @x1 @x2 @x3 @x4 @x5 @x6 @x7 @x8 @x9)) :qid is-FStar.Pervasives.Native.tuple10))))
(define-fun is-FStar.Pervasives.Native.Mktuple10 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 328) (= __@x0 (FStar.Pervasives.Native.Mktuple10 (FStar.Pervasives.Native.Mktuple10__a __@x0) (FStar.Pervasives.Native.Mktuple10__b __@x0) (FStar.Pervasives.Native.Mktuple10__c __@x0) (FStar.Pervasives.Native.Mktuple10__d __@x0) (FStar.Pervasives.Native.Mktuple10__e __@x0) (FStar.Pervasives.Native.Mktuple10__f __@x0) (FStar.Pervasives.Native.Mktuple10__g __@x0) (FStar.Pervasives.Native.Mktuple10__h __@x0) (FStar.Pervasives.Native.Mktuple10__i __@x0) (FStar.Pervasives.Native.Mktuple10__j __@x0) (FStar.Pervasives.Native.Mktuple10__1 __@x0) (FStar.Pervasives.Native.Mktuple10__2 __@x0) (FStar.Pervasives.Native.Mktuple10__3 __@x0) (FStar.Pervasives.Native.Mktuple10__4 __@x0) (FStar.Pervasives.Native.Mktuple10__5 __@x0) (FStar.Pervasives.Native.Mktuple10__6 __@x0) (FStar.Pervasives.Native.Mktuple10__7 __@x0) (FStar.Pervasives.Native.Mktuple10__8 __@x0) (FStar.Pervasives.Native.Mktuple10__9 __@x0) (FStar.Pervasives.Native.Mktuple10__10 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple10 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_f27282a056f525d8710bf32204d252ec () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple10@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___1 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_c581e9177cd071a1b6e057fca49ea75b () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___2 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_ae4b2db87d7c69a8380f4d5ae20f2149 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___3 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_a21274cb112dc6619b2bde244e6a0f9a () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___4 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9a051d5cacf4367d170d590ba8bb720d () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___5 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_bbd73769b626202d4de52d4d60cd3b75 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___6 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_7ceeded5a3852448c1a5406becbd990e () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___7 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_c68947c71d484ad43cd50646c4e1daf4 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___7@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___8 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_e7b9ff90289491020fe84c6ab3bc60c6 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___8@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___9 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_6dbb3170f112f78092d1caee0b341678 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___9@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___10 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_45598a99c0a7fcc1bf2258b9ad4256cf () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___10@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple11 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x5 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x6 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x7 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x8 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x9 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x10 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple11 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__g (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__h (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__i (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__j (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__k (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__7 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__8 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__9 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__10 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__11 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11@tok () Term)
(declare-fun Tm_arrow_bf9783a1a3bf19ab918f42acff1daa32 () Term)
(define-fun is-FStar.Pervasives.Native.tuple11 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 354) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term) (@x8 Term) (@x9 Term) (@x10 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple11 @x0 @x1 @x2 @x3 @x4 @x5 @x6 @x7 @x8 @x9 @x10)) :qid is-FStar.Pervasives.Native.tuple11))))
(define-fun is-FStar.Pervasives.Native.Mktuple11 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 361) (= __@x0 (FStar.Pervasives.Native.Mktuple11 (FStar.Pervasives.Native.Mktuple11__a __@x0) (FStar.Pervasives.Native.Mktuple11__b __@x0) (FStar.Pervasives.Native.Mktuple11__c __@x0) (FStar.Pervasives.Native.Mktuple11__d __@x0) (FStar.Pervasives.Native.Mktuple11__e __@x0) (FStar.Pervasives.Native.Mktuple11__f __@x0) (FStar.Pervasives.Native.Mktuple11__g __@x0) (FStar.Pervasives.Native.Mktuple11__h __@x0) (FStar.Pervasives.Native.Mktuple11__i __@x0) (FStar.Pervasives.Native.Mktuple11__j __@x0) (FStar.Pervasives.Native.Mktuple11__k __@x0) (FStar.Pervasives.Native.Mktuple11__1 __@x0) (FStar.Pervasives.Native.Mktuple11__2 __@x0) (FStar.Pervasives.Native.Mktuple11__3 __@x0) (FStar.Pervasives.Native.Mktuple11__4 __@x0) (FStar.Pervasives.Native.Mktuple11__5 __@x0) (FStar.Pervasives.Native.Mktuple11__6 __@x0) (FStar.Pervasives.Native.Mktuple11__7 __@x0) (FStar.Pervasives.Native.Mktuple11__8 __@x0) (FStar.Pervasives.Native.Mktuple11__9 __@x0) (FStar.Pervasives.Native.Mktuple11__10 __@x0) (FStar.Pervasives.Native.Mktuple11__11 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple11 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_005819ee7a23a5c47189bae72b85d85c () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple11@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___1 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_31968e334e9582d95281307f534992a9 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___2 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_6252dd9f4473dc54a3482810e8556404 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___3 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_ec3ce6b7406c091cd7d0961922bb5a02 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___4 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_be7571e73b0e7fc24d03efe0e003c054 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___5 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_97ae7d913e508c46c48c3b51553d4459 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___6 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1dca311798936510e0ead61e14cf32a6 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___7 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_eec431ea31093a646681ef2ceb2e2986 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___7@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___8 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_689b2f06e9fd83f7a84ce80a13d338c6 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___8@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___9 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_20210a3d9498f929cb7aa68d9e8b5ebf () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___9@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___10 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_96812f2124d88760b2002bbe1502c3c9 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___10@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___11 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_abcfa2582f68905d460c5ef4a7642f2d () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___11@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple12 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x5 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x6 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x7 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x8 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x9 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x10 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x11 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple12 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__g (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__h (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__i (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__j (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__k (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__l (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__7 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__8 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__9 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__10 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__11 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__12 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12@tok () Term)
(declare-fun Tm_arrow_4d5cd995d6f44a2ec39d0f193be0be65 () Term)
(define-fun is-FStar.Pervasives.Native.tuple12 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 389) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term) (@x8 Term) (@x9 Term) (@x10 Term) (@x11 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple12 @x0 @x1 @x2 @x3 @x4 @x5 @x6 @x7 @x8 @x9 @x10 @x11)) :qid is-FStar.Pervasives.Native.tuple12))))
(define-fun is-FStar.Pervasives.Native.Mktuple12 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 396) (= __@x0 (FStar.Pervasives.Native.Mktuple12 (FStar.Pervasives.Native.Mktuple12__a __@x0) (FStar.Pervasives.Native.Mktuple12__b __@x0) (FStar.Pervasives.Native.Mktuple12__c __@x0) (FStar.Pervasives.Native.Mktuple12__d __@x0) (FStar.Pervasives.Native.Mktuple12__e __@x0) (FStar.Pervasives.Native.Mktuple12__f __@x0) (FStar.Pervasives.Native.Mktuple12__g __@x0) (FStar.Pervasives.Native.Mktuple12__h __@x0) (FStar.Pervasives.Native.Mktuple12__i __@x0) (FStar.Pervasives.Native.Mktuple12__j __@x0) (FStar.Pervasives.Native.Mktuple12__k __@x0) (FStar.Pervasives.Native.Mktuple12__l __@x0) (FStar.Pervasives.Native.Mktuple12__1 __@x0) (FStar.Pervasives.Native.Mktuple12__2 __@x0) (FStar.Pervasives.Native.Mktuple12__3 __@x0) (FStar.Pervasives.Native.Mktuple12__4 __@x0) (FStar.Pervasives.Native.Mktuple12__5 __@x0) (FStar.Pervasives.Native.Mktuple12__6 __@x0) (FStar.Pervasives.Native.Mktuple12__7 __@x0) (FStar.Pervasives.Native.Mktuple12__8 __@x0) (FStar.Pervasives.Native.Mktuple12__9 __@x0) (FStar.Pervasives.Native.Mktuple12__10 __@x0) (FStar.Pervasives.Native.Mktuple12__11 __@x0) (FStar.Pervasives.Native.Mktuple12__12 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple12 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_5c9f47d9090f554c9826d2f65e388f20 () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple12@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___1 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_618941d7cf5ddbaabe15df8579b4a387 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___2 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_84e9e2280e9bcb3233e4f33f86d66ea6 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___3 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1fa79c5abf9f18607bd2e46a1a6967fa () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___4 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_0f49c582489d782b08195e81221181dc () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___5 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_29b7181ebb44f9e4a45f95c4f8478c6a () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___6 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_3cc2863a7d7f23e3916fa1e43483cb90 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___7 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_c7deea49701ab64a73985bf522e46359 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___7@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___8 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_380615e7761919086537a14273a02d22 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___8@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___9 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_245250918a4432b31aea8152d056489a () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___9@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___10 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_2a967c8402c441e6d8a9336a7568e4de () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___10@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___11 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_543c3feac0cd9e04ecb6cfd74ced8964 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___11@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___12 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_e91029e2320896c60e94f554727a0c41 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___12@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple13 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x5 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x6 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x7 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x8 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x9 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x10 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x11 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x12 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple13 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__g (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__h (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__i (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__j (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__k (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__l (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__m (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__7 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__8 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__9 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__10 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__11 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__12 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__13 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13@tok () Term)
(declare-fun Tm_arrow_6462785e86ca440ee74ed32e1053eae3 () Term)
(define-fun is-FStar.Pervasives.Native.tuple13 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 426) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term) (@x8 Term) (@x9 Term) (@x10 Term) (@x11 Term) (@x12 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple13 @x0 @x1 @x2 @x3 @x4 @x5 @x6 @x7 @x8 @x9 @x10 @x11 @x12)) :qid is-FStar.Pervasives.Native.tuple13))))
(define-fun is-FStar.Pervasives.Native.Mktuple13 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 433) (= __@x0 (FStar.Pervasives.Native.Mktuple13 (FStar.Pervasives.Native.Mktuple13__a __@x0) (FStar.Pervasives.Native.Mktuple13__b __@x0) (FStar.Pervasives.Native.Mktuple13__c __@x0) (FStar.Pervasives.Native.Mktuple13__d __@x0) (FStar.Pervasives.Native.Mktuple13__e __@x0) (FStar.Pervasives.Native.Mktuple13__f __@x0) (FStar.Pervasives.Native.Mktuple13__g __@x0) (FStar.Pervasives.Native.Mktuple13__h __@x0) (FStar.Pervasives.Native.Mktuple13__i __@x0) (FStar.Pervasives.Native.Mktuple13__j __@x0) (FStar.Pervasives.Native.Mktuple13__k __@x0) (FStar.Pervasives.Native.Mktuple13__l __@x0) (FStar.Pervasives.Native.Mktuple13__m __@x0) (FStar.Pervasives.Native.Mktuple13__1 __@x0) (FStar.Pervasives.Native.Mktuple13__2 __@x0) (FStar.Pervasives.Native.Mktuple13__3 __@x0) (FStar.Pervasives.Native.Mktuple13__4 __@x0) (FStar.Pervasives.Native.Mktuple13__5 __@x0) (FStar.Pervasives.Native.Mktuple13__6 __@x0) (FStar.Pervasives.Native.Mktuple13__7 __@x0) (FStar.Pervasives.Native.Mktuple13__8 __@x0) (FStar.Pervasives.Native.Mktuple13__9 __@x0) (FStar.Pervasives.Native.Mktuple13__10 __@x0) (FStar.Pervasives.Native.Mktuple13__11 __@x0) (FStar.Pervasives.Native.Mktuple13__12 __@x0) (FStar.Pervasives.Native.Mktuple13__13 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple13 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_68c092e8b387730b412c4dcf592b12d3 () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple13@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___1 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_82a3dc3a5dbad615d8d4a31db238e43f () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___2 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1da976aaa65f1c6b8b256dfc45c41306 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___3 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_ca5cf529c415deee29e0a34c0c5d1c9f () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___4 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_94f6c578541b6cb528ca9e7dd1dacc3b () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___5 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_211e172b7220adc186d8a02ff17e8780 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___6 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9276a4f669d8497205e8d59f12da53ba () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___7 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_8aa8f381a5ed57cbbae9dcd2405ce80f () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___7@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___8 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_51814106613688cf259d7cdba9c24d93 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___8@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___9 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_05fec25e6f03f974bb2933a910642d7e () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___9@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___10 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_3280ee04611a7985c9d107bb1a8a330a () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___10@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___11 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_86c868d5d5058e8e5ec1f4d0285c7e90 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___11@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___12 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_7263c1a3c4475bb4e4b41a1be4bf22da () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___12@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___13 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_338c65ae58844787891c6f47cf01c068 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___13@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple14 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x5 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x6 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x7 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x8 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x9 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x10 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x11 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x12 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x13 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple14 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__g (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__h (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__i (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__j (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__k (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__l (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__m (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__n (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__7 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__8 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__9 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__10 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__11 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__12 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__13 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__14 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14@tok () Term)
(declare-fun Tm_arrow_484e3bf88a886900f7e695d7333615e9 () Term)
(define-fun is-FStar.Pervasives.Native.tuple14 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 465) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term) (@x8 Term) (@x9 Term) (@x10 Term) (@x11 Term) (@x12 Term) (@x13 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple14 @x0 @x1 @x2 @x3 @x4 @x5 @x6 @x7 @x8 @x9 @x10 @x11 @x12 @x13)) :qid is-FStar.Pervasives.Native.tuple14))))
(define-fun is-FStar.Pervasives.Native.Mktuple14 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 472) (= __@x0 (FStar.Pervasives.Native.Mktuple14 (FStar.Pervasives.Native.Mktuple14__a __@x0) (FStar.Pervasives.Native.Mktuple14__b __@x0) (FStar.Pervasives.Native.Mktuple14__c __@x0) (FStar.Pervasives.Native.Mktuple14__d __@x0) (FStar.Pervasives.Native.Mktuple14__e __@x0) (FStar.Pervasives.Native.Mktuple14__f __@x0) (FStar.Pervasives.Native.Mktuple14__g __@x0) (FStar.Pervasives.Native.Mktuple14__h __@x0) (FStar.Pervasives.Native.Mktuple14__i __@x0) (FStar.Pervasives.Native.Mktuple14__j __@x0) (FStar.Pervasives.Native.Mktuple14__k __@x0) (FStar.Pervasives.Native.Mktuple14__l __@x0) (FStar.Pervasives.Native.Mktuple14__m __@x0) (FStar.Pervasives.Native.Mktuple14__n __@x0) (FStar.Pervasives.Native.Mktuple14__1 __@x0) (FStar.Pervasives.Native.Mktuple14__2 __@x0) (FStar.Pervasives.Native.Mktuple14__3 __@x0) (FStar.Pervasives.Native.Mktuple14__4 __@x0) (FStar.Pervasives.Native.Mktuple14__5 __@x0) (FStar.Pervasives.Native.Mktuple14__6 __@x0) (FStar.Pervasives.Native.Mktuple14__7 __@x0) (FStar.Pervasives.Native.Mktuple14__8 __@x0) (FStar.Pervasives.Native.Mktuple14__9 __@x0) (FStar.Pervasives.Native.Mktuple14__10 __@x0) (FStar.Pervasives.Native.Mktuple14__11 __@x0) (FStar.Pervasives.Native.Mktuple14__12 __@x0) (FStar.Pervasives.Native.Mktuple14__13 __@x0) (FStar.Pervasives.Native.Mktuple14__14 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple14 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_2de133cfaca100fc23d8bf4b3421db9a () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple14@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___1 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_2e3216cab266e138debd68d0a503c177 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___2 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_958b0270e487d0bf5fe9191b9efaa127 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___3 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_08349f596f8c0acf60d1587bebe8c91b () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___4 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_2b069168147ba0f67f117ad5b0ac078b () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___5 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1e38bb16245a24a197c44a262fee7bf1 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___6 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_7a148953a3884454d8a1dffddce086bb () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___7 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_812eeb3fdab56dfea8e419236740acb0 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___7@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___8 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9dc932ce7cdfd6fa57f6536787fcb65b () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___8@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___9 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_2600722933f06bc55e28bb3fc2ce4a6a () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___9@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___10 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_f51203e57fd66f9e9293b8962c57edfe () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___10@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___11 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_7c34e0c28edc5fc4ad24d0b749c0adb7 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___11@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___12 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_8772cc50ea320af17b3f2371c273679a () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___12@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___13 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_039da0b9a8da1a651a1c570e55456614 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___13@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___14 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_579ada2eb036c15c7306dac5b648153e () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___14@tok () Term)
(declare-fun FStar.Pervasives.remove_unused_type_parameters (Term) Term)
(declare-fun Tm_arrow_555d62757eeaf90340982fcdf25f6704 () Term)
(declare-fun FStar.Pervasives.remove_unused_type_parameters@tok () Term)
(declare-fun FStar.Pervasives.pattern () Term)
(declare-fun FStar.Pervasives.smt_pat (Term Term) Term)
(declare-fun Tm_arrow_ce7b692455ad1649f97902066cf7c9aa () Term)
(declare-fun FStar.Pervasives.smt_pat@tok () Term)
(declare-fun FStar.Pervasives.smt_pat_or (Term) Term)
(declare-fun Tm_arrow_cbfaca2770c8ef7d6393b664b7ea1a41 () Term)
(declare-fun FStar.Pervasives.smt_pat_or@tok () Term)
(declare-fun FStar.Pervasives.spinoff (Term) Term)
(declare-fun FStar.Pervasives.spinoff@tok () Term)
(declare-fun FStar.Pervasives.assert_spinoff (Term) Term)
(declare-fun Tm_arrow_071538fd1c72fb82c7bb7b280daddf84 () Term)
(declare-fun FStar.Pervasives.assert_spinoff@tok () Term)
(declare-fun FStar.Pervasives.id (Term Term) Term)
(declare-fun FStar.Pervasives.id@tok () Term)
(declare-fun FStar.Pervasives.trivial_pure_post (Term) Term)
(declare-fun Tm_arrow_53823f439377767fbcd3e27ebcdb971b () Term)
(declare-fun FStar.Pervasives.trivial_pure_post@tok () Term)
(declare-fun Tm_abs_5e34897418ce4950a4effcc8c159cf53 (Term) Term)
(declare-fun FStar.Pervasives.ambient (Term Term) Term)
(declare-fun Tm_arrow_9e007179360e2932d75ab29019e3d7fa () Term)
(declare-fun FStar.Pervasives.ambient@tok () Term)
(declare-fun FStar.Pervasives.intro_ambient (Term Term) Term)
(declare-fun Tm_arrow_6fc6334d56387f3d408122a4bd045e7e () Term)
(declare-fun FStar.Pervasives.intro_ambient@tok () Term)
(declare-fun FStar.Pervasives.st_pre_h (Term) Term)
(declare-fun FStar.Pervasives.st_pre_h@tok () Term)
(declare-fun FStar.Pervasives.st_post_h_ (Term Term Term) Term)
(declare-fun Tm_arrow_659175ed40df3b798f91ffaee9e689bd () Term)
(declare-fun FStar.Pervasives.st_post_h_@tok () Term)
(declare-fun Tm_arrow_14435f7112db17792f8cd33f8f7ea859 (Term Term Term) Term)
(declare-fun FStar.Pervasives.st_post_h (Term Term) Term)
(declare-fun FStar.Pervasives.st_post_h@tok () Term)
(declare-fun FStar.Pervasives.st_wp_h (Term Term) Term)
(declare-fun FStar.Pervasives.st_wp_h@tok () Term)
(declare-fun Tm_arrow_c80b139653078194d2de90941effdc68 (Term Term) Term)
(declare-fun FStar.Pervasives.st_return (Term Term Term Term) Term)
(declare-fun Tm_arrow_6bfe4bf6faf1fb53a521d575cefc35ef () Term)
(declare-fun FStar.Pervasives.st_return@tok () Term)
(declare-fun Tm_arrow_c6e0af8c2ccbdda79db5c09d07e87e35 (Term Term Term) Term)
(declare-fun FStar.Pervasives.st_bind_wp (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_f06c598be842ca5b0249b52c3e190418 () Term)
(declare-fun FStar.Pervasives.st_bind_wp@tok () Term)
(declare-fun Tm_arrow_eb9b1a038524b37579c152a3f169145e (Term Term) Term)
(declare-fun Tm_abs_0f3b5ee9eaa8de8cacad7d3dcacb4558 (Term Term Term Term) Term)
(declare-fun FStar.Pervasives.st_if_then_else (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_6e48361e1a1c92df6ec1ff87e622ddad () Term)
(declare-fun FStar.Pervasives.st_if_then_else@tok () Term)
(declare-fun FStar.Pervasives.st_ite_wp (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_eaad896c6afdcb7ade2e80b5a6a930af () Term)
(declare-fun FStar.Pervasives.st_ite_wp@tok () Term)
(declare-fun FStar.Pervasives.st_stronger (Term Term Term Term) Term)
(declare-fun Tm_arrow_ae4d7f489de84317e0022bf89d45dd95 () Term)
(declare-fun FStar.Pervasives.st_stronger@tok () Term)
(declare-fun FStar.Pervasives.st_close_wp (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_de6d3045642382698e9e38d41acfd7cc () Term)
(declare-fun FStar.Pervasives.st_close_wp@tok () Term)
(declare-fun FStar.Pervasives.st_trivial (Term Term Term) Term)
(declare-fun Tm_arrow_f145e04ff3c7033bdfc718f7f5bb1df0 () Term)
(declare-fun FStar.Pervasives.st_trivial@tok () Term)
(declare-fun Tm_abs_89b21c42be5bc00d63e29f63ae20d4e2 (Term Term) Term)
(declare-fun FStar.Pervasives.result (Term) Term)
(declare-fun FStar.Pervasives.result@x0 (Term) Term)
(declare-fun FStar.Pervasives.result@tok () Term)
(declare-fun FStar.Pervasives.V (Term Term) Term)
(declare-fun FStar.Pervasives.V_a (Term) Term)
(declare-fun FStar.Pervasives.V_v (Term) Term)
(declare-fun FStar.Pervasives.V@tok () Term)
(declare-fun FStar.Pervasives.E (Term Term) Term)
(declare-fun FStar.Pervasives.E_a (Term) Term)
(declare-fun FStar.Pervasives.E_e (Term) Term)
(declare-fun FStar.Pervasives.E@tok () Term)
(declare-fun FStar.Pervasives.Err (Term Term) Term)
(declare-fun FStar.Pervasives.Err_a (Term) Term)
(declare-fun FStar.Pervasives.Err_msg (Term) Term)
(declare-fun FStar.Pervasives.Err@tok () Term)
(declare-fun Tm_arrow_30908143640041985b9200e2fb38a259 () Term)
(declare-fun Tm_arrow_f8bb10130fea772e0f786d78a188c381 () Term)
(declare-fun Tm_arrow_93661c87034b0b64c4714dafbe2b02e6 () Term)
(define-fun is-FStar.Pervasives.result ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 172) (exists ((@x0 Term)) (! (= __@x0 (FStar.Pervasives.result @x0)) :qid is-FStar.Pervasives.result))))
(define-fun is-FStar.Pervasives.V ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 179) (= __@x0 (FStar.Pervasives.V (FStar.Pervasives.V_a __@x0) (FStar.Pervasives.V_v __@x0)))))
(define-fun is-FStar.Pervasives.E ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 184) (= __@x0 (FStar.Pervasives.E (FStar.Pervasives.E_a __@x0) (FStar.Pervasives.E_e __@x0)))))
(define-fun is-FStar.Pervasives.Err ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 189) (= __@x0 (FStar.Pervasives.Err (FStar.Pervasives.Err_a __@x0) (FStar.Pervasives.Err_msg __@x0)))))
(declare-fun FStar.Pervasives.uu___is_V (Term Term) Term)
(declare-fun Tm_arrow_5cd1d0722a6a986faf6f8e557186fe24 () Term)
(declare-fun FStar.Pervasives.uu___is_V@tok () Term)
(declare-fun Tm_refine_9db520b26a7f39c5a01493a3f375290d (Term) Term)
(declare-fun FStar.Pervasives.__proj__V__item__v (Term Term) Term)
(declare-fun Tm_arrow_1ea119bf213c016916a7095486e28467 () Term)
(declare-fun FStar.Pervasives.__proj__V__item__v@tok () Term)
(declare-fun FStar.Pervasives.uu___is_E (Term Term) Term)
(declare-fun FStar.Pervasives.uu___is_E@tok () Term)
(declare-fun Tm_refine_95e1e2ee29104754cc3740f5575fc6e5 (Term) Term)
(declare-fun FStar.Pervasives.__proj__E__item__e (Term Term) Term)
(declare-fun Tm_arrow_19e73c373dbf3f9945c6fcfce8a07661 () Term)
(declare-fun FStar.Pervasives.__proj__E__item__e@tok () Term)
(declare-fun FStar.Pervasives.uu___is_Err (Term Term) Term)
(declare-fun FStar.Pervasives.uu___is_Err@tok () Term)
(declare-fun Tm_refine_22fb403854eba07427f92e79848f9d9f (Term) Term)
(declare-fun FStar.Pervasives.__proj__Err__item__msg (Term Term) Term)
(declare-fun Tm_arrow_f7e3debb858e412c9497460c5187d5cd () Term)
(declare-fun FStar.Pervasives.__proj__Err__item__msg@tok () Term)
(declare-fun FStar.Pervasives.ex_pre () Term)
(declare-fun FStar.Pervasives.ex_post_ (Term Term) Term)
(declare-fun FStar.Pervasives.ex_post_@tok () Term)
(declare-fun Tm_refine_a4dcdeeacbcb04d05a6720f786918fd6 (Term Term) Term)
(declare-fun Tm_arrow_68b66d987e8a7bdf825af8b370553e65 (Term Term) Term)
(declare-fun FStar.Pervasives.ex_post (Term) Term)
(declare-fun FStar.Pervasives.ex_post@tok () Term)
(declare-fun FStar.Pervasives.ex_wp (Term) Term)
(declare-fun FStar.Pervasives.ex_wp@tok () Term)
(declare-fun Tm_arrow_58168e52ae0908fefec42cac825ecc69 (Term) Term)
(declare-fun FStar.Pervasives.ex_return (Term Term Term) Term)
(declare-fun Tm_arrow_375264f6f19b4e37d33ffba9f6b1c7d2 () Term)
(declare-fun FStar.Pervasives.ex_return@tok () Term)
(declare-fun Tm_arrow_3eb2992a529511f5b0ff2fef4e4594ad (Term Term) Term)
(declare-fun FStar.Pervasives.ex_bind_wp (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_627f53cf48815f6216201f0583636724 () Term)
(declare-fun FStar.Pervasives.ex_bind_wp@tok () Term)
(declare-fun Tm_arrow_ca5db633696caf7e0cd44c11654eed8b (Term) Term)
(declare-fun Tm_abs_c1d9037a5cc10cc07ba9b6a7a58728db (Term Term Term Term) Term)
(declare-fun FStar.Pervasives.ex_if_then_else (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_08bd7ce530cc6e8b4a3f8dadbd0806b0 () Term)
(declare-fun FStar.Pervasives.ex_if_then_else@tok () Term)
(declare-fun FStar.Pervasives.ex_ite_wp (Term Term Term) Term)
(declare-fun Tm_arrow_c2a8c761b16a75376b24262cd8c50369 () Term)
(declare-fun FStar.Pervasives.ex_ite_wp@tok () Term)
(declare-fun FStar.Pervasives.ex_stronger (Term Term Term) Term)
(declare-fun Tm_arrow_1376d97b5d43e7d77d56729e2a3e04af () Term)
(declare-fun FStar.Pervasives.ex_stronger@tok () Term)
(declare-fun FStar.Pervasives.ex_close_wp (Term Term Term Term) Term)
(declare-fun Tm_arrow_814af0adff92aa08c5b8b0951bcb1959 () Term)
(declare-fun FStar.Pervasives.ex_close_wp@tok () Term)
(declare-fun FStar.Pervasives.ex_trivial (Term Term) Term)
(declare-fun Tm_arrow_ee4a787765920b0cb4357a47a0d3ac5c () Term)
(declare-fun FStar.Pervasives.ex_trivial@tok () Term)
(declare-fun Tm_abs_5cc223716d095f4545f0dcc745acad5d (Term) Term)
(declare-fun FStar.Pervasives.lift_div_exn (Term Term Term) Term)
(declare-fun Tm_arrow_8196682216f286f6fe3a7dffb3de7d02 () Term)
(declare-fun FStar.Pervasives.lift_div_exn@tok () Term)
(declare-fun Tm_abs_c2b605ddd5d1991642baf5762d2b1dc5 (Term Term) Term)
(declare-fun FStar.Pervasives.all_pre_h (Term) Term)
(declare-fun FStar.Pervasives.all_pre_h@tok () Term)
(declare-fun FStar.Pervasives.all_post_h_ (Term Term Term) Term)
(declare-fun FStar.Pervasives.all_post_h_@tok () Term)
(declare-fun Tm_arrow_fc269489cb2e24a10c7710a1f7f9d269 (Term Term Term) Term)
(declare-fun FStar.Pervasives.all_post_h (Term Term) Term)
(declare-fun FStar.Pervasives.all_post_h@tok () Term)
(declare-fun FStar.Pervasives.all_wp_h (Term Term) Term)
(declare-fun FStar.Pervasives.all_wp_h@tok () Term)
(declare-fun Tm_arrow_1cd90c71d90a216d9fb0ba0321a1d3b5 (Term Term) Term)
(declare-fun FStar.Pervasives.all_return (Term Term Term Term) Term)
(declare-fun Tm_arrow_3f61557667800fb54cc62e48a5201f9d () Term)
(declare-fun FStar.Pervasives.all_return@tok () Term)
(declare-fun Tm_arrow_b567b509414635f00096b9b1c3e30b57 (Term Term Term) Term)
(declare-fun FStar.Pervasives.all_bind_wp (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_27354558e07d00e058824d7a847efedd () Term)
(declare-fun FStar.Pervasives.all_bind_wp@tok () Term)
(declare-fun Tm_arrow_59cac8a9b1ae3aa9511b8a867f8e934e (Term Term) Term)
(declare-fun Tm_abs_35ddc99cefc0079215f6f6ab3c58856d (Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.all_if_then_else (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_491eee2c8dc4eab4d420326a8285d2c4 () Term)
(declare-fun FStar.Pervasives.all_if_then_else@tok () Term)
(declare-fun FStar.Pervasives.all_ite_wp (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_20fdb4e6d0c32f949f55e39a059913a7 () Term)
(declare-fun FStar.Pervasives.all_ite_wp@tok () Term)
(declare-fun FStar.Pervasives.all_stronger (Term Term Term Term) Term)
(declare-fun Tm_arrow_073b21d0ec8edf2dda32907b45ec5f68 () Term)
(declare-fun FStar.Pervasives.all_stronger@tok () Term)
(declare-fun FStar.Pervasives.all_close_wp (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_803d195802308e8beadf04438d3a6508 () Term)
(declare-fun FStar.Pervasives.all_close_wp@tok () Term)
(declare-fun FStar.Pervasives.all_trivial (Term Term Term) Term)
(declare-fun Tm_arrow_957927b0d25001784693eee8b2182308 () Term)
(declare-fun FStar.Pervasives.all_trivial@tok () Term)
(declare-fun Tm_abs_22e463dbd987016e31d6bc67025a7cd9 (Term Term) Term)
(declare-fun FStar.Pervasives.inversion (Term) Term)
(declare-fun FStar.Pervasives.inversion@tok () Term)
(declare-fun FStar.Pervasives.allow_inversion (Term) Term)
(declare-fun Tm_refine_363615bee79fae5066b7c8bd06c286d0 (Term) Term)
(declare-fun Tm_arrow_bcab9cce464ec0f76562bc48c17ba410 () Term)
(declare-fun FStar.Pervasives.allow_inversion@tok () Term)
(declare-fun FStar.Pervasives.invertOption (Term) Term)
(declare-fun FStar.Pervasives.invertOption@tok () Term)
(declare-fun FStar.Pervasives.either (Term Term) Term)
(declare-fun FStar.Pervasives.either@x0 (Term) Term)
(declare-fun FStar.Pervasives.either@x1 (Term) Term)
(declare-fun FStar.Pervasives.either@tok () Term)
(declare-fun FStar.Pervasives.Inl (Term Term Term) Term)
(declare-fun FStar.Pervasives.Inl_a (Term) Term)
(declare-fun FStar.Pervasives.Inl_b (Term) Term)
(declare-fun FStar.Pervasives.Inl_v (Term) Term)
(declare-fun FStar.Pervasives.Inl@tok () Term)
(declare-fun FStar.Pervasives.Inr (Term Term Term) Term)
(declare-fun FStar.Pervasives.Inr_a (Term) Term)
(declare-fun FStar.Pervasives.Inr_b (Term) Term)
(declare-fun FStar.Pervasives.Inr_v (Term) Term)
(declare-fun FStar.Pervasives.Inr@tok () Term)
(declare-fun Tm_arrow_065da0adeba0c4ae0da1476ececee84c () Term)
(declare-fun Tm_arrow_c883938642e6d97d79c975d8d94b4aac () Term)
(define-fun is-FStar.Pervasives.either ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 311) (exists ((@x0 Term) (@x1 Term)) (! (= __@x0 (FStar.Pervasives.either @x0 @x1)) :qid is-FStar.Pervasives.either))))
(define-fun is-FStar.Pervasives.Inl ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 318) (= __@x0 (FStar.Pervasives.Inl (FStar.Pervasives.Inl_a __@x0) (FStar.Pervasives.Inl_b __@x0) (FStar.Pervasives.Inl_v __@x0)))))
(define-fun is-FStar.Pervasives.Inr ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 323) (= __@x0 (FStar.Pervasives.Inr (FStar.Pervasives.Inr_a __@x0) (FStar.Pervasives.Inr_b __@x0) (FStar.Pervasives.Inr_v __@x0)))))
(declare-fun FStar.Pervasives.uu___is_Inl (Term Term Term) Term)
(declare-fun Tm_arrow_af0c68f1e39d4d6020c0873b16730c7d () Term)
(declare-fun FStar.Pervasives.uu___is_Inl@tok () Term)
(declare-fun Tm_refine_85e0cc884f8457202f90cd77f23733ba (Term Term) Term)
(declare-fun FStar.Pervasives.__proj__Inl__item__v (Term Term Term) Term)
(declare-fun Tm_arrow_a80e0750277867ba1a434ad3bba8702d () Term)
(declare-fun FStar.Pervasives.__proj__Inl__item__v@tok () Term)
(declare-fun FStar.Pervasives.uu___is_Inr (Term Term Term) Term)
(declare-fun FStar.Pervasives.uu___is_Inr@tok () Term)
(declare-fun Tm_refine_8f1f5f564dae90240db429de2eb41517 (Term Term) Term)
(declare-fun FStar.Pervasives.__proj__Inr__item__v (Term Term Term) Term)
(declare-fun Tm_arrow_df618db6b42762940f198036c8a56200 () Term)
(declare-fun FStar.Pervasives.__proj__Inr__item__v@tok () Term)
(declare-fun FStar.Pervasives.dfst (Term Term Term) Term)
(declare-fun FStar.Pervasives.dfst@tok () Term)
(declare-fun FStar.Pervasives.dsnd (Term Term Term) Term)
(declare-fun FStar.Pervasives.dsnd@tok () Term)
(declare-fun FStar.Pervasives.dtuple3 (Term Term Term) Term)
(declare-fun FStar.Pervasives.dtuple3@x0 (Term) Term)
(declare-fun FStar.Pervasives.dtuple3@x1 (Term) Term)
(declare-fun FStar.Pervasives.dtuple3@x2 (Term) Term)
(declare-fun FStar.Pervasives.dtuple3@tok () Term)
(declare-fun FStar.Pervasives.Mkdtuple3 (Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3_a (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3_b (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3_c (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3__1 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3__2 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3__3 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3@tok () Term)
(declare-fun Tm_arrow_0b6559e6ff3addf84b0c2880affbb335 (Term Term) Term)
(declare-fun Tm_arrow_8423f67df62f9e824c55756f9e26058d () Term)
(define-fun is-FStar.Pervasives.dtuple3 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 359) (exists ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= __@x0 (FStar.Pervasives.dtuple3 @x0 @x1 @x2)) :qid is-FStar.Pervasives.dtuple3))))
(define-fun is-FStar.Pervasives.Mkdtuple3 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 370) (= __@x0 (FStar.Pervasives.Mkdtuple3 (FStar.Pervasives.Mkdtuple3_a __@x0) (FStar.Pervasives.Mkdtuple3_b __@x0) (FStar.Pervasives.Mkdtuple3_c __@x0) (FStar.Pervasives.Mkdtuple3__1 __@x0) (FStar.Pervasives.Mkdtuple3__2 __@x0) (FStar.Pervasives.Mkdtuple3__3 __@x0)))))
(declare-fun FStar.Pervasives.uu___is_Mkdtuple3 (Term Term Term Term) Term)
(declare-fun Tm_arrow_70452cb82cd0a282ca9a2dbeb54c1b04 () Term)
(declare-fun FStar.Pervasives.uu___is_Mkdtuple3@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple3__item___1 (Term Term Term Term) Term)
(declare-fun Tm_arrow_255f0cfe499b1d2e9836e157bce1dba3 () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple3__item___1@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple3__item___2 (Term Term Term Term) Term)
(declare-fun Tm_arrow_ea1ded11f7d194a26e812f407333a011 () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple3__item___2@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple3__item___3 (Term Term Term Term) Term)
(declare-fun Tm_arrow_1d7ad5cfa0fff643640e3f74466d283e () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple3__item___3@tok () Term)
(declare-fun FStar.Pervasives.dtuple4 (Term Term Term Term) Term)
(declare-fun FStar.Pervasives.dtuple4@x0 (Term) Term)
(declare-fun FStar.Pervasives.dtuple4@x1 (Term) Term)
(declare-fun FStar.Pervasives.dtuple4@x2 (Term) Term)
(declare-fun FStar.Pervasives.dtuple4@x3 (Term) Term)
(declare-fun FStar.Pervasives.dtuple4@tok () Term)
(declare-fun FStar.Pervasives.Mkdtuple4 (Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4_a (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4_b (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4_c (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4_d (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4__1 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4__2 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4__3 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4__4 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4@tok () Term)
(declare-fun Tm_arrow_af8eda99ba3685403be22a88669dcb35 (Term Term Term) Term)
(declare-fun Tm_arrow_cef44a6056754f192c2446237c4c1408 () Term)
(define-fun is-FStar.Pervasives.dtuple4 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 432) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= __@x0 (FStar.Pervasives.dtuple4 @x0 @x1 @x2 @x3)) :qid is-FStar.Pervasives.dtuple4))))
(define-fun is-FStar.Pervasives.Mkdtuple4 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 445) (= __@x0 (FStar.Pervasives.Mkdtuple4 (FStar.Pervasives.Mkdtuple4_a __@x0) (FStar.Pervasives.Mkdtuple4_b __@x0) (FStar.Pervasives.Mkdtuple4_c __@x0) (FStar.Pervasives.Mkdtuple4_d __@x0) (FStar.Pervasives.Mkdtuple4__1 __@x0) (FStar.Pervasives.Mkdtuple4__2 __@x0) (FStar.Pervasives.Mkdtuple4__3 __@x0) (FStar.Pervasives.Mkdtuple4__4 __@x0)))))
(declare-fun FStar.Pervasives.uu___is_Mkdtuple4 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_76a226dc2cea2ddd4e4258637fc95e5b () Term)
(declare-fun FStar.Pervasives.uu___is_Mkdtuple4@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___1 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1da4d60ab69f411b912e76cc25e77965 () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___1@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___2 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_a86867091548f3d7d3ca1cb8b0458b9f () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___2@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___3 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_ee72552fcc293405aa0e854ba26f27ac () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___3@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___4 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_6c79def96aa5d5d9eb9555c48dd9ebb6 () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___4@tok () Term)
(declare-fun FStar.Pervasives.ignore (Term Term) Term)
(declare-fun Tm_arrow_962476a7eea46a6ffc9b658c6d8fbc71 () Term)
(declare-fun FStar.Pervasives.ignore@tok () Term)
(declare-fun Tm_refine_f1ecc6ab6882a651504f328937700647 () Term)
(declare-fun FStar.Pervasives.false_elim (Term Term) Term)
(declare-fun Tm_arrow_7636fbfab5cd88ba06f60c10ea8caef2 () Term)
(declare-fun FStar.Pervasives.false_elim@tok () Term)
(declare-fun FStar.Pervasives.__internal_ocaml_attributes () Term)
(declare-fun FStar.Pervasives.PpxDerivingShow () Term)
(declare-fun FStar.Pervasives.PpxDerivingShow@tok () Term)
(declare-fun FStar.Pervasives.PpxDerivingShowConstant (Term) Term)
(declare-fun FStar.Pervasives.PpxDerivingShowConstant__0 (Term) Term)
(declare-fun FStar.Pervasives.PpxDerivingShowConstant@tok () Term)
(declare-fun FStar.Pervasives.PpxDerivingYoJson () Term)
(declare-fun FStar.Pervasives.PpxDerivingYoJson@tok () Term)
(declare-fun FStar.Pervasives.CInline () Term)
(declare-fun FStar.Pervasives.CInline@tok () Term)
(declare-fun FStar.Pervasives.Substitute () Term)
(declare-fun FStar.Pervasives.Substitute@tok () Term)
(declare-fun FStar.Pervasives.Gc () Term)
(declare-fun FStar.Pervasives.Gc@tok () Term)
(declare-fun FStar.Pervasives.Comment (Term) Term)
(declare-fun FStar.Pervasives.Comment__0 (Term) Term)
(declare-fun FStar.Pervasives.Comment@tok () Term)
(declare-fun FStar.Pervasives.CPrologue (Term) Term)
(declare-fun FStar.Pervasives.CPrologue__0 (Term) Term)
(declare-fun FStar.Pervasives.CPrologue@tok () Term)
(declare-fun FStar.Pervasives.CEpilogue (Term) Term)
(declare-fun FStar.Pervasives.CEpilogue__0 (Term) Term)
(declare-fun FStar.Pervasives.CEpilogue@tok () Term)
(declare-fun FStar.Pervasives.CConst (Term) Term)
(declare-fun FStar.Pervasives.CConst__0 (Term) Term)
(declare-fun FStar.Pervasives.CConst@tok () Term)
(declare-fun FStar.Pervasives.CCConv (Term) Term)
(declare-fun FStar.Pervasives.CCConv__0 (Term) Term)
(declare-fun FStar.Pervasives.CCConv@tok () Term)
(declare-fun FStar.Pervasives.CAbstractStruct () Term)
(declare-fun FStar.Pervasives.CAbstractStruct@tok () Term)
(declare-fun FStar.Pervasives.CIfDef () Term)
(declare-fun FStar.Pervasives.CIfDef@tok () Term)
(declare-fun FStar.Pervasives.CMacro () Term)
(declare-fun FStar.Pervasives.CMacro@tok () Term)
(declare-fun Tm_arrow_a25c6dbdd7c43412e925069991c0ef48 () Term)
(define-fun is-FStar.Pervasives.__internal_ocaml_attributes ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 543) (= __@x0 FStar.Pervasives.__internal_ocaml_attributes)))
(define-fun is-FStar.Pervasives.PpxDerivingShow ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 549) (= __@x0 FStar.Pervasives.PpxDerivingShow)))
(define-fun is-FStar.Pervasives.PpxDerivingShowConstant ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 551) (= __@x0 (FStar.Pervasives.PpxDerivingShowConstant (FStar.Pervasives.PpxDerivingShowConstant__0 __@x0)))))
(define-fun is-FStar.Pervasives.PpxDerivingYoJson ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 556) (= __@x0 FStar.Pervasives.PpxDerivingYoJson)))
(define-fun is-FStar.Pervasives.CInline ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 558) (= __@x0 FStar.Pervasives.CInline)))
(define-fun is-FStar.Pervasives.Substitute ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 560) (= __@x0 FStar.Pervasives.Substitute)))
(define-fun is-FStar.Pervasives.Gc ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 562) (= __@x0 FStar.Pervasives.Gc)))
(define-fun is-FStar.Pervasives.Comment ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 564) (= __@x0 (FStar.Pervasives.Comment (FStar.Pervasives.Comment__0 __@x0)))))
(define-fun is-FStar.Pervasives.CPrologue ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 569) (= __@x0 (FStar.Pervasives.CPrologue (FStar.Pervasives.CPrologue__0 __@x0)))))
(define-fun is-FStar.Pervasives.CEpilogue ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 574) (= __@x0 (FStar.Pervasives.CEpilogue (FStar.Pervasives.CEpilogue__0 __@x0)))))
(define-fun is-FStar.Pervasives.CConst ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 579) (= __@x0 (FStar.Pervasives.CConst (FStar.Pervasives.CConst__0 __@x0)))))
(define-fun is-FStar.Pervasives.CCConv ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 584) (= __@x0 (FStar.Pervasives.CCConv (FStar.Pervasives.CCConv__0 __@x0)))))
(define-fun is-FStar.Pervasives.CAbstractStruct ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 589) (= __@x0 FStar.Pervasives.CAbstractStruct)))
(define-fun is-FStar.Pervasives.CIfDef ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 591) (= __@x0 FStar.Pervasives.CIfDef)))
(define-fun is-FStar.Pervasives.CMacro ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 593) (= __@x0 FStar.Pervasives.CMacro)))
(declare-fun FStar.Pervasives.uu___is_PpxDerivingShow (Term) Term)
(declare-fun Tm_arrow_89dc0c243f5e74d4fefc48cfe123db41 () Term)
(declare-fun FStar.Pervasives.uu___is_PpxDerivingShow@tok () Term)
(declare-fun FStar.Pervasives.uu___is_PpxDerivingShowConstant (Term) Term)
(declare-fun FStar.Pervasives.uu___is_PpxDerivingShowConstant@tok () Term)
(declare-fun Tm_refine_564db2f0aa0878b4d96c60508be3dd36 () Term)
(declare-fun FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0 (Term) Term)
(declare-fun Tm_arrow_dbb84ef8131159481071b6d6a41b7f31 () Term)
(declare-fun FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0@tok () Term)
(declare-fun FStar.Pervasives.uu___is_PpxDerivingYoJson (Term) Term)
(declare-fun FStar.Pervasives.uu___is_PpxDerivingYoJson@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CInline (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CInline@tok () Term)
(declare-fun FStar.Pervasives.uu___is_Substitute (Term) Term)
(declare-fun FStar.Pervasives.uu___is_Substitute@tok () Term)
(declare-fun FStar.Pervasives.uu___is_Gc (Term) Term)
(declare-fun FStar.Pervasives.uu___is_Gc@tok () Term)
(declare-fun FStar.Pervasives.uu___is_Comment (Term) Term)
(declare-fun FStar.Pervasives.uu___is_Comment@tok () Term)
(declare-fun Tm_refine_c53089e2d20d1b0f5a267296ac8e45f0 () Term)
(declare-fun FStar.Pervasives.__proj__Comment__item___0 (Term) Term)
(declare-fun Tm_arrow_d4c2bbf4fb852b3f4b9961c7cbc2f3a2 () Term)
(declare-fun FStar.Pervasives.__proj__Comment__item___0@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CPrologue (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CPrologue@tok () Term)
(declare-fun Tm_refine_ac46c1a2a06ce46a180e0eda48004c47 () Term)
(declare-fun FStar.Pervasives.__proj__CPrologue__item___0 (Term) Term)
(declare-fun Tm_arrow_929b9daa0a2a2e99e3571b146c52feaf () Term)
(declare-fun FStar.Pervasives.__proj__CPrologue__item___0@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CEpilogue (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CEpilogue@tok () Term)
(declare-fun Tm_refine_47384bef739d1f0729fd782d351dc9a5 () Term)
(declare-fun FStar.Pervasives.__proj__CEpilogue__item___0 (Term) Term)
(declare-fun Tm_arrow_e37361b66babb46a30183ad1ff072689 () Term)
(declare-fun FStar.Pervasives.__proj__CEpilogue__item___0@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CConst (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CConst@tok () Term)
(declare-fun Tm_refine_5036c6b2983454bc3afeffcba3f00f50 () Term)
(declare-fun FStar.Pervasives.__proj__CConst__item___0 (Term) Term)
(declare-fun Tm_arrow_2d0b7639551b88b0df758d7b36c8f77a () Term)
(declare-fun FStar.Pervasives.__proj__CConst__item___0@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CCConv (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CCConv@tok () Term)
(declare-fun Tm_refine_2c4510f48649a66c3dca1fc9e3a2d320 () Term)
(declare-fun FStar.Pervasives.__proj__CCConv__item___0 (Term) Term)
(declare-fun Tm_arrow_b7e884ec94708f2b05c42d4d8834eac6 () Term)
(declare-fun FStar.Pervasives.__proj__CCConv__item___0@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CAbstractStruct (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CAbstractStruct@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CIfDef (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CIfDef@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CMacro (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CMacro@tok () Term)
(declare-fun FStar.Pervasives.inline_let (Dummy_sort) Term)
(declare-fun FStar.Pervasives.rename_let (Term) Term)
(declare-fun FStar.Pervasives.rename_let@tok () Term)
(declare-fun FStar.Pervasives.plugin (Term) Term)
(declare-fun Tm_arrow_f12575a0ee171a8be16a63e3359708f8 () Term)
(declare-fun FStar.Pervasives.plugin@tok () Term)
(declare-fun FStar.Pervasives.tcnorm (Dummy_sort) Term)
(declare-fun FStar.Pervasives.must_erase_for_extraction (Dummy_sort) Term)
(declare-fun FStar.Pervasives.dm4f_bind_range (Dummy_sort) Term)
(declare-fun FStar.Pervasives.expect_failure (Term) Term)
(declare-fun FStar.Pervasives.expect_failure@tok () Term)
(declare-fun FStar.Pervasives.expect_lax_failure (Term) Term)
(declare-fun FStar.Pervasives.expect_lax_failure@tok () Term)
(declare-fun FStar.Pervasives.tcdecltime (Dummy_sort) Term)
(declare-fun FStar.Pervasives.assume_strictly_positive (Dummy_sort) Term)
(declare-fun FStar.Pervasives.unifier_hint_injective (Dummy_sort) Term)
(declare-fun FStar.Pervasives.strict_on_arguments (Term) Term)
(declare-fun FStar.Pervasives.strict_on_arguments@tok () Term)
(declare-fun FStar.Pervasives.resolve_implicits (Dummy_sort) Term)
(declare-fun FStar.Pervasives.erasable (Dummy_sort) Term)
(declare-fun FStar.Pervasives.allow_informative_binders (Dummy_sort) Term)
(declare-fun FStar.Pervasives.ite_soundness_forall (Dummy_sort) Term)
(declare-fun FStar.Pervasives.commute_nested_matches (Dummy_sort) Term)
(declare-fun FStar.Pervasives.noextract_to (Term) Term)
(declare-fun FStar.Pervasives.noextract_to@tok () Term)
(declare-fun FStar.Pervasives.normalize_term (Term Term) Term)
(declare-fun FStar.Pervasives.normalize_term@tok () Term)
(declare-fun FStar.Pervasives.normalize (Term) Term)
(declare-fun FStar.Pervasives.normalize@tok () Term)
(declare-fun FStar.Pervasives.norm_step () Term)
(declare-fun FStar.Pervasives.simplify (Dummy_sort) Term)
(declare-fun FStar.Pervasives.weak (Dummy_sort) Term)
(declare-fun FStar.Pervasives.hnf (Dummy_sort) Term)
(declare-fun FStar.Pervasives.primops (Dummy_sort) Term)
(declare-fun FStar.Pervasives.delta (Dummy_sort) Term)
(declare-fun FStar.Pervasives.zeta (Dummy_sort) Term)
(declare-fun FStar.Pervasives.zeta_full (Dummy_sort) Term)
(declare-fun FStar.Pervasives.iota (Dummy_sort) Term)
(declare-fun FStar.Pervasives.nbe (Dummy_sort) Term)
(declare-fun FStar.Pervasives.reify_ (Dummy_sort) Term)
(declare-fun FStar.Pervasives.delta_only (Term) Term)
(declare-fun Tm_arrow_f14a20345cd55ddda96b6c4cc49e05f1 () Term)
(declare-fun FStar.Pervasives.delta_only@tok () Term)
(declare-fun FStar.Pervasives.delta_fully (Term) Term)
(declare-fun FStar.Pervasives.delta_fully@tok () Term)
(declare-fun FStar.Pervasives.delta_attr (Term) Term)
(declare-fun FStar.Pervasives.delta_attr@tok () Term)
(declare-fun FStar.Pervasives.norm (Term Term Term) Term)
(declare-fun Tm_arrow_7d92e7a4aa7eee4098b10c5f1b3d77ea () Term)
(declare-fun FStar.Pervasives.norm@tok () Term)
(declare-fun FStar.Pervasives.assert_norm (Term) Term)
(declare-fun Tm_arrow_ee24fcf624d074d3c637ee61e4a867fb () Term)
(declare-fun FStar.Pervasives.assert_norm@tok () Term)
(declare-fun FStar.Pervasives.normalize_term_spec (Term Term) Term)
(declare-fun FStar.Pervasives.normalize_term_spec@tok () Term)
(declare-fun FStar.Pervasives.normalize_spec (Term) Term)
(declare-fun FStar.Pervasives.normalize_spec@tok () Term)
(declare-fun FStar.Pervasives.norm_spec (Term Term Term) Term)
(declare-fun FStar.Pervasives.norm_spec@tok () Term)
(declare-fun FStar.Pervasives.reveal_opaque (Term Term) Term)
(declare-fun Tm_refine_9cce35912d99bf51042f02fff62b6cf5 (Term Term Term) Term)
(declare-fun Tm_arrow_90324bd6d0db52152d012eefdf7852a1 (Term Term) Term)
(declare-fun Tm_arrow_d3acaf108460ddc930424dea55f7d40f () Term)
(declare-fun FStar.Pervasives.reveal_opaque@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.Pervasives.norm_spec@tok)) :named kick_partial_app_e5c933a9bc2cb06571c2abdcc101b877))
(declare-fun FStar.Pervasives.singleton (Term Term) Term)
(declare-fun Tm_refine_2fbd657fe85bcb2423f9c7e5f9b3bcb5 (Term Term) Term)
(declare-fun Tm_arrow_9cdb4ebd85da757e86217b6fb07ef9fc () Term)
(declare-fun FStar.Pervasives.singleton@tok () Term)
(declare-fun FStar.Pervasives.with_type (Term Term) Term)
(declare-fun FStar.Pervasives.with_type@tok () Term)
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (and (= (FStar.Pervasives.with_type @x0 @x1) @x1) (HasType (FStar.Pervasives.with_type @x0 @x1) @x0)) :weight 0 :pattern ((FStar.Pervasives.with_type @x0 @x1)) :qid @with_type_primitive_axiom)) :named with_type_primitive_axiom))
(declare-fun FStar.Pervasives.eqtype_as_type (Term) Term)
(declare-fun Tm_arrow_7e9afc6da5407011473323ad80ff51bf () Term)
(declare-fun FStar.Pervasives.eqtype_as_type@tok () Term)
(declare-fun FStar.Classical.give_witness (Term Term) Term)
(declare-fun FStar.Classical.give_witness@tok () Term)
(declare-fun FStar.Classical.give_witness_from_squash (Term Term) Term)
(declare-fun FStar.Classical.give_witness_from_squash@tok () Term)
(declare-fun Tm_refine_839524df17f415c122f40f00685d3fe6 (Term Term) Term)
(declare-fun Tm_arrow_9a028cfcf6111a85dd3c28d61b4efdfd (Term Term) Term)
(declare-fun FStar.Classical.lemma_to_squash_gtot (Term Term Term Term) Term)
(declare-fun Tm_arrow_6f9100982820dfbce0fb9c6dae0cee11 () Term)
(declare-fun FStar.Classical.lemma_to_squash_gtot@tok () Term)
(declare-fun FStar.Classical.get_equality (Term Term Term) Term)
(declare-fun Tm_refine_7c805cbd5439f1b21f6463c70e57d0f1 (Term Term Term) Term)
(declare-fun Tm_arrow_158af926c0cd4bc1ff513e80f99f4b49 () Term)
(declare-fun FStar.Classical.get_equality@tok () Term)
(declare-fun FStar.Classical.impl_to_arrow (Term Term Term Term) Term)
(declare-fun Tm_arrow_156c500bdf0e99cc45ffd26a33a603a8 () Term)
(declare-fun FStar.Classical.impl_to_arrow@tok () Term)
(declare-fun Tm_arrow_9d84457d1c8d2a3cb1cecf47a390b833 (Term Term) Term)
(declare-fun FStar.Classical.arrow_to_impl (Term Term Term) Term)
(declare-fun Tm_arrow_78d787b8a2633e2185ded4267a81cc32 () Term)
(declare-fun FStar.Classical.arrow_to_impl@tok () Term)
(declare-fun FStar.Classical.impl_intro_gtot (Term Term Term) Term)
(declare-fun Tm_arrow_d2cdd2f18b92810e3048c35d07f1c9ea () Term)
(declare-fun FStar.Classical.impl_intro_gtot@tok () Term)
(declare-fun FStar.Classical.impl_intro (Term Term Term) Term)
(declare-fun FStar.Classical.impl_intro@tok () Term)
(declare-fun FStar.Classical.move_requires (Term Term Term Term Term) Term)
(declare-fun FStar.Classical.move_requires@tok () Term)
(declare-fun FStar.Classical.move_requires_2 (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Classical.move_requires_2@tok () Term)
(declare-fun FStar.Classical.move_requires_3 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Classical.move_requires_3@tok () Term)
(declare-fun FStar.Classical.impl_intro_gen (Term Term Term) Term)
(declare-fun FStar.Classical.impl_intro_gen@tok () Term)
(declare-fun FStar.Classical.get_forall (Term Term) Term)
(declare-fun Tm_refine_0f449c9ea4caab5b78147dd10520e018 (Term Term) Term)
(declare-fun Tm_arrow_332381d0496c43c212786cc9f5d1c320 () Term)
(declare-fun FStar.Classical.get_forall@tok () Term)
(declare-fun FStar.Classical.forall_intro_gtot (Term Term Term) Term)
(declare-fun Tm_arrow_58139f503eb3f7da2e6d21fc5f91a24e () Term)
(declare-fun FStar.Classical.forall_intro_gtot@tok () Term)
(declare-fun FStar.Classical.lemma_forall_intro_gtot (Term Term Term) Term)
(declare-fun FStar.Classical.lemma_forall_intro_gtot@tok () Term)
(declare-fun FStar.Classical.gtot_to_lemma (Term Term Term Term) Term)
(declare-fun FStar.Classical.gtot_to_lemma@tok () Term)
(declare-fun Tm_arrow_e44b1a1960e76c65248b9976ee453bf1 (Term Term) Term)
(declare-fun FStar.Classical.forall_intro_squash_gtot (Term Term Term) Term)
(declare-fun Tm_arrow_fc21ff1d7102ebdd3a285ec7e2205a73 () Term)
(declare-fun FStar.Classical.forall_intro_squash_gtot@tok () Term)
(declare-fun FStar.Classical.forall_intro_squash_gtot_join (Term Term Term) Term)
(declare-fun Tm_arrow_063aaa309a45de0b15ba96f4b908f656 () Term)
(declare-fun FStar.Classical.forall_intro_squash_gtot_join@tok () Term)
(declare-fun FStar.Classical.forall_intro (Term Term Term) Term)
(declare-fun FStar.Classical.forall_intro@tok () Term)
(declare-fun FStar.Classical.forall_intro_with_pat (Term Term Term Term Term) Term)
(declare-fun FStar.Classical.forall_intro_with_pat@tok () Term)
(declare-fun FStar.Classical.forall_intro_sub (Term Term Term) Term)
(declare-fun FStar.Classical.forall_intro_sub@tok () Term)
(declare-fun FStar.Classical.forall_intro_2 (Term Term Term Term) Term)
(declare-fun FStar.Classical.forall_intro_2@tok () Term)
(declare-fun FStar.Classical.forall_intro_2_with_pat (Term Term Term Term Term Term) Term)
(declare-fun FStar.Classical.forall_intro_2_with_pat@tok () Term)
(declare-fun FStar.Classical.forall_intro_3 (Term Term Term Term Term) Term)
(declare-fun FStar.Classical.forall_intro_3@tok () Term)
(declare-fun FStar.Classical.forall_intro_3_with_pat (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Classical.forall_intro_3_with_pat@tok () Term)
(declare-fun FStar.Classical.forall_intro_4 (Term Term Term Term Term Term) Term)
(declare-fun FStar.Classical.forall_intro_4@tok () Term)
(declare-fun FStar.Classical.forall_impl_intro (Term Term Term Term) Term)
(declare-fun FStar.Classical.forall_impl_intro@tok () Term)
(declare-fun FStar.Classical.ghost_lemma (Term Term Term Term) Term)
(declare-fun FStar.Classical.ghost_lemma@tok () Term)
(declare-fun FStar.Classical.exists_intro (Term Term Term) Term)
(declare-fun FStar.Classical.exists_intro@tok () Term)
(declare-fun FStar.Classical.exists_intro_not_all_not (Term Term Term) Term)
(declare-fun FStar.Classical.exists_intro_not_all_not@tok () Term)
(declare-fun FStar.Classical.forall_to_exists (Term Term Term Term) Term)
(declare-fun FStar.Classical.forall_to_exists@tok () Term)
(declare-fun FStar.Classical.forall_to_exists_2 (Term Term Term Term Term Term) Term)
(declare-fun FStar.Classical.forall_to_exists_2@tok () Term)
(declare-fun FStar.Classical.exists_elim (Term Term Term Term Term) Term)
(declare-fun FStar.Classical.exists_elim@tok () Term)
(declare-fun FStar.Classical.or_elim (Term Term Term Term Term) Term)
(declare-fun FStar.Classical.or_elim@tok () Term)
(declare-fun FStar.Classical.excluded_middle (Term) Term)
(declare-fun FStar.Classical.excluded_middle@tok () Term)
(declare-fun FStar.List.Tot.Base.isEmpty (Term Term) Term)
(declare-fun FStar.List.Tot.Base.isEmpty@tok () Term)
(declare-fun FStar.List.Tot.Base.hd (Term Term) Term)
(declare-fun FStar.List.Tot.Base.hd@tok () Term)
(declare-fun FStar.List.Tot.Base.tail (Term Term) Term)
(declare-fun FStar.List.Tot.Base.tail@tok () Term)
(declare-fun FStar.List.Tot.Base.tl (Term Term) Term)
(declare-fun FStar.List.Tot.Base.tl@tok () Term)
(declare-fun FStar.List.Tot.Base.last.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.List.Tot.Base.last.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.last (Term Term) Term)
(declare-fun FStar.List.Tot.Base.last@tok () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.last.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.List.Tot.Base.last.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.List.Tot.Base.last.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.List.Tot.Base.last.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.last.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.List.Tot.Base.last @x0 @x1) (FStar.List.Tot.Base.last.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.List.Tot.Base.last @x0 @x1)) :qid @fuel_correspondence_FStar.List.Tot.Base.last.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.last.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.init.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.List.Tot.Base.init.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.init (Term Term) Term)
(declare-fun FStar.List.Tot.Base.init@tok () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.init.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.List.Tot.Base.init.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.List.Tot.Base.init.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.List.Tot.Base.init.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.init.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.List.Tot.Base.init @x0 @x1) (FStar.List.Tot.Base.init.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.List.Tot.Base.init @x0 @x1)) :qid @fuel_correspondence_FStar.List.Tot.Base.init.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.init.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.length.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.List.Tot.Base.length.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.length (Term Term) Term)
(declare-fun FStar.List.Tot.Base.length@tok () Term)
(declare-fun Tm_arrow_5adbd6bc13eabd8f92e79f380e1498f0 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.length.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.List.Tot.Base.length.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.List.Tot.Base.length.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.List.Tot.Base.length.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.length.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.List.Tot.Base.length @x0 @x1) (FStar.List.Tot.Base.length.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.List.Tot.Base.length @x0 @x1)) :qid @fuel_correspondence_FStar.List.Tot.Base.length.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.length.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.nth.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.nth.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.nth (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.nth@tok () Term)
(declare-fun Tm_arrow_c96efec76dd44fb4c1c29ca8a004927d () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.nth.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.nth.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.nth.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.nth.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.nth.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.nth @x0 @x1 @x2) (FStar.List.Tot.Base.nth.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.nth @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.nth.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.nth.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.index.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.index.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.index (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.index@tok () Term)
(declare-fun Tm_refine_c86aba5c6243e6b7f9a4b0ad41b4e9a0 (Term Term) Term)
(declare-fun Tm_arrow_87330224a075c52374b0ca2b4b909772 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.index.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.index.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.index.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.index.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.index.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.index @x0 @x1 @x2) (FStar.List.Tot.Base.index.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.index @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.index.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.index.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.count.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.count.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.count (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.count@tok () Term)
(declare-fun Tm_arrow_d7494a533e0c3edea69ad484d93aa0e5 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.count.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.count.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.count.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.count.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.count.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.count @x0 @x1 @x2) (FStar.List.Tot.Base.count.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.count @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.count.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.count.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.rev_acc.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.rev_acc.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.rev_acc (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.rev_acc@tok () Term)
(declare-fun Tm_arrow_54e38bdd456bab4cdb32b5d540c2274c () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.rev_acc.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.rev_acc.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.rev_acc.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.rev_acc.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.rev_acc.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.rev_acc @x0 @x1 @x2) (FStar.List.Tot.Base.rev_acc.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.rev_acc @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.rev_acc.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.rev_acc.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.rev (Term Term) Term)
(declare-fun Tm_arrow_f9ba16c6212a483d195bbb8ceec3eef1 () Term)
(declare-fun FStar.List.Tot.Base.rev@tok () Term)
(declare-fun FStar.List.Tot.Base.append.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.append.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.append (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.append@tok () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.append.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.append.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.append.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.append.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.append.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.append @x0 @x1 @x2) (FStar.List.Tot.Base.append.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.append @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.append.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.append.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.op_At (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.op_At@tok () Term)
(declare-fun FStar.List.Tot.Base.snoc (Term Term) Term)
(declare-fun Tm_arrow_07ff48a1c7b541b0963ce508064e29fb () Term)
(declare-fun FStar.List.Tot.Base.snoc@tok () Term)
(declare-fun FStar.List.Tot.Base.flatten.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.List.Tot.Base.flatten.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.flatten (Term Term) Term)
(declare-fun FStar.List.Tot.Base.flatten@tok () Term)
(declare-fun Tm_arrow_7e18fd6b36805c1f1c9a77e024fdec2e () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.flatten.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.List.Tot.Base.flatten.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.List.Tot.Base.flatten.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.List.Tot.Base.flatten.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.flatten.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.List.Tot.Base.flatten @x0 @x1) (FStar.List.Tot.Base.flatten.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.List.Tot.Base.flatten @x0 @x1)) :qid @fuel_correspondence_FStar.List.Tot.Base.flatten.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.flatten.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.map.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.map.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.map (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.map@tok () Term)
(declare-fun Tm_arrow_6980332764c4493a7b0df5c02f7aefbe (Term Term) Term)
(declare-fun Tm_arrow_28431dcf5044bcdd56dbe625f9e3df4e () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.map.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.map.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.map.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_FStar.List.Tot.Base.map.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.map.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.map @x0 @x1 @x2 @x3) (FStar.List.Tot.Base.map.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.map @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_FStar.List.Tot.Base.map.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.map.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.mapi_init.fuel_instrumented (Fuel Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.mapi_init.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.mapi_init (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.mapi_init@tok () Term)
(declare-fun Tm_arrow_010f318679809a99aeced42f5ba95505 (Term Term) Term)
(declare-fun Tm_arrow_9a89e146e4bb6b361bc4526b891ed1f1 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term)) (! (= (FStar.List.Tot.Base.mapi_init.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5) (FStar.List.Tot.Base.mapi_init.fuel_instrumented ZFuel @x1 @x2 @x3 @x4 @x5)) :pattern ((FStar.List.Tot.Base.mapi_init.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5)) :qid @fuel_irrelevance_FStar.List.Tot.Base.mapi_init.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.mapi_init.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.mapi_init @x0 @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.mapi_init.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.mapi_init @x0 @x1 @x2 @x3 @x4)) :qid @fuel_correspondence_FStar.List.Tot.Base.mapi_init.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.mapi_init.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.mapi (Term Term Term Term) Term)
(declare-fun Tm_arrow_b2a07f422fceebd0f3ee3abd5e4aeed2 () Term)
(declare-fun FStar.List.Tot.Base.mapi@tok () Term)
(declare-fun FStar.List.Tot.Base.concatMap.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.concatMap.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.concatMap (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.concatMap@tok () Term)
(declare-fun Tm_arrow_121fa5bc200f7b3946a5e35040f266b9 (Term Term) Term)
(declare-fun Tm_arrow_c35dd4e5f8c08f94183bf93963fac92f () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.concatMap.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.concatMap.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.concatMap.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_FStar.List.Tot.Base.concatMap.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.concatMap.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.concatMap @x0 @x1 @x2 @x3) (FStar.List.Tot.Base.concatMap.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.concatMap @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_FStar.List.Tot.Base.concatMap.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.concatMap.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.fold_left.fuel_instrumented (Fuel Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.fold_left.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.fold_left (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.fold_left@tok () Term)
(declare-fun Tm_arrow_f0225aaf6b987d44876e7f498390aa39 (Term Term) Term)
(declare-fun Tm_arrow_230697841c1116c0d5f3958097856e6e () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term)) (! (= (FStar.List.Tot.Base.fold_left.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5) (FStar.List.Tot.Base.fold_left.fuel_instrumented ZFuel @x1 @x2 @x3 @x4 @x5)) :pattern ((FStar.List.Tot.Base.fold_left.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5)) :qid @fuel_irrelevance_FStar.List.Tot.Base.fold_left.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.fold_left.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.fold_left @x0 @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.fold_left.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.fold_left @x0 @x1 @x2 @x3 @x4)) :qid @fuel_correspondence_FStar.List.Tot.Base.fold_left.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.fold_left.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.fold_right.fuel_instrumented (Fuel Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.fold_right.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.fold_right (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.fold_right@tok () Term)
(declare-fun Tm_arrow_3c1d21b8f6dcc5e202b4ff1cafbaba81 (Term Term) Term)
(declare-fun Tm_arrow_105b39eeae3a464c82e64975ac399cdb () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term)) (! (= (FStar.List.Tot.Base.fold_right.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5) (FStar.List.Tot.Base.fold_right.fuel_instrumented ZFuel @x1 @x2 @x3 @x4 @x5)) :pattern ((FStar.List.Tot.Base.fold_right.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5)) :qid @fuel_irrelevance_FStar.List.Tot.Base.fold_right.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.fold_right.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.fold_right @x0 @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.fold_right.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.fold_right @x0 @x1 @x2 @x3 @x4)) :qid @fuel_correspondence_FStar.List.Tot.Base.fold_right.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.fold_right.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented (Fuel Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.fold_right_gtot (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.fold_right_gtot@tok () Term)
(declare-fun Tm_ghost_arrow_d7e9834b8fd0407a723f5f3f4b012fdd (Term Term) Term)
(declare-fun Tm_ghost_arrow_fab043b8cdd2296e8d98a06066e4b2d2 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term)) (! (= (FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5) (FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented ZFuel @x1 @x2 @x3 @x4 @x5)) :pattern ((FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5)) :qid @fuel_irrelevance_FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.fold_right_gtot @x0 @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.fold_right_gtot @x0 @x1 @x2 @x3 @x4)) :qid @fuel_correspondence_FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.map_gtot (Term Term Term Term) Term)
(declare-fun Tm_ghost_arrow_d0c7be07105bf8d5ad60b7f603c725f3 () Term)
(declare-fun FStar.List.Tot.Base.map_gtot@tok () Term)
(declare-fun Tm_ghost_arrow_21583233c98863da294c5e5d657cf78a (Term Term) Term)
(declare-fun Tm_abs_469cd3853c3ff3e8cd408b5521fdbd9d (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.fold_left2.fuel_instrumented (Fuel Term Term Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.fold_left2.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.fold_left2 (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.fold_left2@tok () Term)
(declare-fun Tm_arrow_40dd30796dd695d143ec6ed01d322177 (Term Term Term) Term)
(declare-fun Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b (Term) Term)
(declare-fun Tm_arrow_3f28d1abbd43ddded682cbec516ea7bb () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term)) (! (= (FStar.List.Tot.Base.fold_left2.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5 @x6 @x7) (FStar.List.Tot.Base.fold_left2.fuel_instrumented ZFuel @x1 @x2 @x3 @x4 @x5 @x6 @x7)) :pattern ((FStar.List.Tot.Base.fold_left2.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5 @x6 @x7)) :qid @fuel_irrelevance_FStar.List.Tot.Base.fold_left2.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.fold_left2.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term)) (! (= (FStar.List.Tot.Base.fold_left2 @x0 @x1 @x2 @x3 @x4 @x5 @x6) (FStar.List.Tot.Base.fold_left2.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3 @x4 @x5 @x6)) :pattern ((FStar.List.Tot.Base.fold_left2 @x0 @x1 @x2 @x3 @x4 @x5 @x6)) :qid @fuel_correspondence_FStar.List.Tot.Base.fold_left2.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.fold_left2.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.memP.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.memP.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.memP (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.memP@tok () Term)
(declare-fun Tm_arrow_9a5de17321abf8ec257671c9a474c08a () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.memP.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.memP.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.memP.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.memP.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.memP.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.memP @x0 @x1 @x2) (FStar.List.Tot.Base.memP.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.memP @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.memP.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.memP.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.mem.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.mem.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.mem (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.mem@tok () Term)
(declare-fun Tm_arrow_8b16b79a9f8fab7cb6911016a8022992 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.mem.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.mem.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.mem.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.mem.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.mem.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.mem @x0 @x1 @x2) (FStar.List.Tot.Base.mem.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.mem @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.mem.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.mem.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.contains (Term) Term)
(declare-fun Tm_arrow_c7306997fce9480ecc743e5f07d84087 (Term) Term)
(declare-fun Tm_arrow_dc6bb79540975b8523aaf4f1cab2f558 () Term)
(declare-fun FStar.List.Tot.Base.contains@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.List.Tot.Base.mem@tok)) :named kick_partial_app_ccd82d20727a12a21bc723f6ffff5e81))
(declare-fun FStar.List.Tot.Base.existsb.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.existsb.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.existsb (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.existsb@tok () Term)
(declare-fun Tm_arrow_84543425b818e2d10a976186b8e8c250 (Term) Term)
(declare-fun Tm_arrow_98dbecc64760e6a41f037a6881cd5df8 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.existsb.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.existsb.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.existsb.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.existsb.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.existsb.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.existsb @x0 @x1 @x2) (FStar.List.Tot.Base.existsb.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.existsb @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.existsb.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.existsb.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.find.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.find.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.find (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.find@tok () Term)
(declare-fun Tm_refine_3b1cb9ec3355fed185c658f53954b3fa (Term Term) Term)
(declare-fun Tm_arrow_286c509b12b9a2bb9bf1025c6fd97451 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.find.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.find.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.find.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.find.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.find.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.find @x0 @x1 @x2) (FStar.List.Tot.Base.find.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.find @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.find.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.find.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.filter.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.filter.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.filter (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.filter@tok () Term)
(declare-fun Tm_refine_5c77e54d118aa26696ff018c647e0d2c (Term Term) Term)
(declare-fun Tm_arrow_26bc30ca5e980f52cef77fa4ff2b8923 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.filter.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.filter.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.filter.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.filter.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.filter.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.filter @x0 @x1 @x2) (FStar.List.Tot.Base.filter.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.filter @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.filter.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.filter.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.mem_filter (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.mem_filter@tok () Term)
(declare-fun FStar.List.Tot.Base.mem_filter_forall (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.mem_filter_forall@tok () Term)
(declare-fun FStar.List.Tot.Base.for_all.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.for_all.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.for_all (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.for_all@tok () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.for_all.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.for_all.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.for_all.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.for_all.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.for_all.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.for_all @x0 @x1 @x2) (FStar.List.Tot.Base.for_all.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.for_all @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.for_all.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.for_all.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.for_all_mem (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.for_all_mem@tok () Term)
(declare-fun FStar.List.Tot.Base.collect.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.collect.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.collect (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.collect@tok () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.collect.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.collect.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.collect.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_FStar.List.Tot.Base.collect.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.collect.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.collect @x0 @x1 @x2 @x3) (FStar.List.Tot.Base.collect.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.collect @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_FStar.List.Tot.Base.collect.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.collect.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.tryFind.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.tryFind.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.tryFind (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.tryFind@tok () Term)
(declare-fun Tm_arrow_4ae6bca87a611585312b8b0d0d66fefe () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.tryFind.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.tryFind.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.tryFind.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.tryFind.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.tryFind.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.tryFind @x0 @x1 @x2) (FStar.List.Tot.Base.tryFind.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.tryFind @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.tryFind.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.tryFind.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.tryPick.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.tryPick.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.tryPick (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.tryPick@tok () Term)
(declare-fun Tm_arrow_4b0c7cc34485afa5854ebe5c95023d4c (Term Term) Term)
(declare-fun Tm_arrow_7fbbe8a710b97b9ed9c0d2dfb00b1641 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.tryPick.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.tryPick.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.tryPick.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_FStar.List.Tot.Base.tryPick.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.tryPick.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.tryPick @x0 @x1 @x2 @x3) (FStar.List.Tot.Base.tryPick.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.tryPick @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_FStar.List.Tot.Base.tryPick.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.tryPick.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.choose.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.choose.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.choose (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.choose@tok () Term)
(declare-fun Tm_arrow_ee03a7411b6d8975b285ea6c772c4d89 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.choose.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.choose.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.choose.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_FStar.List.Tot.Base.choose.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.choose.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.choose @x0 @x1 @x2 @x3) (FStar.List.Tot.Base.choose.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.choose @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_FStar.List.Tot.Base.choose.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.choose.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.partition.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.partition.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.partition (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.partition@tok () Term)
(declare-fun Tm_arrow_706f575815ce8a3bbd962da035d8aa14 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.partition.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.partition.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.partition.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.partition.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.partition.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.partition @x0 @x1 @x2) (FStar.List.Tot.Base.partition.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.partition @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.partition.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.partition.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.subset.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.subset.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.subset (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.subset@tok () Term)
(declare-fun Tm_arrow_8d819a995fc33b4cb6aa699af88e8d32 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.subset.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.subset.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.subset.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.subset.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.subset.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.subset @x0 @x1 @x2) (FStar.List.Tot.Base.subset.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.subset @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.subset.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.subset.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.noRepeats.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.List.Tot.Base.noRepeats.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.noRepeats (Term Term) Term)
(declare-fun FStar.List.Tot.Base.noRepeats@tok () Term)
(declare-fun Tm_arrow_0dd285b24907a2f8b15dedffef61afa6 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.noRepeats.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.List.Tot.Base.noRepeats.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.List.Tot.Base.noRepeats.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.List.Tot.Base.noRepeats.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.noRepeats.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.List.Tot.Base.noRepeats @x0 @x1) (FStar.List.Tot.Base.noRepeats.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.List.Tot.Base.noRepeats @x0 @x1)) :qid @fuel_correspondence_FStar.List.Tot.Base.noRepeats.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.noRepeats.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.no_repeats_p.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.List.Tot.Base.no_repeats_p.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.no_repeats_p (Term Term) Term)
(declare-fun FStar.List.Tot.Base.no_repeats_p@tok () Term)
(declare-fun Tm_arrow_79c2442eab9e49d1108d2b7a240dc76e () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.no_repeats_p.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.List.Tot.Base.no_repeats_p.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.List.Tot.Base.no_repeats_p.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.List.Tot.Base.no_repeats_p.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.no_repeats_p.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.List.Tot.Base.no_repeats_p @x0 @x1) (FStar.List.Tot.Base.no_repeats_p.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.List.Tot.Base.no_repeats_p @x0 @x1)) :qid @fuel_correspondence_FStar.List.Tot.Base.no_repeats_p.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.no_repeats_p.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.assoc.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.assoc.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.assoc (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.assoc@tok () Term)
(declare-fun Tm_arrow_d77cf796c5b72d2c2316c0fcdad1dd79 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.assoc.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.assoc.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.assoc.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_FStar.List.Tot.Base.assoc.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.assoc.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.assoc @x0 @x1 @x2 @x3) (FStar.List.Tot.Base.assoc.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.assoc @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_FStar.List.Tot.Base.assoc.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.assoc.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.split.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.split.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.split (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.split@tok () Term)
(declare-fun Tm_arrow_1c3cb31b4ffa47bc6454f5b8a25e2407 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.split.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.split.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.split.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.split.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.split.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.split @x0 @x1 @x2) (FStar.List.Tot.Base.split.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.split @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.split.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.split.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.unzip (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.unzip@tok () Term)
(declare-fun FStar.List.Tot.Base.unzip3.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.unzip3.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.unzip3 (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.unzip3@tok () Term)
(declare-fun Tm_arrow_d40be6b496fedb6f7a46205c5824b732 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.unzip3.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.unzip3.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.unzip3.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_FStar.List.Tot.Base.unzip3.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.unzip3.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.unzip3 @x0 @x1 @x2 @x3) (FStar.List.Tot.Base.unzip3.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.unzip3 @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_FStar.List.Tot.Base.unzip3.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.unzip3.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.splitAt.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.splitAt.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.splitAt (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.splitAt@tok () Term)
(declare-fun Tm_arrow_e36bd078e08c2ac2f1324fef6e0a4a22 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.splitAt.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.splitAt.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.splitAt.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.splitAt.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.splitAt.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.splitAt @x0 @x1 @x2) (FStar.List.Tot.Base.splitAt.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.splitAt @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.splitAt.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.splitAt.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.lemma_splitAt_snd_length (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.lemma_splitAt_snd_length@tok () Term)
(declare-fun Tm_refine_3f6b38b2852708f36615f9b4db0f9ff1 (Term) Term)
(declare-fun FStar.List.Tot.Base.unsnoc (Term Term) Term)
(declare-fun Tm_arrow_f4bc61622db0c39a751170734a140783 () Term)
(declare-fun FStar.List.Tot.Base.unsnoc@tok () Term)
(declare-fun FStar.List.Tot.Base.split3 (Term Term Term) Term)
(declare-fun Tm_arrow_07dcb44faa0fb6172673970868e7ecff () Term)
(declare-fun FStar.List.Tot.Base.split3@tok () Term)
(declare-fun FStar.List.Tot.Base.partition_length (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.partition_length@tok () Term)
(declare-fun Tm_arrow_9877f854fbaabbcfda94f6c19b32ae3f (Term) Term)
(declare-fun FStar.List.Tot.Base.bool_of_compare (Term Term Term Term) Term)
(declare-fun Tm_arrow_a2f219461d35e20b7bc771538ca96429 () Term)
(declare-fun FStar.List.Tot.Base.bool_of_compare@tok () Term)
(declare-fun Tm_arrow_c8126b87a2c25bb477df4a7a6b0eea9e (Term) Term)
(declare-fun FStar.List.Tot.Base.compare_of_bool (Term Term Term Term) Term)
(declare-fun Tm_arrow_8b54d4820d055c327440d0d4811d3a33 () Term)
(declare-fun FStar.List.Tot.Base.compare_of_bool@tok () Term)
(declare-fun FStar.List.Tot.Base.compare_of_bool_of_compare (Term Term) Term)
(declare-fun FStar.List.Tot.Base.compare_of_bool_of_compare@tok () Term)
(declare-fun FStar.List.Tot.Base.sortWith.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.sortWith.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.sortWith (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.sortWith@tok () Term)
(declare-fun Tm_arrow_d29fb5884447b657cb725f9be68c5ba6 () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.List.Tot.Base.bool_of_compare@tok)) :named kick_partial_app_6123e8040f356c82d11b245dda0e1ccc))
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.sortWith.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.sortWith.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.sortWith.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.sortWith.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.sortWith.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.sortWith @x0 @x1 @x2) (FStar.List.Tot.Base.sortWith.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.sortWith @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.sortWith.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.sortWith.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.strict_prefix_of (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.strict_prefix_of@tok () Term)
(declare-fun Tm_refine_da3062322c9bea8d5b2058386775b91a () Term)
(declare-fun Tm_arrow_1d91178a138c1826d6a199b1613394f1 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.strict_prefix_of @x0 @x1 @x2) (FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.strict_prefix_of @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.list_unref.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.list_unref.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.list_unref (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.list_unref@tok () Term)
(declare-fun Tm_refine_9f8cb5a84b67f50c9d5f87a914037545 (Term Term) Term)
(declare-fun Tm_arrow_6b3a7706fc085133138f00ee506ef176 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.list_unref.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.list_unref.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.list_unref.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.list_unref.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.list_unref.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.list_unref @x0 @x1 @x2) (FStar.List.Tot.Base.list_unref.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.list_unref @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.list_unref.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.list_unref.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.list_refb.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.list_refb.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.list_refb (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.list_refb@tok () Term)
(declare-fun Tm_refine_3dfaece5a1f8e27ecb1367ff50145048 (Term Term) Term)
(declare-fun Tm_refine_b3daba88e15ae8a9be9dd341522270b2 (Term Term Term Term) Term)
(declare-fun Tm_refine_1d1ddbacd892e41ad4ba585e87296d2e (Term Term Term) Term)
(declare-fun Tm_arrow_73c684a5823f2875fcceead4ce671ea8 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.list_refb.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.list_refb.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.list_refb.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.list_refb.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.list_refb.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.list_refb @x0 @x1 @x2) (FStar.List.Tot.Base.list_refb.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.list_refb @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.list_refb.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.list_refb.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.list_ref.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.list_ref.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.list_ref (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.list_ref@tok () Term)
(declare-fun Tm_arrow_81e65de2755319ee661cc1adc7d951e3 (Term) Term)
(declare-fun Tm_refine_751cc4d3e845537c495f9d7e1deb8aa9 (Term Term) Term)
(declare-fun Tm_refine_f61b92c00df29b87346e52dcf7670926 (Term Term Term Term) Term)
(declare-fun Tm_refine_16f0c42812e28aba7e30bc8c275306fb (Term Term Term) Term)
(declare-fun Tm_arrow_73f29356f974e35d230fb85375ad3965 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.list_ref.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.list_ref.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.list_ref.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.list_ref.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.list_ref.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.list_ref @x0 @x1 @x2) (FStar.List.Tot.Base.list_ref.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.list_ref @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.list_ref.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.list_ref.fuel_instrumented))
(declare-fun FStar.StrongExcludedMiddle.strong_excluded_middle (Term) Term)
(declare-fun Tm_refine_2c7ecebd8a41d0890aab4251b61d6458 (Term) Term)
(declare-fun Tm_ghost_arrow_13b822d9f45311e725609e40f68f39a1 () Term)
(declare-fun FStar.StrongExcludedMiddle.strong_excluded_middle@tok () Term)
(declare-fun FStar.List.Tot.Properties.llist (Term Term) Term)
(declare-fun Tm_arrow_67c7b2626869cb316f118144000415b9 () Term)
(declare-fun FStar.List.Tot.Properties.llist@tok () Term)
(declare-fun Tm_refine_fbb3412f12fd58a91571022d7c9fa36d (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.mem_empty (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.mem_empty@tok () Term)
(declare-fun FStar.List.Tot.Properties.mem_existsb (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.mem_existsb@tok () Term)
(declare-fun FStar.List.Tot.Properties.mem_count (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.mem_count@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev_acc_length (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_acc_length@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev_length (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_length@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev_acc_mem (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_acc_mem@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev_mem (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_mem@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_nil_l (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_nil_l@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_l_nil (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_l_nil@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_cons_l (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_cons_l@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_l_cons (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_l_cons@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_assoc (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_assoc@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_length (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_length@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_mem (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_mem@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_mem_forall (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_mem_forall@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_count (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_count@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_count_forall (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_count_forall@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_eq_nil (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_eq_nil@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_eq_singl (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_eq_singl@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_inv_head (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_inv_head@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_inv_tail (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_inv_tail@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_length_inv_head (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_length_inv_head@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_length_inv_tail (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_length_inv_tail@tok () Term)
(declare-fun FStar.List.Tot.Properties.lemma_append_last (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_append_last@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev_.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Properties.rev_ (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_@tok () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Properties.rev_.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.List.Tot.Properties.rev_.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.List.Tot.Properties.rev_.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.List.Tot.Properties.rev_.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Properties.rev_.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.List.Tot.Properties.rev_ @x0 @x1) (FStar.List.Tot.Properties.rev_.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.List.Tot.Properties.rev_ @x0 @x1)) :qid @fuel_correspondence_FStar.List.Tot.Properties.rev_.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Properties.rev_.fuel_instrumented))
(declare-fun FStar.List.Tot.Properties.rev_T (Term) Term)
(declare-fun Tm_arrow_f34ce2ad5441b4bd300fa100b397737d (Term) Term)
(declare-fun Tm_arrow_42c6b27a859866d5307ff94c9f459cb1 () Term)
(declare-fun FStar.List.Tot.Properties.rev_T@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.List.Tot.Properties.rev_@tok)) :named kick_partial_app_6780e2e9ce16d5330b5fda76b7bde9c5))
(declare-fun FStar.List.Tot.Properties.rev_acc_rev_ (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_acc_rev_@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev_rev_ (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_rev_@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev__append (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev__append@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev_append (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_append@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev__involutive (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev__involutive@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev_involutive (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_involutive@tok () Term)
(declare-fun FStar.List.Tot.Properties.lemma_snoc_length (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_snoc_length@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev__list_ind (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev__list_ind@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev_ind (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_ind@tok () Term)
(declare-fun FStar.List.Tot.Properties.map_lemma (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.map_lemma@tok () Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_snoc (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_snoc@tok () Term)
(declare-fun Tm_refine_e88aba6d4c79a5625ab4330932edf7ed (Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_snoc_unsnoc (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_snoc_unsnoc@tok () Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_length (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_length@tok () Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_append (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_append@tok () Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_is_last (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_is_last@tok () Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_index (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_index@tok () Term)
(declare-fun FStar.List.Tot.Properties.split_using.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.split_using.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Properties.split_using (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.split_using@tok () Term)
(declare-fun Tm_refine_ca5b6dc4e0a851997703798a1ffc5f70 (Term Term) Term)
(declare-fun Tm_ghost_arrow_583c096a402961cd40d8b718fb07bacc () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Properties.split_using.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Properties.split_using.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Properties.split_using.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Properties.split_using.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Properties.split_using.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Properties.split_using @x0 @x1 @x2) (FStar.List.Tot.Properties.split_using.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Properties.split_using @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Properties.split_using.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Properties.split_using.fuel_instrumented))
(declare-fun FStar.List.Tot.Properties.lemma_split_using (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_split_using@tok () Term)
(declare-fun FStar.List.Tot.Properties.index_of.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.index_of.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Properties.index_of (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.index_of@tok () Term)
(declare-fun Tm_refine_cd45ecc9daf74409c394004efbaa3338 (Term Term Term) Term)
(declare-fun Tm_ghost_arrow_d9cd5e48f458f8c211c59f9048af3929 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Properties.index_of.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Properties.index_of.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Properties.index_of.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Properties.index_of.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Properties.index_of.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Properties.index_of @x0 @x1 @x2) (FStar.List.Tot.Properties.index_of.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Properties.index_of @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Properties.index_of.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Properties.index_of.fuel_instrumented))
(declare-fun FStar.List.Tot.Properties.partition_mem (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.partition_mem@tok () Term)
(declare-fun FStar.List.Tot.Properties.partition_mem_forall (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.partition_mem_forall@tok () Term)
(declare-fun FStar.List.Tot.Properties.partition_mem_p_forall (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.partition_mem_p_forall@tok () Term)
(declare-fun FStar.List.Tot.Properties.partition_count (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.partition_count@tok () Term)
(declare-fun FStar.List.Tot.Properties.partition_count_forall (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.partition_count_forall@tok () Term)
(declare-fun FStar.List.Tot.Properties.sortWith_permutation (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.sortWith_permutation@tok () Term)
(declare-fun FStar.List.Tot.Properties.sorted.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.sorted.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Properties.sorted (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.sorted@tok () Term)
(declare-fun Tm_arrow_3ceaaa0abe084cc4615eb380e8d5e0cc () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Properties.sorted.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Properties.sorted.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Properties.sorted.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Properties.sorted.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Properties.sorted.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Properties.sorted @x0 @x1 @x2) (FStar.List.Tot.Properties.sorted.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Properties.sorted @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Properties.sorted.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Properties.sorted.fuel_instrumented))
(declare-fun FStar.List.Tot.Properties.total_order (Term Term) Term)
(declare-fun Tm_arrow_92649d42e4d7df07b51f92b06355903e () Term)
(declare-fun FStar.List.Tot.Properties.total_order@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_sorted (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_sorted@tok () Term)
(declare-fun Tm_refine_828abd88abe59cf052738363f3952d7b (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.sortWith_sorted (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.sortWith_sorted@tok () Term)
(declare-fun FStar.List.Tot.Properties.mem_memP (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.mem_memP@tok () Term)
(declare-fun FStar.List.Tot.Properties.lemma_index_memP (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_index_memP@tok () Term)
(declare-fun Tm_refine_bf2fa1226f2c9a0f6671df3e80ddcb8e (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.memP_empty (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.memP_empty@tok () Term)
(declare-fun FStar.List.Tot.Properties.memP_existsb (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.memP_existsb@tok () Term)
(declare-fun FStar.List.Tot.Properties.memP_map_intro (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.memP_map_intro@tok () Term)
(declare-fun FStar.List.Tot.Properties.memP_map_elim (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.memP_map_elim@tok () Term)
(declare-fun FStar.List.Tot.Properties.noRepeats_nil (Term) Term)
(declare-fun FStar.List.Tot.Properties.noRepeats_nil@tok () Term)
(declare-fun FStar.List.Tot.Properties.noRepeats_cons (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.noRepeats_cons@tok () Term)
(declare-fun FStar.List.Tot.Properties.noRepeats_append_elim (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.noRepeats_append_elim@tok () Term)
(declare-fun FStar.List.Tot.Properties.noRepeats_append_intro (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.noRepeats_append_intro@tok () Term)
(declare-fun FStar.List.Tot.Properties.assoc_nil (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.assoc_nil@tok () Term)
(declare-fun FStar.List.Tot.Properties.assoc_cons_eq (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.assoc_cons_eq@tok () Term)
(declare-fun FStar.List.Tot.Properties.assoc_cons_not_eq (Term Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.assoc_cons_not_eq@tok () Term)
(declare-fun FStar.List.Tot.Properties.assoc_append_elim_r (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.assoc_append_elim_r@tok () Term)
(declare-fun FStar.List.Tot.Properties.assoc_append_elim_l (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.assoc_append_elim_l@tok () Term)
(declare-fun FStar.List.Tot.Properties.assoc_memP_some (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.assoc_memP_some@tok () Term)
(declare-fun FStar.List.Tot.Properties.assoc_memP_none (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.assoc_memP_none@tok () Term)
(declare-fun FStar.List.Tot.Properties.assoc_mem (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.assoc_mem@tok () Term)
(declare-fun FStar.List.Tot.Properties.fold_left_invar (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.fold_left_invar@tok () Term)
(declare-fun FStar.List.Tot.Properties.fold_left_map (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.fold_left_map@tok () Term)
(declare-fun FStar.List.Tot.Properties.map_append (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.map_append@tok () Term)
(declare-fun FStar.List.Tot.Properties.fold_left_append (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.fold_left_append@tok () Term)
(declare-fun FStar.List.Tot.Properties.fold_left_monoid (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.fold_left_monoid@tok () Term)
(declare-fun FStar.List.Tot.Properties.fold_left_append_monoid (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.fold_left_append_monoid@tok () Term)
(declare-fun FStar.List.Tot.Properties.index_extensionality_aux (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.index_extensionality_aux@tok () Term)
(declare-fun FStar.List.Tot.Properties.index_extensionality (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.index_extensionality@tok () Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_nil (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_nil@tok () Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_or_eq_nil (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_or_eq_nil@tok () Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_cons (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_cons@tok () Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_trans (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_trans@tok () Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_correct (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_correct@tok () Term)
(declare-fun FStar.List.Tot.Properties.map_strict_prefix_of (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.map_strict_prefix_of@tok () Term)
(declare-fun FStar.List.Tot.Properties.mem_strict_prefix_of (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.mem_strict_prefix_of@tok () Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_exists_append (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_exists_append@tok () Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_or_eq_exists_append (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_or_eq_exists_append@tok () Term)
(declare-fun FStar.List.Tot.Properties.precedes_tl (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.precedes_tl@tok () Term)
(declare-fun FStar.List.Tot.Properties.precedes_append_cons_r (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.precedes_append_cons_r@tok () Term)
(declare-fun FStar.List.Tot.Properties.precedes_append_cons_prod_r (Term Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.precedes_append_cons_prod_r@tok () Term)
(declare-fun FStar.List.Tot.Properties.memP_precedes (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.memP_precedes@tok () Term)
(declare-fun FStar.List.Tot.Properties.assoc_precedes (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.assoc_precedes@tok () Term)
(declare-fun FStar.List.Tot.Properties.find_none (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.find_none@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_init_last (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_init_last@tok () Term)
(declare-fun FStar.List.Tot.Properties.init_last_def (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.init_last_def@tok () Term)
(declare-fun FStar.List.Tot.Properties.init_last_inj (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.init_last_inj@tok () Term)
(declare-fun FStar.Exn.raise (Term Term) Term)
(declare-fun FStar.Exn.raise@tok () Term)
(declare-fun FStar.Set.set (Term) Term)
(declare-fun FStar.Set.set@tok () Term)
(declare-fun FStar.Set.equal (Term Term Term) Term)
(declare-fun Tm_arrow_3c4f6e4cf547bd34ec8e06fa6c99957f () Term)
(declare-fun FStar.Set.equal@tok () Term)
(declare-fun FStar.Set.mem (Term Term Term) Term)
(declare-fun Tm_arrow_3622740f6f31d7fd022d9da9e7023a5e () Term)
(declare-fun FStar.Set.mem@tok () Term)
(declare-fun FStar.Set.empty (Term) Term)
(declare-fun Tm_arrow_8126140804a823c0abf765b538511539 () Term)
(declare-fun FStar.Set.empty@tok () Term)
(declare-fun FStar.Set.singleton (Term Term) Term)
(declare-fun Tm_arrow_764304f899737575fb0645eff5d55885 () Term)
(declare-fun FStar.Set.singleton@tok () Term)
(declare-fun FStar.Set.union (Term Term Term) Term)
(declare-fun Tm_arrow_7571f855c31e3c10cb35bbdc0f3ae878 () Term)
(declare-fun FStar.Set.union@tok () Term)
(declare-fun FStar.Set.intersect (Term Term Term) Term)
(declare-fun FStar.Set.intersect@tok () Term)
(declare-fun FStar.Set.complement (Term Term) Term)
(declare-fun Tm_arrow_4a14af1f2d9ff62069ebb44d0d1980f6 () Term)
(declare-fun FStar.Set.complement@tok () Term)
(declare-fun FStar.Set.disjoint (Term Term Term) Term)
(declare-fun FStar.Set.disjoint@tok () Term)
(declare-fun FStar.Set.subset (Term Term Term) Term)
(declare-fun Tm_arrow_9a1bfd7a415bf0250a3dd161144f27fa () Term)
(declare-fun FStar.Set.subset@tok () Term)
(declare-fun FStar.Set.mem_empty (Term Term) Term)
(declare-fun FStar.Set.mem_empty@tok () Term)
(declare-fun FStar.Set.mem_singleton (Term Term Term) Term)
(declare-fun FStar.Set.mem_singleton@tok () Term)
(declare-fun FStar.Set.mem_union (Term Term Term Term) Term)
(declare-fun FStar.Set.mem_union@tok () Term)
(declare-fun FStar.Set.mem_intersect (Term Term Term Term) Term)
(declare-fun FStar.Set.mem_intersect@tok () Term)
(declare-fun FStar.Set.mem_complement (Term Term Term) Term)
(declare-fun FStar.Set.mem_complement@tok () Term)
(declare-fun FStar.Set.mem_subset (Term Term Term) Term)
(declare-fun FStar.Set.mem_subset@tok () Term)
(declare-fun FStar.Set.subset_mem (Term Term Term) Term)
(declare-fun FStar.Set.subset_mem@tok () Term)
(declare-fun FStar.Set.lemma_equal_intro (Term Term Term) Term)
(declare-fun FStar.Set.lemma_equal_intro@tok () Term)
(declare-fun FStar.Set.lemma_equal_elim (Term Term Term) Term)
(declare-fun FStar.Set.lemma_equal_elim@tok () Term)
(declare-fun FStar.Set.lemma_equal_refl (Term Term Term) Term)
(declare-fun FStar.Set.lemma_equal_refl@tok () Term)
(declare-fun FStar.Set.disjoint_not_in_both (Term Term Term) Term)
(declare-fun FStar.Set.disjoint_not_in_both@tok () Term)
(declare-fun FStar.Set.as_set_.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.Set.as_set_.fuel_instrumented_token () Term)
(declare-fun FStar.Set.as_set_ (Term Term) Term)
(declare-fun FStar.Set.as_set_@tok () Term)
(declare-fun Tm_arrow_37c32948884378803a50151abdb3cb09 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.Set.as_set_.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.Set.as_set_.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.Set.as_set_.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.Set.as_set_.fuel_instrumented)) :named fuel_irrelevance_FStar.Set.as_set_.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.Set.as_set_ @x0 @x1) (FStar.Set.as_set_.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.Set.as_set_ @x0 @x1)) :qid @fuel_correspondence_FStar.Set.as_set_.fuel_instrumented)) :named fuel_correspondence_FStar.Set.as_set_.fuel_instrumented))
(declare-fun FStar.Set.as_set (Term Term) Term)
(declare-fun FStar.Set.as_set@tok () Term)
(declare-fun FStar.Set.lemma_disjoint_subset (Term Term Term Term) Term)
(declare-fun FStar.Set.lemma_disjoint_subset@tok () Term)
(declare-fun FStar.Preorder.relation (Term) Term)
(declare-fun FStar.Preorder.relation@tok () Term)
(declare-fun Tm_arrow_a19f9d49348d4e0038f0ded87d87802f (Term) Term)
(declare-fun FStar.Preorder.predicate (Term) Term)
(declare-fun FStar.Preorder.predicate@tok () Term)
(declare-fun FStar.Preorder.reflexive (Term Term) Term)
(declare-fun Tm_arrow_8e677a33afbeb812aa3779b7bdd0131c () Term)
(declare-fun FStar.Preorder.reflexive@tok () Term)
(declare-fun FStar.Preorder.transitive (Term Term) Term)
(declare-fun FStar.Preorder.transitive@tok () Term)
(declare-fun FStar.Preorder.preorder_rel (Term Term) Term)
(declare-fun FStar.Preorder.preorder_rel@tok () Term)
(declare-fun FStar.Preorder.preorder (Term) Term)
(declare-fun FStar.Preorder.preorder@tok () Term)
(declare-fun Tm_refine_bd10f09297e0e7dc08314f7d9211801c (Term) Term)
(declare-fun FStar.Preorder.stable (Term Term Term) Term)
(declare-fun Tm_arrow_88036d0811eee3361efd6229bae2556d () Term)
(declare-fun FStar.Preorder.stable@tok () Term)
(declare-fun FStar.Monotonic.Witnessed.witnessed (Term Term Term) Term)
(declare-fun Tm_arrow_d588830826b7a1087c9fd83547a14841 () Term)
(declare-fun FStar.Monotonic.Witnessed.witnessed@tok () Term)
(declare-fun FStar.Monotonic.Witnessed.lemma_witnessed_weakening (Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Witnessed.lemma_witnessed_weakening@tok () Term)
(declare-fun FStar.Monotonic.Witnessed.lemma_witnessed_constant (Term Term Term) Term)
(declare-fun FStar.Monotonic.Witnessed.lemma_witnessed_constant@tok () Term)
(declare-fun FStar.Monotonic.Witnessed.lemma_witnessed_nested (Term Term Term) Term)
(declare-fun FStar.Monotonic.Witnessed.lemma_witnessed_nested@tok () Term)
(declare-fun FStar.Monotonic.Witnessed.lemma_witnessed_and (Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Witnessed.lemma_witnessed_and@tok () Term)
(declare-fun FStar.Monotonic.Witnessed.lemma_witnessed_or (Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Witnessed.lemma_witnessed_or@tok () Term)
(declare-fun FStar.Monotonic.Witnessed.lemma_witnessed_impl (Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Witnessed.lemma_witnessed_impl@tok () Term)
(declare-fun FStar.Monotonic.Witnessed.lemma_witnessed_forall (Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Witnessed.lemma_witnessed_forall@tok () Term)
(declare-fun FStar.Monotonic.Witnessed.lemma_witnessed_exists (Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Witnessed.lemma_witnessed_exists@tok () Term)
(declare-fun FStar.FunctionalExtensionality.arrow (Term Term) Term)
(declare-fun Tm_arrow_28022b1931e0c9114f09925e8271570a () Term)
(declare-fun FStar.FunctionalExtensionality.arrow@tok () Term)
(declare-fun Tm_arrow_a7d5cc170be69663c495e8582d2bc62a (Term Term) Term)
(declare-fun FStar.FunctionalExtensionality.efun (Term Term) Term)
(declare-fun FStar.FunctionalExtensionality.efun@tok () Term)
(declare-fun FStar.FunctionalExtensionality.feq (Term Term Term Term) Term)
(declare-fun Tm_arrow_a26edf208afb0682b12235c66ccbd71c () Term)
(declare-fun FStar.FunctionalExtensionality.feq@tok () Term)
(declare-fun FStar.FunctionalExtensionality.on_domain (Term Term Term) Term)
(declare-fun Tm_arrow_4644eedc14c2df3e417da1b7c07108e6 () Term)
(declare-fun FStar.FunctionalExtensionality.on_domain@tok () Term)
(declare-fun FStar.FunctionalExtensionality.feq_on_domain (Term Term Term) Term)
(declare-fun FStar.FunctionalExtensionality.feq_on_domain@tok () Term)
(declare-fun FStar.FunctionalExtensionality.idempotence_on_domain (Term Term Term) Term)
(declare-fun FStar.FunctionalExtensionality.idempotence_on_domain@tok () Term)
(declare-fun FStar.FunctionalExtensionality.is_restricted (Term Term Term) Term)
(declare-fun Tm_arrow_b9e5e589ff6008bf9dc6c8ac06a76d9b () Term)
(declare-fun FStar.FunctionalExtensionality.is_restricted@tok () Term)
(declare-fun FStar.FunctionalExtensionality.restricted_t (Term Term) Term)
(declare-fun FStar.FunctionalExtensionality.restricted_t@tok () Term)
(declare-fun Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e (Term Term) Term)
(declare-fun FStar.FunctionalExtensionality.op_Hat_Subtraction_Greater (Term Term) Term)
(declare-fun FStar.FunctionalExtensionality.op_Hat_Subtraction_Greater@tok () Term)
(declare-fun Tm_abs_134069e179ddf4705519081c391c4e10 (Term Term) Term)
(declare-fun FStar.FunctionalExtensionality.on_dom (Term Term Term) Term)
(declare-fun Tm_arrow_2c8a39c5d1179d9b2dbff37a928311ac () Term)
(declare-fun FStar.FunctionalExtensionality.on_dom@tok () Term)
(declare-fun FStar.FunctionalExtensionality.on (Term Term Term) Term)
(declare-fun Tm_arrow_eab9bf17eb33be7efca62de21f27985c () Term)
(declare-fun FStar.FunctionalExtensionality.on@tok () Term)
(declare-fun FStar.FunctionalExtensionality.extensionality (Term Term Term Term) Term)
(declare-fun FStar.FunctionalExtensionality.extensionality@tok () Term)
(declare-fun FStar.FunctionalExtensionality.arrow_g (Term Term) Term)
(declare-fun FStar.FunctionalExtensionality.arrow_g@tok () Term)
(declare-fun FStar.FunctionalExtensionality.efun_g (Term Term) Term)
(declare-fun FStar.FunctionalExtensionality.efun_g@tok () Term)
(declare-fun FStar.FunctionalExtensionality.feq_g (Term Term Term Term) Term)
(declare-fun Tm_arrow_361ba84e60d273d78a5743d30c9dc908 () Term)
(declare-fun FStar.FunctionalExtensionality.feq_g@tok () Term)
(declare-fun FStar.FunctionalExtensionality.on_domain_g (Term Term Term) Term)
(declare-fun Tm_arrow_bf6371335aea4d90f7963f85ebad8f0d () Term)
(declare-fun FStar.FunctionalExtensionality.on_domain_g@tok () Term)
(declare-fun FStar.FunctionalExtensionality.feq_on_domain_g (Term Term Term) Term)
(declare-fun FStar.FunctionalExtensionality.feq_on_domain_g@tok () Term)
(declare-fun FStar.FunctionalExtensionality.idempotence_on_domain_g (Term Term Term) Term)
(declare-fun FStar.FunctionalExtensionality.idempotence_on_domain_g@tok () Term)
(declare-fun FStar.FunctionalExtensionality.is_restricted_g (Term Term Term) Term)
(declare-fun Tm_arrow_eadb252d9886eeba4938e11c03ce9b79 () Term)
(declare-fun FStar.FunctionalExtensionality.is_restricted_g@tok () Term)
(declare-fun FStar.FunctionalExtensionality.restricted_g_t (Term Term) Term)
(declare-fun FStar.FunctionalExtensionality.restricted_g_t@tok () Term)
(declare-fun Tm_refine_9185da06fca917c5514ae63042657873 (Term Term) Term)
(declare-fun FStar.FunctionalExtensionality.op_Hat_Subtraction_Greater_Greater (Term Term) Term)
(declare-fun FStar.FunctionalExtensionality.op_Hat_Subtraction_Greater_Greater@tok () Term)
(declare-fun FStar.FunctionalExtensionality.on_dom_g (Term Term Term) Term)
(declare-fun Tm_arrow_2e3db44d1263cf9452aaa6907eac66cc () Term)
(declare-fun FStar.FunctionalExtensionality.on_dom_g@tok () Term)
(declare-fun FStar.FunctionalExtensionality.on_g (Term Term Term) Term)
(declare-fun Tm_arrow_93a363f6461271c3e18b18593d7d03bf () Term)
(declare-fun FStar.FunctionalExtensionality.on_g@tok () Term)
(declare-fun FStar.FunctionalExtensionality.extensionality_g (Term Term Term Term) Term)
(declare-fun FStar.FunctionalExtensionality.extensionality_g@tok () Term)
(declare-fun FStar.PropositionalExtensionality.axiom (Term) Term)
(declare-fun FStar.PropositionalExtensionality.axiom@tok () Term)
(declare-fun FStar.PropositionalExtensionality.apply (Term Term) Term)
(declare-fun FStar.PropositionalExtensionality.apply@tok () Term)
(declare-fun FStar.TSet.set (Term) Term)
(declare-fun FStar.TSet.set@tok () Term)
(declare-fun FStar.TSet.equal (Term Term Term) Term)
(declare-fun Tm_arrow_a884d17a435ad7c4eff639e843c2e915 () Term)
(declare-fun FStar.TSet.equal@tok () Term)
(declare-fun FStar.TSet.mem (Term Term Term) Term)
(declare-fun Tm_arrow_873fce3a2d3f7456c376d64b089ed4d6 () Term)
(declare-fun FStar.TSet.mem@tok () Term)
(declare-fun FStar.TSet.empty (Term) Term)
(declare-fun Tm_arrow_7479bde908a771f633d91cf1e6159164 () Term)
(declare-fun FStar.TSet.empty@tok () Term)
(declare-fun FStar.TSet.singleton (Term Term) Term)
(declare-fun Tm_arrow_efd4130c737a1c63982cd396443713d5 () Term)
(declare-fun FStar.TSet.singleton@tok () Term)
(declare-fun FStar.TSet.union (Term Term Term) Term)
(declare-fun Tm_arrow_3de58fd829d33d9d3ee6c709e8528481 () Term)
(declare-fun FStar.TSet.union@tok () Term)
(declare-fun FStar.TSet.intersect (Term Term Term) Term)
(declare-fun FStar.TSet.intersect@tok () Term)
(declare-fun FStar.TSet.complement (Term Term) Term)
(declare-fun Tm_arrow_0bfcc001675666a8c38e138bf5ac4ee8 () Term)
(declare-fun FStar.TSet.complement@tok () Term)
(declare-fun FStar.TSet.subset (Term Term Term) Term)
(declare-fun FStar.TSet.subset@tok () Term)
(declare-fun FStar.TSet.mem_empty (Term Term) Term)
(declare-fun FStar.TSet.mem_empty@tok () Term)
(declare-fun FStar.TSet.mem_singleton (Term Term Term) Term)
(declare-fun FStar.TSet.mem_singleton@tok () Term)
(declare-fun FStar.TSet.mem_union (Term Term Term Term) Term)
(declare-fun FStar.TSet.mem_union@tok () Term)
(declare-fun FStar.TSet.mem_intersect (Term Term Term Term) Term)
(declare-fun FStar.TSet.mem_intersect@tok () Term)
(declare-fun FStar.TSet.mem_complement (Term Term Term) Term)
(declare-fun FStar.TSet.mem_complement@tok () Term)
(declare-fun FStar.TSet.mem_subset (Term Term Term) Term)
(declare-fun FStar.TSet.mem_subset@tok () Term)
(declare-fun FStar.TSet.subset_mem (Term Term Term) Term)
(declare-fun FStar.TSet.subset_mem@tok () Term)
(declare-fun FStar.TSet.lemma_equal_intro (Term Term Term) Term)
(declare-fun FStar.TSet.lemma_equal_intro@tok () Term)
(declare-fun FStar.TSet.lemma_equal_elim (Term Term Term) Term)
(declare-fun FStar.TSet.lemma_equal_elim@tok () Term)
(declare-fun FStar.TSet.lemma_equal_refl (Term Term Term) Term)
(declare-fun FStar.TSet.lemma_equal_refl@tok () Term)
(declare-fun FStar.TSet.tset_of_set (Term Term) Term)
(declare-fun Tm_arrow_3cbed28ab0f3b752d3656db155a3e9f3 () Term)
(declare-fun FStar.TSet.tset_of_set@tok () Term)
(declare-fun FStar.TSet.lemma_mem_tset_of_set (Term Term Term) Term)
(declare-fun FStar.TSet.lemma_mem_tset_of_set@tok () Term)
(declare-fun FStar.TSet.filter (Term Term Term) Term)
(declare-fun Tm_arrow_1a001071ad6106aec2470a87b194954c () Term)
(declare-fun FStar.TSet.filter@tok () Term)
(declare-fun FStar.TSet.lemma_mem_filter (Term Term Term Term) Term)
(declare-fun FStar.TSet.lemma_mem_filter@tok () Term)
(declare-fun FStar.TSet.map (Term Term Term Term) Term)
(declare-fun Tm_arrow_8af532fc458491b78200f8bcb1361e90 () Term)
(declare-fun FStar.TSet.map@tok () Term)
(declare-fun FStar.TSet.lemma_mem_map (Term Term Term Term Term) Term)
(declare-fun FStar.TSet.lemma_mem_map@tok () Term)
(declare-fun FStar.TSet.as_set_.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.TSet.as_set_.fuel_instrumented_token () Term)
(declare-fun FStar.TSet.as_set_ (Term Term) Term)
(declare-fun FStar.TSet.as_set_@tok () Term)
(declare-fun Tm_arrow_b205d25f357c7c6022ebceb6497753f3 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.TSet.as_set_.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.TSet.as_set_.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.TSet.as_set_.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.TSet.as_set_.fuel_instrumented)) :named fuel_irrelevance_FStar.TSet.as_set_.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.TSet.as_set_ @x0 @x1) (FStar.TSet.as_set_.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.TSet.as_set_ @x0 @x1)) :qid @fuel_correspondence_FStar.TSet.as_set_.fuel_instrumented)) :named fuel_correspondence_FStar.TSet.as_set_.fuel_instrumented))
(declare-fun FStar.Monotonic.Heap.set (Term) Term)
(declare-fun FStar.Monotonic.Heap.set@tok () Term)
(declare-fun FStar.Monotonic.Heap.tset (Term) Term)
(declare-fun FStar.Monotonic.Heap.tset@tok () Term)
(declare-fun FStar.Monotonic.Heap.heap () Term)
(declare-fun FStar.Monotonic.Heap.equal (Term Term) Term)
(declare-fun Tm_arrow_22ea7bfd67f4919a6b048e3792f6aac6 () Term)
(declare-fun FStar.Monotonic.Heap.equal@tok () Term)
(declare-fun FStar.Monotonic.Heap.equal_extensional (Term Term) Term)
(declare-fun FStar.Monotonic.Heap.equal_extensional@tok () Term)
(declare-fun FStar.Monotonic.Heap.emp (Dummy_sort) Term)
(declare-fun FStar.Monotonic.Heap.next_addr (Term) Term)
(declare-fun Tm_ghost_arrow_5f9b7d66eebaf7d00b1d1c8781e1bd33 () Term)
(declare-fun FStar.Monotonic.Heap.next_addr@tok () Term)
(declare-fun FStar.Monotonic.Heap.mref (Term Term) Term)
(declare-fun Tm_arrow_5bf0606d629ecb30adc0c556c248cd8a () Term)
(declare-fun FStar.Monotonic.Heap.mref@tok () Term)
(declare-fun FStar.Monotonic.Heap.addr_of (Term Term Term) Term)
(declare-fun Tm_ghost_arrow_3e3805ca9fb6a056cde481ca6e6b2666 () Term)
(declare-fun FStar.Monotonic.Heap.addr_of@tok () Term)
(declare-fun FStar.Monotonic.Heap.is_mm (Term Term Term) Term)
(declare-fun Tm_ghost_arrow_8181c56eb62b6f09010fd19362ec557f () Term)
(declare-fun FStar.Monotonic.Heap.is_mm@tok () Term)
(declare-fun FStar.Monotonic.Heap.compare_addrs (Term Term Term Term Term Term) Term)
(declare-fun Tm_ghost_arrow_d9620af24825960ed2af7182687876b1 () Term)
(declare-fun FStar.Monotonic.Heap.compare_addrs@tok () Term)
(declare-fun FStar.Monotonic.Heap.contains (Term Term Term Term) Term)
(declare-fun Tm_arrow_78eae2771402d9ca8cd20442a69b19a1 () Term)
(declare-fun FStar.Monotonic.Heap.contains@tok () Term)
(declare-fun FStar.Monotonic.Heap.addr_unused_in (Term Term) Term)
(declare-fun Tm_arrow_5e652491869ddd6d9add00477fe250d4 () Term)
(declare-fun FStar.Monotonic.Heap.addr_unused_in@tok () Term)
(declare-fun FStar.Monotonic.Heap.not_addr_unused_in_nullptr (Term) Term)
(declare-fun FStar.Monotonic.Heap.not_addr_unused_in_nullptr@tok () Term)
(declare-fun FStar.Monotonic.Heap.unused_in (Term Term Term Term) Term)
(declare-fun Tm_arrow_63db68eb9811874d358b39a3a3a594c0 () Term)
(declare-fun FStar.Monotonic.Heap.unused_in@tok () Term)
(declare-fun FStar.Monotonic.Heap.fresh (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_516fb5369267798913835a1aff4b7fe3 () Term)
(declare-fun FStar.Monotonic.Heap.fresh@tok () Term)
(declare-fun FStar.Monotonic.Heap.only_t (Term Term Term) Term)
(declare-fun Tm_ghost_arrow_b5e045c084fdae187553cafe5f60138d () Term)
(declare-fun FStar.Monotonic.Heap.only_t@tok () Term)
(declare-fun FStar.Monotonic.Heap.only (Term Term Term) Term)
(declare-fun Tm_ghost_arrow_fe5c1d63e245bf0ffcacbc885af17fc3 () Term)
(declare-fun FStar.Monotonic.Heap.only@tok () Term)
(declare-fun FStar.Monotonic.Heap.op_Hat_Plus_Plus (Term Term Term Term) Term)
(declare-fun Tm_ghost_arrow_21e6803beb51b9a6b0e4cc69a41b426b () Term)
(declare-fun FStar.Monotonic.Heap.op_Hat_Plus_Plus@tok () Term)
(declare-fun FStar.Monotonic.Heap.op_Plus_Plus_Hat (Term Term Term Term) Term)
(declare-fun Tm_ghost_arrow_155b4e9b4b7e1cd02500a5483fe79417 () Term)
(declare-fun FStar.Monotonic.Heap.op_Plus_Plus_Hat@tok () Term)
(declare-fun FStar.Monotonic.Heap.op_Hat_Plus_Hat (Term Term Term Term Term Term) Term)
(declare-fun Tm_ghost_arrow_a3f887bc1beedc82ccf25ac24af9a106 () Term)
(declare-fun FStar.Monotonic.Heap.op_Hat_Plus_Hat@tok () Term)
(declare-fun Tm_refine_60a89cd0c268e7ce38a2aab467325fd8 (Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.sel_tot (Term Term Term Term) Term)
(declare-fun Tm_arrow_b9c7abd21015083a18544d8f5e4bfa5f () Term)
(declare-fun FStar.Monotonic.Heap.sel_tot@tok () Term)
(declare-fun FStar.Monotonic.Heap.sel (Term Term Term Term) Term)
(declare-fun Tm_ghost_arrow_ffe8429ce0118fe92246c624b0f48cb8 () Term)
(declare-fun FStar.Monotonic.Heap.sel@tok () Term)
(declare-fun FStar.Monotonic.Heap.upd_tot (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_bc62c38ea3e82ecfe3b8b2ec42ad37db () Term)
(declare-fun FStar.Monotonic.Heap.upd_tot@tok () Term)
(declare-fun FStar.Monotonic.Heap.upd (Term Term Term Term Term) Term)
(declare-fun Tm_ghost_arrow_34a9169877528f6cc19628f2fc55c538 () Term)
(declare-fun FStar.Monotonic.Heap.upd@tok () Term)
(declare-fun FStar.Monotonic.Heap.alloc (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1c0aac8fe904b4d396ec54b136d2ffe7 () Term)
(declare-fun FStar.Monotonic.Heap.alloc@tok () Term)
(declare-fun Tm_refine_5015146880b2d88cf7d4492a6a4488b3 (Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.free_mm (Term Term Term Term) Term)
(declare-fun Tm_arrow_6ecb62093891266f94b1f3f1a90a448e () Term)
(declare-fun FStar.Monotonic.Heap.free_mm@tok () Term)
(declare-fun FStar.Monotonic.Heap.modifies_t (Term Term Term) Term)
(declare-fun Tm_arrow_a4fe7207a94d4c1647746618fee3b728 () Term)
(declare-fun FStar.Monotonic.Heap.modifies_t@tok () Term)
(declare-fun FStar.Monotonic.Heap.modifies (Term Term Term) Term)
(declare-fun Tm_arrow_46ebd76bd348c127a0b9b24dfad446fc () Term)
(declare-fun FStar.Monotonic.Heap.modifies@tok () Term)
(declare-fun FStar.Monotonic.Heap.equal_dom (Term Term) Term)
(declare-fun FStar.Monotonic.Heap.equal_dom@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_ref_unused_iff_addr_unused (Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_ref_unused_iff_addr_unused@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_contains_implies_used (Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_contains_implies_used@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_distinct_addrs_distinct_types (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_distinct_addrs_distinct_types@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_distinct_addrs_distinct_preorders (Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_distinct_addrs_distinct_preorders@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_distinct_addrs_distinct_mm (Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_distinct_addrs_distinct_mm@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_distinct_addrs_unused (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_distinct_addrs_unused@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_alloc (Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_alloc@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_free_mm_sel (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_free_mm_sel@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_free_mm_contains (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_free_mm_contains@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_free_mm_unused (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_free_mm_unused@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_free_addr_unused_in (Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_free_addr_unused_in@tok () Term)
(declare-fun Tm_refine_b197fcc3fe1a6a8a07bfa2aebd77a80a () Term)
(declare-fun FStar.Monotonic.Heap.lemma_sel_same_addr (Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_sel_same_addr@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_sel_upd1 (Term Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_sel_upd1@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_sel_upd2 (Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_sel_upd2@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_mref_injectivity () Term)
(declare-fun Tm_refine_79e96092f318e5c464db1ef01646f6ea () Term)
(declare-fun FStar.Monotonic.Heap.lemma_mref_injectivity_preorder (Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_mref_injectivity_preorder@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_in_dom_emp (Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_in_dom_emp@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_upd_contains (Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_upd_contains@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_well_typed_upd_contains (Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_well_typed_upd_contains@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_unused_upd_contains (Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_unused_upd_contains@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_upd_contains_different_addr (Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_upd_contains_different_addr@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_upd_unused (Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_upd_unused@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_contains_upd_modifies (Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_contains_upd_modifies@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_unused_upd_modifies (Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_unused_upd_modifies@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_sel_equals_sel_tot_for_contained_refs (Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_sel_equals_sel_tot_for_contained_refs@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_upd_equals_upd_tot_for_contained_refs (Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_upd_equals_upd_tot_for_contained_refs@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_modifies_and_equal_dom_sel_diff_addr (Term Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_modifies_and_equal_dom_sel_diff_addr@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_heap_equality_upd_same_addr (Term Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_heap_equality_upd_same_addr@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_heap_equality_cancel_same_mref_upd (Term Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_heap_equality_cancel_same_mref_upd@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_heap_equality_upd_with_sel (Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_heap_equality_upd_with_sel@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_heap_equality_commute_distinct_upds (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_heap_equality_commute_distinct_upds@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_next_addr_upd_tot (Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_next_addr_upd_tot@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_next_addr_upd (Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_next_addr_upd@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_next_addr_alloc (Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_next_addr_alloc@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_next_addr_free_mm (Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_next_addr_free_mm@tok () Term)
(declare-fun FStar.Monotonic.Heap.lemma_next_addr_contained_refs_addr (Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.lemma_next_addr_contained_refs_addr@tok () Term)
(declare-fun FStar.Monotonic.Heap.aref () Term)
(declare-fun FStar.Monotonic.Heap.dummy_aref (Dummy_sort) Term)
(declare-fun FStar.Monotonic.Heap.aref_equal (Term Term) Term)
(declare-fun Tm_refine_82707a6e3d48caa257bb4bddb01d7d73 (Term Term) Term)
(declare-fun Tm_ghost_arrow_15fb16496d887138d488803245c89d64 () Term)
(declare-fun FStar.Monotonic.Heap.aref_equal@tok () Term)
(declare-fun FStar.Monotonic.Heap.aref_of (Term Term Term) Term)
(declare-fun Tm_arrow_52adf65c8447500d70e5098f6c041a65 () Term)
(declare-fun FStar.Monotonic.Heap.aref_of@tok () Term)
(declare-fun FStar.Monotonic.Heap.addr_of_aref (Term) Term)
(declare-fun Tm_refine_afd51579b90d50ea23e03b743a1fa001 () Term)
(declare-fun Tm_ghost_arrow_168094509145e28b296ce766eea04736 () Term)
(declare-fun FStar.Monotonic.Heap.addr_of_aref@tok () Term)
(declare-fun FStar.Monotonic.Heap.addr_of_aref_of (Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.addr_of_aref_of@tok () Term)
(declare-fun FStar.Monotonic.Heap.aref_is_mm (Term) Term)
(declare-fun Tm_ghost_arrow_86fca776032c40cedacef7de5d660572 () Term)
(declare-fun FStar.Monotonic.Heap.aref_is_mm@tok () Term)
(declare-fun FStar.Monotonic.Heap.is_mm_aref_of (Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.is_mm_aref_of@tok () Term)
(declare-fun FStar.Monotonic.Heap.aref_unused_in (Term Term) Term)
(declare-fun Tm_arrow_8227ceb756b15f6c9348698ae3bb9b5e () Term)
(declare-fun FStar.Monotonic.Heap.aref_unused_in@tok () Term)
(declare-fun FStar.Monotonic.Heap.unused_in_aref_of (Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.unused_in_aref_of@tok () Term)
(declare-fun FStar.Monotonic.Heap.contains_aref_unused_in (Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.contains_aref_unused_in@tok () Term)
(declare-fun FStar.Monotonic.Heap.aref_live_at (Term Term Term Term) Term)
(declare-fun Tm_arrow_9c4830390b5ceaaec5e76b4f367d6c11 () Term)
(declare-fun FStar.Monotonic.Heap.aref_live_at@tok () Term)
(declare-fun FStar.Monotonic.Heap.gref_of (Term Term Term) Term)
(declare-fun Tm_refine_f871b1cec1676516ecbdd8b1fdf16da7 (Term Term) Term)
(declare-fun Tm_ghost_arrow_b090c641b42392b5ed08e8774610283a () Term)
(declare-fun FStar.Monotonic.Heap.gref_of@tok () Term)
(declare-fun FStar.Monotonic.Heap.ref_of (Term Term Term Term) Term)
(declare-fun Tm_refine_e9f69f18eb8d91697e49057991573e9f (Term Term Term Term) Term)
(declare-fun Tm_arrow_593ebdf0a0f4ac12ef03a2bedce8e97b () Term)
(declare-fun FStar.Monotonic.Heap.ref_of@tok () Term)
(declare-fun FStar.Monotonic.Heap.aref_live_at_aref_of (Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.aref_live_at_aref_of@tok () Term)
(declare-fun FStar.Monotonic.Heap.contains_gref_of (Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.contains_gref_of@tok () Term)
(declare-fun FStar.Monotonic.Heap.aref_of_gref_of (Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.aref_of_gref_of@tok () Term)
(declare-fun FStar.Monotonic.Heap.addr_of_gref_of (Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.addr_of_gref_of@tok () Term)
(declare-fun FStar.Monotonic.Heap.is_mm_gref_of (Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.is_mm_gref_of@tok () Term)
(declare-fun FStar.Monotonic.Heap.unused_in_gref_of (Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.unused_in_gref_of@tok () Term)
(declare-fun FStar.Monotonic.Heap.sel_ref_of (Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.sel_ref_of@tok () Term)
(declare-fun FStar.Monotonic.Heap.upd_ref_of (Term Term Term Term Term Term) Term)
(declare-fun FStar.Monotonic.Heap.upd_ref_of@tok () Term)
(declare-fun FStar.Heap.trivial_rel (Term) Term)
(declare-fun Tm_arrow_5e933b4711265943ba4bba734363561b () Term)
(declare-fun FStar.Heap.trivial_rel@tok () Term)
(declare-fun Tm_abs_568747eb5009c1dec504311dee989dc2 (Term) Term)
(declare-fun FStar.Heap.trivial_preorder (Term) Term)
(declare-fun Tm_arrow_1a6db055683d4a5b8a00786676e339b5 () Term)
(declare-fun FStar.Heap.trivial_preorder@tok () Term)
(declare-fun FStar.Heap.ref (Term) Term)
(declare-fun FStar.Heap.ref@tok () Term)
(declare-fun FStar.ST.gst_pre () Term)
(declare-fun FStar.ST.gst_post_ (Term Term) Term)
(declare-fun FStar.ST.gst_post_@tok () Term)
(declare-fun FStar.ST.gst_post (Term) Term)
(declare-fun FStar.ST.gst_post@tok () Term)
(declare-fun FStar.ST.gst_wp (Term) Term)
(declare-fun FStar.ST.gst_wp@tok () Term)
(declare-fun FStar.ST.lift_div_gst (Term Term Term Term) Term)
(declare-fun Tm_arrow_bbaeef6680f54609c0f7c85c1ba1bd3c () Term)
(declare-fun FStar.ST.lift_div_gst@tok () Term)
(declare-fun Tm_abs_d0f415a5361a9d7988d8e425dc193472 (Term Term Term) Term)
(declare-fun FStar.ST.heap_rel (Term Term) Term)
(declare-fun Tm_arrow_3ffd8da3a1b4fb5a75e097e2a7ead7a9 () Term)
(declare-fun FStar.ST.heap_rel@tok () Term)
(declare-fun FStar.ST.gst_get (Term) Term)
(declare-fun FStar.ST.gst_get@tok () Term)
(declare-fun FStar.ST.gst_put (Term) Term)
(declare-fun FStar.ST.gst_put@tok () Term)
(declare-fun FStar.ST.heap_predicate () Term)
(declare-fun Tm_arrow_c4185f52507383203d0d6335fd0332a8 () Term)
(declare-fun FStar.ST.stable (Term) Term)
(declare-fun Tm_arrow_6fabddab2e8badc7a54f2fce30469fd3 () Term)
(declare-fun FStar.ST.stable@tok () Term)
(declare-fun Tm_refine_a11098d99239284f14b49e1dd0266896 () Term)
(declare-fun FStar.ST.witnessed (Term) Term)
(declare-fun Tm_arrow_eda1223bb1d06bd92699e8c3d8f9251d () Term)
(declare-fun FStar.ST.witnessed@tok () Term)
(declare-fun FStar.ST.gst_witness (Term) Term)
(declare-fun FStar.ST.gst_witness@tok () Term)
(declare-fun FStar.ST.gst_recall (Term) Term)
(declare-fun FStar.ST.gst_recall@tok () Term)
(declare-fun FStar.ST.lemma_functoriality (Term Term) Term)
(declare-fun FStar.ST.lemma_functoriality@tok () Term)
(declare-fun FStar.ST.st_pre () Term)
(declare-fun FStar.ST.st_post_ (Term Term) Term)
(declare-fun FStar.ST.st_post_@tok () Term)
(declare-fun FStar.ST.st_post (Term) Term)
(declare-fun FStar.ST.st_post@tok () Term)
(declare-fun FStar.ST.st_wp (Term) Term)
(declare-fun FStar.ST.st_wp@tok () Term)
(declare-fun FStar.ST.lift_gst_state (Term Term) Term)
(declare-fun Tm_arrow_9f8aa176b7421939c7ff58d9777d1285 () Term)
(declare-fun FStar.ST.lift_gst_state@tok () Term)
(declare-fun FStar.ST.contains_pred (Term Term Term Term) Term)
(declare-fun FStar.ST.contains_pred@tok () Term)
(declare-fun FStar.ST.mref (Term Term) Term)
(declare-fun FStar.ST.mref@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.ST.contains_pred@tok)) :named kick_partial_app_ecc2873331cbcc22dfae3795dcb55413))
(declare-fun Tm_refine_e33ef751d600ad1c7f71142479103c47 (Term Term) Term)
(declare-fun FStar.ST.recall (Term Term Term) Term)
(declare-fun FStar.ST.recall@tok () Term)
(declare-fun FStar.ST.alloc (Term Term Term) Term)
(declare-fun FStar.ST.alloc@tok () Term)
(declare-fun FStar.ST.read (Term Term Term) Term)
(declare-fun FStar.ST.read@tok () Term)
(declare-fun FStar.ST.write (Term Term Term Term) Term)
(declare-fun FStar.ST.write@tok () Term)
(declare-fun FStar.ST.get (Term) Term)
(declare-fun FStar.ST.get@tok () Term)
(declare-fun FStar.ST.op_Bang (Term Term Term) Term)
(declare-fun FStar.ST.op_Bang@tok () Term)
(declare-fun FStar.ST.op_Colon_Equals (Term Term Term Term) Term)
(declare-fun FStar.ST.op_Colon_Equals@tok () Term)
(declare-fun FStar.ST.ref (Term) Term)
(declare-fun FStar.ST.ref@tok () Term)
(declare-fun FStar.ST.modifies_none (Term Term) Term)
(declare-fun FStar.ST.modifies_none@tok () Term)
(declare-fun FStar.All.all_pre () Term)
(declare-fun FStar.All.all_post_ (Term Term) Term)
(declare-fun FStar.All.all_post_@tok () Term)
(declare-fun FStar.All.all_post (Term) Term)
(declare-fun FStar.All.all_post@tok () Term)
(declare-fun FStar.All.all_wp (Term) Term)
(declare-fun FStar.All.all_wp@tok () Term)
(declare-fun FStar.All.lift_state_all (Term Term Term) Term)
(declare-fun Tm_arrow_3e4fec12f1c8981f71096a48e2abdc84 () Term)
(declare-fun FStar.All.lift_state_all@tok () Term)
(declare-fun Tm_arrow_1a8afa1581ea2f0b50a4559b8d2a62e2 (Term) Term)
(declare-fun Tm_abs_a80f8a7d3b0fcb56323fca84806de95f (Term Term) Term)
(declare-fun FStar.All.lift_exn_all (Term Term Term Term) Term)
(declare-fun Tm_arrow_135df870f17e8c60e7945fbf1f54fc29 () Term)
(declare-fun FStar.All.lift_exn_all@tok () Term)
(declare-fun Tm_abs_a9ba63c9dfe5bf6c6b349a4bcc1b5528 (Term Term Term) Term)
(declare-fun FStar.All.pipe_right (Term Term Term Term) Term)
(declare-fun FStar.All.pipe_right@tok () Term)
(declare-fun FStar.All.pipe_left (Term Term Term Term) Term)
(declare-fun FStar.All.pipe_left@tok () Term)
(declare-fun FStar.All.exit (Term Term) Term)
(declare-fun FStar.All.exit@tok () Term)
(declare-fun FStar.All.try_with (Term Term Term) Term)
(declare-fun FStar.All.try_with@tok () Term)
(declare-fun FStar.All.Failure (Term) Term)
(declare-fun FStar.All.Failure_uu___ (Term) Term)
(declare-fun FStar.All.Failure@tok () Term)
(declare-fun Tm_arrow_ba2c44545f37b4cb1ed7c94934918f65 () Term)
(define-fun is-FStar.All.Failure ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 118) (= __@x0 (FStar.All.Failure (FStar.All.Failure_uu___ __@x0)))))
(declare-fun FStar.All.uu___is_Failure (Term) Term)
(declare-fun Tm_arrow_81ab3356926b82578fcb92e97b412345 () Term)
(declare-fun FStar.All.uu___is_Failure@tok () Term)
(declare-fun Tm_refine_149c6719f34c408becdf9120a4ae2d59 () Term)
(declare-fun FStar.All.__proj__Failure__item__uu___ (Term) Term)
(declare-fun Tm_arrow_931774599ca5f3ca7bd6eb18157a7dec () Term)
(declare-fun FStar.All.__proj__Failure__item__uu___@tok () Term)
(declare-fun FStar.All.failwith (Term Term) Term)
(declare-fun FStar.All.failwith@tok () Term)
(declare-fun FStar.List.hd (Term Term) Term)
(declare-fun FStar.List.hd@tok () Term)
(declare-fun FStar.List.tail (Term Term) Term)
(declare-fun FStar.List.tail@tok () Term)
(declare-fun FStar.List.tl (Term Term) Term)
(declare-fun FStar.List.tl@tok () Term)
(declare-fun FStar.List.last (Term Term) Term)
(declare-fun FStar.List.last@tok () Term)
(declare-fun FStar.List.init (Term Term) Term)
(declare-fun FStar.List.init@tok () Term)
(declare-fun FStar.List.nth (Term Term Term) Term)
(declare-fun FStar.List.nth@tok () Term)
(declare-fun FStar.List.iter (Term Term Term) Term)
(declare-fun FStar.List.iter@tok () Term)
(declare-fun FStar.List.iteri_aux (Term Term Term Term) Term)
(declare-fun FStar.List.iteri_aux@tok () Term)
(declare-fun FStar.List.iteri (Term Term Term) Term)
(declare-fun FStar.List.iteri@tok () Term)
(declare-fun FStar.List.map (Term Term Term Term) Term)
(declare-fun FStar.List.map@tok () Term)
(declare-fun FStar.List.mapT (Term Term Term Term) Term)
(declare-fun FStar.List.mapT@tok () Term)
(declare-fun FStar.List.mapi_init (Term Term Term Term Term) Term)
(declare-fun FStar.List.mapi_init@tok () Term)
(declare-fun FStar.List.mapi (Term Term Term Term) Term)
(declare-fun FStar.List.mapi@tok () Term)
(declare-fun FStar.List.concatMap (Term Term Term Term) Term)
(declare-fun FStar.List.concatMap@tok () Term)
(declare-fun FStar.List.map2 (Term Term Term Term Term Term) Term)
(declare-fun FStar.List.map2@tok () Term)
(declare-fun FStar.List.map3 (Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.List.map3@tok () Term)
(declare-fun FStar.List.fold_left (Term Term Term Term Term) Term)
(declare-fun FStar.List.fold_left@tok () Term)
(declare-fun FStar.List.fold_left2 (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.List.fold_left2@tok () Term)
(declare-fun FStar.List.fold_right (Term Term Term Term Term) Term)
(declare-fun FStar.List.fold_right@tok () Term)
(declare-fun FStar.List.filter (Term Term Term) Term)
(declare-fun FStar.List.filter@tok () Term)
(declare-fun FStar.List.for_all (Term Term Term) Term)
(declare-fun FStar.List.for_all@tok () Term)
(declare-fun FStar.List.forall2 (Term Term Term Term Term) Term)
(declare-fun FStar.List.forall2@tok () Term)
(declare-fun FStar.List.collect (Term Term Term Term) Term)
(declare-fun FStar.List.collect@tok () Term)
(declare-fun FStar.List.tryFind (Term Term Term) Term)
(declare-fun FStar.List.tryFind@tok () Term)
(declare-fun FStar.List.tryPick (Term Term Term Term) Term)
(declare-fun FStar.List.tryPick@tok () Term)
(declare-fun FStar.List.choose (Term Term Term Term) Term)
(declare-fun FStar.List.choose@tok () Term)
(declare-fun FStar.List.partition (Term Term Term) Term)
(declare-fun FStar.List.partition@tok () Term)
(declare-fun FStar.List.zip (Term Term Term Term) Term)
(declare-fun FStar.List.zip@tok () Term)
(declare-fun FStar.List.sortWith (Term Term Term) Term)
(declare-fun FStar.List.sortWith@tok () Term)
(declare-fun FStar.List.splitAt (Term Term Term) Term)
(declare-fun FStar.List.splitAt@tok () Term)
(declare-fun FStar.List.filter_map (Term Term Term Term) Term)
(declare-fun FStar.List.filter_map@tok () Term)
(declare-fun FStar.List.index (Term Term Term) Term)
(declare-fun FStar.List.index@tok () Term)
(declare-fun FStar.Map.t (Term Term) Term)
(declare-fun Tm_arrow_2b8b9bde9fdc9f797e5827d0c154aeeb () Term)
(declare-fun FStar.Map.t@tok () Term)
(declare-fun FStar.Map.sel (Term Term Term Term) Term)
(declare-fun Tm_arrow_28a168f8d4c6d78564a214862be72b08 () Term)
(declare-fun FStar.Map.sel@tok () Term)
(declare-fun FStar.Map.upd (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_b19283e90b47034162373413c6a19933 () Term)
(declare-fun FStar.Map.upd@tok () Term)
(declare-fun FStar.Map.const (Term Term Term) Term)
(declare-fun Tm_arrow_867ad7c8cdd01bd87f415b1f9e0b39ac () Term)
(declare-fun FStar.Map.const@tok () Term)
(declare-fun FStar.Map.domain (Term Term Term) Term)
(declare-fun Tm_arrow_6e8371e4f424600b54c69f2eb03b48d8 () Term)
(declare-fun FStar.Map.domain@tok () Term)
(declare-fun FStar.Map.contains (Term Term Term Term) Term)
(declare-fun Tm_arrow_32b461b2324f01c7a6bc6b577725566d () Term)
(declare-fun FStar.Map.contains@tok () Term)
(declare-fun FStar.Map.concat (Term Term Term Term) Term)
(declare-fun Tm_arrow_b137090ab92fa6ffe958df8f30b9f54e () Term)
(declare-fun FStar.Map.concat@tok () Term)
(declare-fun FStar.Map.map_val (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9123217b92d7c89a4449fe44590b9f47 () Term)
(declare-fun FStar.Map.map_val@tok () Term)
(declare-fun FStar.Map.restrict (Term Term Term Term) Term)
(declare-fun Tm_arrow_e8f96ed4bf330326d457be2f8416d734 () Term)
(declare-fun FStar.Map.restrict@tok () Term)
(declare-fun FStar.Map.const_on (Term Term Term Term) Term)
(declare-fun Tm_arrow_f99b4e662f3e4a97cdb11f6ede73601e () Term)
(declare-fun FStar.Map.const_on@tok () Term)
(declare-fun FStar.Map.disjoint_dom (Term Term Term Term) Term)
(declare-fun Tm_arrow_556fc2b76256aeb4c51415a912920e4f () Term)
(declare-fun FStar.Map.disjoint_dom@tok () Term)
(declare-fun FStar.Map.has_dom (Term Term Term Term) Term)
(declare-fun Tm_arrow_978eafbacd55316f8accb3c830570c46 () Term)
(declare-fun FStar.Map.has_dom@tok () Term)
(declare-fun FStar.Map.lemma_SelUpd1 (Term Term Term Term Term) Term)
(declare-fun FStar.Map.lemma_SelUpd1@tok () Term)
(declare-fun FStar.Map.lemma_SelUpd2 (Term Term Term Term Term Term) Term)
(declare-fun FStar.Map.lemma_SelUpd2@tok () Term)
(declare-fun FStar.Map.lemma_SelConst (Term Term Term Term) Term)
(declare-fun FStar.Map.lemma_SelConst@tok () Term)
(declare-fun FStar.Map.lemma_SelRestrict (Term Term Term Term Term) Term)
(declare-fun FStar.Map.lemma_SelRestrict@tok () Term)
(declare-fun FStar.Map.lemma_SelConcat1 (Term Term Term Term Term) Term)
(declare-fun FStar.Map.lemma_SelConcat1@tok () Term)
(declare-fun FStar.Map.lemma_SelConcat2 (Term Term Term Term Term) Term)
(declare-fun FStar.Map.lemma_SelConcat2@tok () Term)
(declare-fun FStar.Map.lemma_SelMapVal (Term Term Term Term Term Term) Term)
(declare-fun FStar.Map.lemma_SelMapVal@tok () Term)
(declare-fun FStar.Map.lemma_InDomUpd1 (Term Term Term Term Term Term) Term)
(declare-fun FStar.Map.lemma_InDomUpd1@tok () Term)
(declare-fun FStar.Map.lemma_InDomUpd2 (Term Term Term Term Term Term) Term)
(declare-fun FStar.Map.lemma_InDomUpd2@tok () Term)
(declare-fun FStar.Map.lemma_InDomConstMap (Term Term Term Term) Term)
(declare-fun FStar.Map.lemma_InDomConstMap@tok () Term)
(declare-fun FStar.Map.lemma_InDomConcat (Term Term Term Term Term) Term)
(declare-fun FStar.Map.lemma_InDomConcat@tok () Term)
(declare-fun FStar.Map.lemma_InMapVal (Term Term Term Term Term Term) Term)
(declare-fun FStar.Map.lemma_InMapVal@tok () Term)
(declare-fun FStar.Map.lemma_InDomRestrict (Term Term Term Term Term) Term)
(declare-fun FStar.Map.lemma_InDomRestrict@tok () Term)
(declare-fun FStar.Map.lemma_ContainsDom (Term Term Term Term) Term)
(declare-fun FStar.Map.lemma_ContainsDom@tok () Term)
(declare-fun FStar.Map.lemma_UpdDomain (Term Term Term Term Term) Term)
(declare-fun FStar.Map.lemma_UpdDomain@tok () Term)
(declare-fun FStar.Map.equal (Term Term Term Term) Term)
(declare-fun Tm_arrow_8d5e09121919a406639e2201d1f5d3dd () Term)
(declare-fun FStar.Map.equal@tok () Term)
(declare-fun FStar.Map.lemma_equal_intro (Term Term Term Term) Term)
(declare-fun FStar.Map.lemma_equal_intro@tok () Term)
(declare-fun FStar.Map.lemma_equal_elim (Term Term Term Term) Term)
(declare-fun FStar.Map.lemma_equal_elim@tok () Term)
(declare-fun FStar.Map.lemma_equal_refl (Term Term Term Term) Term)
(declare-fun FStar.Map.lemma_equal_refl@tok () Term)
(declare-fun Words_s.two (Term) Term)
(declare-fun Words_s.two@x0 (Term) Term)
(declare-fun Words_s.two@tok () Term)
(declare-fun Words_s.Mktwo (Term Term Term) Term)
(declare-fun Words_s.Mktwo_a (Term) Term)
(declare-fun Words_s.Mktwo_lo (Term) Term)
(declare-fun Words_s.Mktwo_hi (Term) Term)
(declare-fun Words_s.Mktwo@tok () Term)
(declare-fun Tm_arrow_891dc9d7337dd4cfc59d299be1af288e () Term)
(define-fun is-Words_s.two ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 101) (exists ((@x0 Term)) (! (= __@x0 (Words_s.two @x0)) :qid is-Words_s.two))))
(define-fun is-Words_s.Mktwo ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 108) (= __@x0 (Words_s.Mktwo (Words_s.Mktwo_a __@x0) (Words_s.Mktwo_lo __@x0) (Words_s.Mktwo_hi __@x0)))))
(declare-fun Words_s.__proj__Mktwo__item__lo (Term Term) Term)
(declare-fun Tm_arrow_dea23312d572b114e5cc9e5ba40c5790 () Term)
(declare-fun Words_s.__proj__Mktwo__item__lo@tok () Term)
(declare-fun Words_s.__proj__Mktwo__item__hi (Term Term) Term)
(declare-fun Words_s.__proj__Mktwo__item__hi@tok () Term)
(declare-fun Words_s.four (Term) Term)
(declare-fun Words_s.four@x0 (Term) Term)
(declare-fun Words_s.four@tok () Term)
(declare-fun Words_s.Mkfour (Term Term Term Term Term) Term)
(declare-fun Words_s.Mkfour_a (Term) Term)
(declare-fun Words_s.Mkfour_lo0 (Term) Term)
(declare-fun Words_s.Mkfour_lo1 (Term) Term)
(declare-fun Words_s.Mkfour_hi2 (Term) Term)
(declare-fun Words_s.Mkfour_hi3 (Term) Term)
(declare-fun Words_s.Mkfour@tok () Term)
(declare-fun Tm_arrow_bd5b3149b515229cad16947fcbd6bb02 () Term)
(define-fun is-Words_s.four ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 116) (exists ((@x0 Term)) (! (= __@x0 (Words_s.four @x0)) :qid is-Words_s.four))))
(define-fun is-Words_s.Mkfour ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 123) (= __@x0 (Words_s.Mkfour (Words_s.Mkfour_a __@x0) (Words_s.Mkfour_lo0 __@x0) (Words_s.Mkfour_lo1 __@x0) (Words_s.Mkfour_hi2 __@x0) (Words_s.Mkfour_hi3 __@x0)))))
(declare-fun Words_s.__proj__Mkfour__item__lo0 (Term Term) Term)
(declare-fun Tm_arrow_378cce22621e1d7cc1522a879cc81f51 () Term)
(declare-fun Words_s.__proj__Mkfour__item__lo0@tok () Term)
(declare-fun Words_s.__proj__Mkfour__item__lo1 (Term Term) Term)
(declare-fun Words_s.__proj__Mkfour__item__lo1@tok () Term)
(declare-fun Words_s.__proj__Mkfour__item__hi2 (Term Term) Term)
(declare-fun Words_s.__proj__Mkfour__item__hi2@tok () Term)
(declare-fun Words_s.__proj__Mkfour__item__hi3 (Term Term) Term)
(declare-fun Words_s.__proj__Mkfour__item__hi3@tok () Term)
(declare-fun Words_s.eight (Term) Term)
(declare-fun Words_s.eight@x0 (Term) Term)
(declare-fun Words_s.eight@tok () Term)
(declare-fun Words_s.Mkeight (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Words_s.Mkeight_a (Term) Term)
(declare-fun Words_s.Mkeight_lo_0 (Term) Term)
(declare-fun Words_s.Mkeight_lo_1 (Term) Term)
(declare-fun Words_s.Mkeight_lo_2 (Term) Term)
(declare-fun Words_s.Mkeight_lo_3 (Term) Term)
(declare-fun Words_s.Mkeight_hi_4 (Term) Term)
(declare-fun Words_s.Mkeight_hi_5 (Term) Term)
(declare-fun Words_s.Mkeight_hi_6 (Term) Term)
(declare-fun Words_s.Mkeight_hi_7 (Term) Term)
(declare-fun Words_s.Mkeight@tok () Term)
(declare-fun Tm_arrow_f0770643c31d003b40514cab52a396bd () Term)
(define-fun is-Words_s.eight ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 135) (exists ((@x0 Term)) (! (= __@x0 (Words_s.eight @x0)) :qid is-Words_s.eight))))
(define-fun is-Words_s.Mkeight ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 142) (= __@x0 (Words_s.Mkeight (Words_s.Mkeight_a __@x0) (Words_s.Mkeight_lo_0 __@x0) (Words_s.Mkeight_lo_1 __@x0) (Words_s.Mkeight_lo_2 __@x0) (Words_s.Mkeight_lo_3 __@x0) (Words_s.Mkeight_hi_4 __@x0) (Words_s.Mkeight_hi_5 __@x0) (Words_s.Mkeight_hi_6 __@x0) (Words_s.Mkeight_hi_7 __@x0)))))
(declare-fun Words_s.__proj__Mkeight__item__lo_0 (Term Term) Term)
(declare-fun Tm_arrow_42f1bd0052794f396a8d2e55ca31601c () Term)
(declare-fun Words_s.__proj__Mkeight__item__lo_0@tok () Term)
(declare-fun Words_s.__proj__Mkeight__item__lo_1 (Term Term) Term)
(declare-fun Words_s.__proj__Mkeight__item__lo_1@tok () Term)
(declare-fun Words_s.__proj__Mkeight__item__lo_2 (Term Term) Term)
(declare-fun Words_s.__proj__Mkeight__item__lo_2@tok () Term)
(declare-fun Words_s.__proj__Mkeight__item__lo_3 (Term Term) Term)
(declare-fun Words_s.__proj__Mkeight__item__lo_3@tok () Term)
(declare-fun Words_s.__proj__Mkeight__item__hi_4 (Term Term) Term)
(declare-fun Words_s.__proj__Mkeight__item__hi_4@tok () Term)
(declare-fun Words_s.__proj__Mkeight__item__hi_5 (Term Term) Term)
(declare-fun Words_s.__proj__Mkeight__item__hi_5@tok () Term)
(declare-fun Words_s.__proj__Mkeight__item__hi_6 (Term Term) Term)
(declare-fun Words_s.__proj__Mkeight__item__hi_6@tok () Term)
(declare-fun Words_s.__proj__Mkeight__item__hi_7 (Term Term) Term)
(declare-fun Words_s.__proj__Mkeight__item__hi_7@tok () Term)
(declare-fun Words_s.pow2_norm (Term) Term)
(declare-fun Words_s.pow2_norm@tok () Term)
(declare-fun Words_s.pow2_1 (Dummy_sort) Term)
(declare-fun Words_s.pow2_2 (Dummy_sort) Term)
(declare-fun Words_s.pow2_4 (Dummy_sort) Term)
(declare-fun Words_s.pow2_8 (Dummy_sort) Term)
(declare-fun Words_s.pow2_16 (Dummy_sort) Term)
(declare-fun Words_s.pow2_32 (Dummy_sort) Term)
(declare-fun Words_s.pow2_64 (Dummy_sort) Term)
(declare-fun Words_s.pow2_128 (Dummy_sort) Term)
(declare-fun Words_s.natN (Term) Term)
(declare-fun Tm_arrow_9974df5c311cfcfa7100bc7bef095e1e () Term)
(declare-fun Words_s.natN@tok () Term)
(declare-fun Tm_refine_c1424615841f28cac7fc34e92b7ff33c (Term) Term)
(declare-fun Words_s.nat1 () Term)
(declare-fun Words_s.nat2 () Term)
(declare-fun Words_s.nat4 () Term)
(declare-fun Words_s.nat8 () Term)
(declare-fun Words_s.nat16 () Term)
(declare-fun Words_s.nat32 () Term)
(declare-fun Words_s.nat64 () Term)
(declare-fun Words_s.nat128 () Term)
(declare-fun Words_s.int_to_natN (Term Term) Term)
(declare-fun Tm_refine_6eaf01002a97f6bf880b9ccfb67e07b8 (Term Term) Term)
(declare-fun Tm_arrow_dee4c5a91089477ab7c36144936ab941 () Term)
(declare-fun Words_s.int_to_natN@tok () Term)
(declare-fun Wasm.Optr.optr (Term) Term)
(declare-fun Wasm.Optr.optr@x0 (Term) Term)
(declare-fun Wasm.Optr.optr@tok () Term)
(declare-fun Wasm.Optr.Left (Term Term) Term)
(declare-fun Wasm.Optr.Left__a (Term) Term)
(declare-fun Wasm.Optr.Left_v (Term) Term)
(declare-fun Wasm.Optr.Left@tok () Term)
(declare-fun Wasm.Optr.Right (Term Term) Term)
(declare-fun Wasm.Optr.Right__a (Term) Term)
(declare-fun Wasm.Optr.Right_v (Term) Term)
(declare-fun Wasm.Optr.Right@tok () Term)
(declare-fun Tm_arrow_7d6c36021738f38c1363b1b23d4ddb2d () Term)
(declare-fun Tm_arrow_ecacf7c430fb1371050ec8547a112b3b () Term)
(define-fun is-Wasm.Optr.optr ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 101) (exists ((@x0 Term)) (! (= __@x0 (Wasm.Optr.optr @x0)) :qid is-Wasm.Optr.optr))))
(define-fun is-Wasm.Optr.Left ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 108) (= __@x0 (Wasm.Optr.Left (Wasm.Optr.Left__a __@x0) (Wasm.Optr.Left_v __@x0)))))
(define-fun is-Wasm.Optr.Right ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 113) (= __@x0 (Wasm.Optr.Right (Wasm.Optr.Right__a __@x0) (Wasm.Optr.Right_v __@x0)))))
(declare-fun Wasm.Optr.uu___is_Left (Term Term) Term)
(declare-fun Tm_arrow_ebe186c49d0b1e4e2c5c2b9bbb073911 () Term)
(declare-fun Wasm.Optr.uu___is_Left@tok () Term)
(declare-fun Tm_refine_5677bbfa0bd7175fe9ec845ed1513be0 (Term) Term)
(declare-fun Wasm.Optr.__proj__Left__item__v (Term Term) Term)
(declare-fun Tm_arrow_bb4e34db1d59d90d336d72f8ebfb3f81 () Term)
(declare-fun Wasm.Optr.__proj__Left__item__v@tok () Term)
(declare-fun Wasm.Optr.uu___is_Right (Term Term) Term)
(declare-fun Wasm.Optr.uu___is_Right@tok () Term)
(declare-fun Tm_refine_c9ad36a34333809028ef445945f0e081 (Term) Term)
(declare-fun Wasm.Optr.__proj__Right__item__v (Term Term) Term)
(declare-fun Tm_arrow_9fe609c4d5cc734672fe529ca05002de () Term)
(declare-fun Wasm.Optr.__proj__Right__item__v@tok () Term)
(declare-fun Wasm.Optr.left (Term Term) Term)
(declare-fun Wasm.Optr.left@tok () Term)
(declare-fun Wasm.Optr.right (Term Term) Term)
(declare-fun Wasm.Optr.right@tok () Term)
(declare-fun Wasm.Optr.extr (Term Term Term) Term)
(declare-fun Tm_arrow_01780076901415b0c316c9ab6fe2bce8 () Term)
(declare-fun Wasm.Optr.extr@tok () Term)
(declare-fun Wasm.Optr.o_fmap (Term Term Term Term) Term)
(declare-fun Tm_arrow_bd5ddef9663d7f22e46f2a3cf2e93766 () Term)
(declare-fun Wasm.Optr.o_fmap@tok () Term)
(declare-fun Tm_arrow_31983ce7bb3fa3288ec94b088df0f02a (Term Term Term) Term)
(declare-fun Wasm.Optr.o_fmap2 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_17247a06938c93492fc1825d12d79d7e () Term)
(declare-fun Wasm.Optr.o_fmap2@tok () Term)
(declare-fun Tm_arrow_ffc5ce8b6466e890a7d181ed0dcf9881 (Term Term) Term)
(declare-fun Wasm.Optr.o_bind (Term Term Term Term) Term)
(declare-fun Tm_arrow_b4ab8bfd4e7acf2bc390a3704a1c6f09 () Term)
(declare-fun Wasm.Optr.o_bind@tok () Term)
(declare-fun Tm_arrow_4ce5aed8eddb0f98ca30d84565f4314c (Term Term Term) Term)
(declare-fun Wasm.Optr.o_bind2 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_84f70db1a58183a5b9436732f81feb32 () Term)
(declare-fun Wasm.Optr.o_bind2@tok () Term)
(declare-fun Wasm.Optr.o_wrap (Term Term Term Term) Term)
(declare-fun Tm_arrow_a64d8cac3a69991a90b30583de46ff3d () Term)
(declare-fun Wasm.Optr.o_wrap@tok () Term)
(declare-fun Wasm.Optr.o_wrap2 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_e6b34f4e5bc547d9b8f8674c328e7efb () Term)
(declare-fun Wasm.Optr.o_wrap2@tok () Term)
(declare-fun Wasm.F64.t () Term)
(declare-fun Wasm.F64.bytes () Term)
(declare-fun Wasm.F64.float () Term)
(declare-fun Wasm.F64.pos_nan (Dummy_sort) Term)
(declare-fun Wasm.F64.neg_nan (Dummy_sort) Term)
(declare-fun Wasm.F64.of_float (Term) Term)
(declare-fun Tm_arrow_1ff2155ed3de063e92b4bebc5d72ee43 () Term)
(declare-fun Wasm.F64.of_float@tok () Term)
(declare-fun Wasm.F64.to_float (Term) Term)
(declare-fun Tm_arrow_df9e92c058eaef6e87335c4c483a26f6 () Term)
(declare-fun Wasm.F64.to_float@tok () Term)
(declare-fun Wasm.F64.of_string (Term) Term)
(declare-fun Tm_arrow_1d411cf3c646829e703c7653bbae4261 () Term)
(declare-fun Wasm.F64.of_string@tok () Term)
(declare-fun Wasm.F64.to_string (Term) Term)
(declare-fun Tm_arrow_e5ecd09b3095da4f4840ca652ab798b5 () Term)
(declare-fun Wasm.F64.to_string@tok () Term)
(declare-fun Wasm.F64.add (Term Term) Term)
(declare-fun Tm_arrow_3d2742b6cdcca15ad6bc745b4c4b3ebf () Term)
(declare-fun Wasm.F64.add@tok () Term)
(declare-fun Wasm.F64.sub (Term Term) Term)
(declare-fun Wasm.F64.sub@tok () Term)
(declare-fun Wasm.F64.mul (Term Term) Term)
(declare-fun Wasm.F64.mul@tok () Term)
(declare-fun Wasm.F64.div (Term Term) Term)
(declare-fun Wasm.F64.div@tok () Term)
(declare-fun Wasm.F64.sqrt (Term) Term)
(declare-fun Tm_arrow_229c951daea041ef82fc9f2e553efa6d () Term)
(declare-fun Wasm.F64.sqrt@tok () Term)
(declare-fun Wasm.F64.min (Term Term) Term)
(declare-fun Wasm.F64.min@tok () Term)
(declare-fun Wasm.F64.max (Term Term) Term)
(declare-fun Wasm.F64.max@tok () Term)
(declare-fun Wasm.F64.ceil (Term) Term)
(declare-fun Wasm.F64.ceil@tok () Term)
(declare-fun Wasm.F64.floor (Term) Term)
(declare-fun Wasm.F64.floor@tok () Term)
(declare-fun Wasm.F64.trunc (Term) Term)
(declare-fun Wasm.F64.trunc@tok () Term)
(declare-fun Wasm.F64.nearest (Term) Term)
(declare-fun Wasm.F64.nearest@tok () Term)
(declare-fun Wasm.F64.abs (Term) Term)
(declare-fun Wasm.F64.abs@tok () Term)
(declare-fun Wasm.F64.neg (Term) Term)
(declare-fun Wasm.F64.neg@tok () Term)
(declare-fun Wasm.F64.copysign (Term Term) Term)
(declare-fun Wasm.F64.copysign@tok () Term)
(declare-fun Wasm.F64.eq (Term Term) Term)
(declare-fun Tm_arrow_c1160d2710f1fc9e831e9a6626683cfe () Term)
(declare-fun Wasm.F64.eq@tok () Term)
(declare-fun Wasm.F64.ne (Term Term) Term)
(declare-fun Wasm.F64.ne@tok () Term)
(declare-fun Wasm.F64.lt (Term Term) Term)
(declare-fun Wasm.F64.lt@tok () Term)
(declare-fun Wasm.F64.le (Term Term) Term)
(declare-fun Wasm.F64.le@tok () Term)
(declare-fun Wasm.F64.gt (Term Term) Term)
(declare-fun Wasm.F64.gt@tok () Term)
(declare-fun Wasm.F64.ge (Term Term) Term)
(declare-fun Wasm.F64.ge@tok () Term)
(declare-fun Wasm.F64.zero (Dummy_sort) Term)
(declare-fun Wasm.F64.of_bytes (Term) Term)
(declare-fun Tm_arrow_b1623c340d295d279c0624f75a798539 () Term)
(declare-fun Wasm.F64.of_bytes@tok () Term)
(declare-fun Wasm.F64.to_bytes (Term) Term)
(declare-fun Tm_arrow_478973c7cc5da14961b62286e4a6933c () Term)
(declare-fun Wasm.F64.to_bytes@tok () Term)
(declare-fun Wasm.F32.t () Term)
(declare-fun Wasm.F32.bytes () Term)
(declare-fun Wasm.F32.float () Term)
(declare-fun Wasm.F32.pos_nan (Dummy_sort) Term)
(declare-fun Wasm.F32.neg_nan (Dummy_sort) Term)
(declare-fun Wasm.F32.of_float (Term) Term)
(declare-fun Tm_arrow_a673a167a7d4d5fa0a4709fa100d337b () Term)
(declare-fun Wasm.F32.of_float@tok () Term)
(declare-fun Wasm.F32.to_float (Term) Term)
(declare-fun Tm_arrow_5f6d2b41e04d12f01354386fdca43658 () Term)
(declare-fun Wasm.F32.to_float@tok () Term)
(declare-fun Wasm.F32.of_string (Term) Term)
(declare-fun Tm_arrow_e0570d587e49c7d3ffe16095f3005513 () Term)
(declare-fun Wasm.F32.of_string@tok () Term)
(declare-fun Wasm.F32.to_string (Term) Term)
(declare-fun Tm_arrow_fb2ad2fda3ec46a6e82fdd98720f336a () Term)
(declare-fun Wasm.F32.to_string@tok () Term)
(declare-fun Wasm.F32.add (Term Term) Term)
(declare-fun Tm_arrow_82d77f5254fc405281c87f2c453fd3c3 () Term)
(declare-fun Wasm.F32.add@tok () Term)
(declare-fun Wasm.F32.sub (Term Term) Term)
(declare-fun Wasm.F32.sub@tok () Term)
(declare-fun Wasm.F32.mul (Term Term) Term)
(declare-fun Wasm.F32.mul@tok () Term)
(declare-fun Wasm.F32.div (Term Term) Term)
(declare-fun Wasm.F32.div@tok () Term)
(declare-fun Wasm.F32.sqrt (Term) Term)
(declare-fun Tm_arrow_a53acfc6726712e2cb3bd1772d5383cc () Term)
(declare-fun Wasm.F32.sqrt@tok () Term)
(declare-fun Wasm.F32.min (Term Term) Term)
(declare-fun Wasm.F32.min@tok () Term)
(declare-fun Wasm.F32.max (Term Term) Term)
(declare-fun Wasm.F32.max@tok () Term)
(declare-fun Wasm.F32.ceil (Term) Term)
(declare-fun Wasm.F32.ceil@tok () Term)
(declare-fun Wasm.F32.floor (Term) Term)
(declare-fun Wasm.F32.floor@tok () Term)
(declare-fun Wasm.F32.trunc (Term) Term)
(declare-fun Wasm.F32.trunc@tok () Term)
(declare-fun Wasm.F32.nearest (Term) Term)
(declare-fun Wasm.F32.nearest@tok () Term)
(declare-fun Wasm.F32.abs (Term) Term)
(declare-fun Wasm.F32.abs@tok () Term)
(declare-fun Wasm.F32.neg (Term) Term)
(declare-fun Wasm.F32.neg@tok () Term)
(declare-fun Wasm.F32.copysign (Term Term) Term)
(declare-fun Wasm.F32.copysign@tok () Term)
(declare-fun Wasm.F32.eq (Term Term) Term)
(declare-fun Tm_arrow_cfbfb92c6f65d0089ad731d789664af8 () Term)
(declare-fun Wasm.F32.eq@tok () Term)
(declare-fun Wasm.F32.ne (Term Term) Term)
(declare-fun Wasm.F32.ne@tok () Term)
(declare-fun Wasm.F32.lt (Term Term) Term)
(declare-fun Wasm.F32.lt@tok () Term)
(declare-fun Wasm.F32.le (Term Term) Term)
(declare-fun Wasm.F32.le@tok () Term)
(declare-fun Wasm.F32.gt (Term Term) Term)
(declare-fun Wasm.F32.gt@tok () Term)
(declare-fun Wasm.F32.ge (Term Term) Term)
(declare-fun Wasm.F32.ge@tok () Term)
(declare-fun Wasm.F32.zero (Dummy_sort) Term)
(declare-fun Wasm.F32.of_bytes (Term) Term)
(declare-fun Tm_arrow_65a95e680618c505daf00011cb6e8294 () Term)
(declare-fun Wasm.F32.of_bytes@tok () Term)
(declare-fun Wasm.F32.to_bytes (Term) Term)
(declare-fun Tm_arrow_43336e538539760d0022c33f3d676883 () Term)
(declare-fun Wasm.F32.to_bytes@tok () Term)
(declare-fun FStar.Mul.op_Star (Term Term) Term)
(declare-fun FStar.Mul.op_Star@tok () Term)
(declare-fun FStar.Seq.Base.seq (Term) Term)
(declare-fun FStar.Seq.Base.seq@tok () Term)
(declare-fun FStar.Seq.Base.length (Term Term) Term)
(declare-fun Tm_arrow_d2c01593e1ccf972aadc4bced72f8166 () Term)
(declare-fun FStar.Seq.Base.length@tok () Term)
(declare-fun Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55 (Term Term) Term)
(declare-fun FStar.Seq.Base.index (Term Term Term) Term)
(declare-fun Tm_arrow_1910ef5262f2ee8e712b6609a232b1ea () Term)
(declare-fun FStar.Seq.Base.index@tok () Term)
(declare-fun FStar.Seq.Base.create (Term Term Term) Term)
(declare-fun Tm_arrow_b5b3d4fcc48eb666a8878550e50df9fb () Term)
(declare-fun FStar.Seq.Base.create@tok () Term)
(declare-fun Tm_arrow_44bb45ed5c2534b346e0f58ea5033251 (Term Term) Term)
(declare-fun FStar.Seq.Base.init_aux (Term Term Term Term) Term)
(declare-fun Tm_arrow_da6bbab10714c064205223f9990745bd () Term)
(declare-fun FStar.Seq.Base.init_aux@tok () Term)
(declare-fun FStar.Seq.Base.init (Term Term Term) Term)
(declare-fun Tm_arrow_d638d84259a58eff38c91944355ac313 () Term)
(declare-fun FStar.Seq.Base.init@tok () Term)
(declare-fun Tm_ghost_arrow_b7c239afcc620812134a759b53cafcc7 (Term Term) Term)
(declare-fun FStar.Seq.Base.init_aux_ghost (Term Term Term Term) Term)
(declare-fun Tm_ghost_arrow_90c084cce85ad5fa9b6789a83ba7b9d5 () Term)
(declare-fun FStar.Seq.Base.init_aux_ghost@tok () Term)
(declare-fun FStar.Seq.Base.init_ghost (Term Term Term) Term)
(declare-fun Tm_ghost_arrow_dc3e2497ae3914facc1bb3cecddbafe4 () Term)
(declare-fun FStar.Seq.Base.init_ghost@tok () Term)
(declare-fun FStar.Seq.Base.empty (Term) Term)
(declare-fun Tm_refine_b913a3f691ca99086652e0a655e72f17 (Term) Term)
(declare-fun Tm_arrow_c39fb4e3e203a822394c714f70ec2d2c () Term)
(declare-fun FStar.Seq.Base.empty@tok () Term)
(declare-fun FStar.Seq.Base.createEmpty (Term) Term)
(declare-fun FStar.Seq.Base.createEmpty@tok () Term)
(declare-fun FStar.Seq.Base.lemma_empty (Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_empty@tok () Term)
(declare-fun FStar.Seq.Base.upd (Term Term Term Term) Term)
(declare-fun Tm_arrow_12766e98f50c8b91e296bbc369061265 () Term)
(declare-fun FStar.Seq.Base.upd@tok () Term)
(declare-fun FStar.Seq.Base.append (Term Term Term) Term)
(declare-fun Tm_arrow_22c1b165cc91e8aafbceb8b36244be8e () Term)
(declare-fun FStar.Seq.Base.append@tok () Term)
(declare-fun FStar.Seq.Base.op_At_Bar (Term Term Term) Term)
(declare-fun FStar.Seq.Base.op_At_Bar@tok () Term)
(declare-fun Tm_refine_81407705a0828c2c1b1976675443f647 (Term Term Term) Term)
(declare-fun FStar.Seq.Base.slice (Term Term Term Term) Term)
(declare-fun Tm_arrow_f59809c98fadf275c00ce819f5868628 () Term)
(declare-fun FStar.Seq.Base.slice@tok () Term)
(declare-fun FStar.Seq.Base.lemma_create_len (Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_create_len@tok () Term)
(declare-fun FStar.Seq.Base.lemma_init_len (Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_init_len@tok () Term)
(declare-fun FStar.Seq.Base.lemma_init_aux_len (Term Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_init_aux_len@tok () Term)
(declare-fun FStar.Seq.Base.lemma_init_ghost_len (Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_init_ghost_len@tok () Term)
(declare-fun FStar.Seq.Base.lemma_init_ghost_aux_len (Term Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_init_ghost_aux_len@tok () Term)
(declare-fun FStar.Seq.Base.lemma_len_upd (Term Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_len_upd@tok () Term)
(declare-fun Tm_refine_2ca062977a42c36634b89c1c4f193f79 (Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_len_append (Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_len_append@tok () Term)
(declare-fun FStar.Seq.Base.lemma_len_slice (Term Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_len_slice@tok () Term)
(declare-fun FStar.Seq.Base.lemma_index_create (Term Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_index_create@tok () Term)
(declare-fun FStar.Seq.Base.lemma_index_upd1 (Term Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_index_upd1@tok () Term)
(declare-fun FStar.Seq.Base.lemma_index_upd2 (Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_index_upd2@tok () Term)
(declare-fun Tm_refine_df81b3f17797c6f405c1dbb191651292 (Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_index_app1 (Term Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_index_app1@tok () Term)
(declare-fun FStar.Seq.Base.lemma_index_app2 (Term Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_index_app2@tok () Term)
(declare-fun Tm_refine_ac201cf927190d39c033967b63cb957b (Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_index_slice (Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_index_slice@tok () Term)
(declare-fun Tm_refine_d3d07693cd71377864ef84dc97d10ec1 (Term Term Term) Term)
(declare-fun Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8 (Term Term) Term)
(declare-fun FStar.Seq.Base.hasEq_lemma (Term) Term)
(declare-fun FStar.Seq.Base.hasEq_lemma@tok () Term)
(declare-fun FStar.Seq.Base.equal (Term Term Term) Term)
(declare-fun Tm_arrow_c2c0a5f39eee7a5a92db8bac6fe4fb3b () Term)
(declare-fun FStar.Seq.Base.equal@tok () Term)
(declare-fun Tm_refine_4639d389381bee5cf8cf77b7a6585074 (Term Term) Term)
(declare-fun Tm_refine_b361ba8089a6e963921008d537e799a1 (Term Term) Term)
(declare-fun FStar.Seq.Base.eq_i (Term Term Term Term) Term)
(declare-fun Tm_refine_331c14d442c5ee89a4fce6ea305c920f (Term Term Term) Term)
(declare-fun Tm_refine_51f956555266662f5f0ed4aac81d10bc (Term Term Term Term) Term)
(declare-fun Tm_arrow_e5286e13b5c071949ebc5146fbef7d7f () Term)
(declare-fun FStar.Seq.Base.eq_i@tok () Term)
(declare-fun FStar.Seq.Base.eq (Term Term Term) Term)
(declare-fun Tm_refine_1c0effbdef48f9b00a1efb7b571fbb69 (Term Term Term) Term)
(declare-fun Tm_arrow_70ef1e4b9388d8aa6e0d17c5aeed02a7 () Term)
(declare-fun FStar.Seq.Base.eq@tok () Term)
(declare-fun FStar.Seq.Base.lemma_eq_intro (Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_eq_intro@tok () Term)
(declare-fun FStar.Seq.Base.lemma_eq_refl (Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_eq_refl@tok () Term)
(declare-fun FStar.Seq.Base.lemma_eq_elim (Term Term Term) Term)
(declare-fun FStar.Seq.Base.lemma_eq_elim@tok () Term)
(declare-fun FStar.Seq.Base.append_assoc (Term Term Term Term) Term)
(declare-fun FStar.Seq.Base.append_assoc@tok () Term)
(declare-fun FStar.Seq.Base.append_empty_l (Term Term) Term)
(declare-fun FStar.Seq.Base.append_empty_l@tok () Term)
(declare-fun FStar.Seq.Base.append_empty_r (Term Term) Term)
(declare-fun FStar.Seq.Base.append_empty_r@tok () Term)
(declare-fun FStar.Seq.Base.init_index (Term Term Term) Term)
(declare-fun FStar.Seq.Base.init_index@tok () Term)
(declare-fun FStar.Seq.Base.init_index_ (Term Term Term Term) Term)
(declare-fun FStar.Seq.Base.init_index_@tok () Term)
(declare-fun FStar.Seq.Base.init_ghost_index (Term Term Term) Term)
(declare-fun FStar.Seq.Base.init_ghost_index@tok () Term)
(declare-fun FStar.Seq.Base.init_ghost_index_ (Term Term Term Term) Term)
(declare-fun FStar.Seq.Base.init_ghost_index_@tok () Term)
(declare-fun FStar.Seq.Base.lemma_equal_instances_implies_equal_types (Term) Term)
(declare-fun FStar.Seq.Base.lemma_equal_instances_implies_equal_types@tok () Term)
(declare-fun FStar.Seq.Properties.lseq (Term Term) Term)
(declare-fun FStar.Seq.Properties.lseq@tok () Term)
(declare-fun Tm_refine_a0cd7d06c5da6444b6b51b319febde8e (Term Term) Term)
(declare-fun FStar.Seq.Properties.indexable (Term Term Term) Term)
(declare-fun Tm_arrow_2c0367dd991d12c77178c7fe63f076c5 () Term)
(declare-fun FStar.Seq.Properties.indexable@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_append_inj_l (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_append_inj_l@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_append_inj_r (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_append_inj_r@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_append_len_disj (Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_append_len_disj@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_append_inj (Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_append_inj@tok () Term)
(declare-fun Tm_refine_167ef714932ec832fb671890fc3eee6c (Term) Term)
(declare-fun FStar.Seq.Properties.head (Term Term) Term)
(declare-fun Tm_arrow_fde6b9111cb8aaf87a1b6689af62ed69 () Term)
(declare-fun FStar.Seq.Properties.head@tok () Term)
(declare-fun FStar.Seq.Properties.tail (Term Term) Term)
(declare-fun Tm_arrow_3db93b3d63ab329f9ab58ee76fda4c87 () Term)
(declare-fun FStar.Seq.Properties.tail@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_head_append (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_head_append@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_tail_append (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_tail_append@tok () Term)
(declare-fun FStar.Seq.Properties.last (Term Term) Term)
(declare-fun FStar.Seq.Properties.last@tok () Term)
(declare-fun FStar.Seq.Properties.cons (Term Term Term) Term)
(declare-fun Tm_arrow_62ad6018b578ef7ed3c0e74bdebff729 () Term)
(declare-fun FStar.Seq.Properties.cons@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_cons_inj (Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_cons_inj@tok () Term)
(declare-fun Tm_refine_17631fa6304dcc08d028bd475a6dd078 (Term Term) Term)
(declare-fun FStar.Seq.Properties.split (Term Term Term) Term)
(declare-fun Tm_arrow_e8094a245058e1a3364fcb54e52c4b61 () Term)
(declare-fun FStar.Seq.Properties.split@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_split (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_split@tok () Term)
(declare-fun FStar.Seq.Properties.split_eq (Term Term Term) Term)
(declare-fun Tm_refine_78d42c5dbba01ee594272daa6bb0579c (Term Term) Term)
(declare-fun Tm_arrow_b88932abf1506cfe956c7a113bc65f4b () Term)
(declare-fun FStar.Seq.Properties.split_eq@tok () Term)
(declare-fun FStar.Seq.Properties.count.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.Seq.Properties.count.fuel_instrumented_token () Term)
(declare-fun FStar.Seq.Properties.count (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.count@tok () Term)
(declare-fun Tm_arrow_b68daf91c98458f9ea85290d85674a2e () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.Seq.Properties.count.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.Seq.Properties.count.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.Seq.Properties.count.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.Seq.Properties.count.fuel_instrumented)) :named fuel_irrelevance_FStar.Seq.Properties.count.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.Seq.Properties.count @x0 @x1 @x2) (FStar.Seq.Properties.count.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.Seq.Properties.count @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.Seq.Properties.count.fuel_instrumented)) :named fuel_correspondence_FStar.Seq.Properties.count.fuel_instrumented))
(declare-fun FStar.Seq.Properties.mem (Term Term Term) Term)
(declare-fun Tm_arrow_8b9021eb78c56c0f1820182c3a3e44b5 () Term)
(declare-fun FStar.Seq.Properties.mem@tok () Term)
(declare-fun FStar.Seq.Properties.mem_index (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.mem_index@tok () Term)
(declare-fun FStar.Seq.Properties.index_mem.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.Seq.Properties.index_mem.fuel_instrumented_token () Term)
(declare-fun FStar.Seq.Properties.index_mem (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.index_mem@tok () Term)
(declare-fun Tm_refine_7c92df3cf71635bc41483532e738d828 (Term Term Term) Term)
(declare-fun Tm_arrow_12def5646e9a05cc547dd67c2eeaec45 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.Seq.Properties.index_mem.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.Seq.Properties.index_mem.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.Seq.Properties.index_mem.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.Seq.Properties.index_mem.fuel_instrumented)) :named fuel_irrelevance_FStar.Seq.Properties.index_mem.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.Seq.Properties.index_mem @x0 @x1 @x2) (FStar.Seq.Properties.index_mem.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.Seq.Properties.index_mem @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.Seq.Properties.index_mem.fuel_instrumented)) :named fuel_correspondence_FStar.Seq.Properties.index_mem.fuel_instrumented))
(declare-fun FStar.Seq.Properties.swap (Term Term Term Term) Term)
(declare-fun Tm_arrow_ed5530d89236443143d2d084ddc97069 () Term)
(declare-fun FStar.Seq.Properties.swap@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_slice_append (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_slice_append@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_slice_first_in_append (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_slice_first_in_append@tok () Term)
(declare-fun FStar.Seq.Properties.slice_upd (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.slice_upd@tok () Term)
(declare-fun FStar.Seq.Properties.upd_slice (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.upd_slice@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_append_cons (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_append_cons@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_tl (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_tl@tok () Term)
(declare-fun FStar.Seq.Properties.sorted.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.Seq.Properties.sorted.fuel_instrumented_token () Term)
(declare-fun FStar.Seq.Properties.sorted (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.sorted@tok () Term)
(declare-fun Tm_arrow_28685b742721099a6ab3847e4434a96d () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.Seq.Properties.sorted.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.Seq.Properties.sorted.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.Seq.Properties.sorted.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.Seq.Properties.sorted.fuel_instrumented)) :named fuel_irrelevance_FStar.Seq.Properties.sorted.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.Seq.Properties.sorted @x0 @x1 @x2) (FStar.Seq.Properties.sorted.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.Seq.Properties.sorted @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.Seq.Properties.sorted.fuel_instrumented)) :named fuel_correspondence_FStar.Seq.Properties.sorted.fuel_instrumented))
(declare-fun FStar.Seq.Properties.sorted_feq (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.sorted_feq@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_append_count (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_append_count@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_append_count_aux (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_append_count_aux@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_mem_inversion (Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_mem_inversion@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_mem_count (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_mem_count@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_count_slice (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_count_slice@tok () Term)
(declare-fun FStar.Seq.Properties.total_order (Term Term) Term)
(declare-fun Tm_arrow_1118b25cace7451b1e5dfdfe482dbb64 () Term)
(declare-fun FStar.Seq.Properties.total_order@tok () Term)
(declare-fun FStar.Seq.Properties.tot_ord (Term) Term)
(declare-fun FStar.Seq.Properties.tot_ord@tok () Term)
(declare-fun Tm_refine_a01e88865b4bbd2f0a4bcb261b6760a8 (Term) Term)
(declare-fun FStar.Seq.Properties.sorted_concat_lemma (Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.sorted_concat_lemma@tok () Term)
(declare-fun Tm_refine_55108d29d63192475ca95f591039cc18 (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.split_5 (Term Term Term Term) Term)
(declare-fun Tm_refine_03fdfb031367b218884098aa9d386676 (Term Term Term Term) Term)
(declare-fun Tm_arrow_1ab34f107de5525c681399e3c671c330 () Term)
(declare-fun FStar.Seq.Properties.split_5@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_swap_permutes_aux_frag_eq (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_swap_permutes_aux_frag_eq@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_swap_permutes_aux (Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_swap_permutes_aux@tok () Term)
(declare-fun FStar.Seq.Properties.permutation (Term Term Term) Term)
(declare-fun Tm_arrow_05517904f5779069bb79d90a352f1386 () Term)
(declare-fun FStar.Seq.Properties.permutation@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_swap_permutes (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_swap_permutes@tok () Term)
(declare-fun FStar.Seq.Properties.perm_len (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.perm_len@tok () Term)
(declare-fun FStar.Seq.Properties.cons_perm (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.cons_perm@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_mem_append (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_mem_append@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_slice_cons (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_slice_cons@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_slice_snoc (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_slice_snoc@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_ordering_lo_snoc (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_ordering_lo_snoc@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_ordering_hi_cons (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_ordering_hi_cons@tok () Term)
(declare-fun FStar.Seq.Properties.swap_frame_lo (Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.swap_frame_lo@tok () Term)
(declare-fun FStar.Seq.Properties.swap_frame_lo_ (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.swap_frame_lo_@tok () Term)
(declare-fun FStar.Seq.Properties.swap_frame_hi (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.swap_frame_hi@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_swap_slice_commute (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_swap_slice_commute@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_swap_permutes_slice (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_swap_permutes_slice@tok () Term)
(declare-fun FStar.Seq.Properties.splice (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_c43a25ef505b9db21532cdb95f3c9f68 () Term)
(declare-fun FStar.Seq.Properties.splice@tok () Term)
(declare-fun Tm_refine_5542011d20872a6178aad9a072f1b686 (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.replace_subseq (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9fa775abc8f8f9c4e6df626212cddc6a () Term)
(declare-fun FStar.Seq.Properties.replace_subseq@tok () Term)
(declare-fun FStar.Seq.Properties.splice_refl (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.splice_refl@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_swap_splice (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_swap_splice@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_seq_frame_hi (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_seq_frame_hi@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_seq_frame_lo (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_seq_frame_lo@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_tail_slice (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_tail_slice@tok () Term)
(declare-fun Tm_refine_b138bd5848d4184f7632587e6e4bcf9f (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_weaken_frame_right (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_weaken_frame_right@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_weaken_frame_left (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_weaken_frame_left@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_trans_frame (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_trans_frame@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_weaken_perm_left (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_weaken_perm_left@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_weaken_perm_right (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_weaken_perm_right@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_trans_perm (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_trans_perm@tok () Term)
(declare-fun FStar.Seq.Properties.snoc (Term Term Term) Term)
(declare-fun Tm_arrow_f9b27de7c4505538c6110afe14403cc8 () Term)
(declare-fun FStar.Seq.Properties.snoc@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_cons_snoc (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_cons_snoc@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_tail_snoc (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_tail_snoc@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_snoc_inj (Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_snoc_inj@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_mem_snoc (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_mem_snoc@tok () Term)
(declare-fun FStar.Seq.Properties.find_l.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.Seq.Properties.find_l.fuel_instrumented_token () Term)
(declare-fun FStar.Seq.Properties.find_l (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.find_l@tok () Term)
(declare-fun Tm_refine_aba7638072c8f1ba6a01b95ec6f9a485 (Term Term) Term)
(declare-fun Tm_arrow_fd183dc9552028fd54abfbe4a84f515a () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.Seq.Properties.find_l.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.Seq.Properties.find_l.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.Seq.Properties.find_l.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.Seq.Properties.find_l.fuel_instrumented)) :named fuel_irrelevance_FStar.Seq.Properties.find_l.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.Seq.Properties.find_l @x0 @x1 @x2) (FStar.Seq.Properties.find_l.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.Seq.Properties.find_l @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.Seq.Properties.find_l.fuel_instrumented)) :named fuel_correspondence_FStar.Seq.Properties.find_l.fuel_instrumented))
(declare-fun FStar.Seq.Properties.ghost_find_l.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.Seq.Properties.ghost_find_l.fuel_instrumented_token () Term)
(declare-fun FStar.Seq.Properties.ghost_find_l (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.ghost_find_l@tok () Term)
(declare-fun Tm_ghost_arrow_9a34a9deaac3ca72ad48c3ec79b6656c (Term) Term)
(declare-fun Tm_ghost_arrow_3f8a537d0d54200d690f80a370cf9031 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.Seq.Properties.ghost_find_l.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.Seq.Properties.ghost_find_l.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.Seq.Properties.ghost_find_l.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.Seq.Properties.ghost_find_l.fuel_instrumented)) :named fuel_irrelevance_FStar.Seq.Properties.ghost_find_l.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.Seq.Properties.ghost_find_l @x0 @x1 @x2) (FStar.Seq.Properties.ghost_find_l.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.Seq.Properties.ghost_find_l @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.Seq.Properties.ghost_find_l.fuel_instrumented)) :named fuel_correspondence_FStar.Seq.Properties.ghost_find_l.fuel_instrumented))
(declare-fun FStar.Seq.Properties.find_append_some (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.find_append_some@tok () Term)
(declare-fun FStar.Seq.Properties.find_append_none (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.find_append_none@tok () Term)
(declare-fun FStar.Seq.Properties.find_append_none_s2 (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.find_append_none_s2@tok () Term)
(declare-fun FStar.Seq.Properties.find_snoc (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.find_snoc@tok () Term)
(declare-fun Tm_refine_5739deb21d8cba89243fec27b35b7ef0 (Term) Term)
(declare-fun FStar.Seq.Properties.un_snoc (Term Term) Term)
(declare-fun Tm_refine_16326afaeb5f4d93ab294cc4a965de3e (Term Term) Term)
(declare-fun Tm_arrow_30c2910b2510bbce2598a79ba00a0209 () Term)
(declare-fun FStar.Seq.Properties.un_snoc@tok () Term)
(declare-fun FStar.Seq.Properties.un_snoc_snoc (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.un_snoc_snoc@tok () Term)
(declare-fun FStar.Seq.Properties.find_r.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.Seq.Properties.find_r.fuel_instrumented_token () Term)
(declare-fun FStar.Seq.Properties.find_r (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.find_r@tok () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.Seq.Properties.find_r.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.Seq.Properties.find_r.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.Seq.Properties.find_r.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.Seq.Properties.find_r.fuel_instrumented)) :named fuel_irrelevance_FStar.Seq.Properties.find_r.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.Seq.Properties.find_r @x0 @x1 @x2) (FStar.Seq.Properties.find_r.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.Seq.Properties.find_r @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.Seq.Properties.find_r.fuel_instrumented)) :named fuel_correspondence_FStar.Seq.Properties.find_r.fuel_instrumented))
(declare-fun FStar.Seq.Properties.found (Term) Term)
(declare-fun Tm_arrow_591bcdc53dc583ecc77b1bc5436f9a59 () Term)
(declare-fun FStar.Seq.Properties.found@tok () Term)
(declare-fun FStar.Seq.Properties.seq_find_aux.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.seq_find_aux.fuel_instrumented_token () Term)
(declare-fun FStar.Seq.Properties.seq_find_aux (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.seq_find_aux@tok () Term)
(declare-fun Tm_refine_564e05c43cb7c1f4e1de1a4fb2fd28c8 (Term Term Term) Term)
(declare-fun Tm_refine_eceee487dc5f997fef8ec356a5ed69a1 (Term Term Term) Term)
(declare-fun Tm_arrow_80e1fce2fc22bd81078942999677feae () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.Seq.Properties.seq_find_aux.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (FStar.Seq.Properties.seq_find_aux.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((FStar.Seq.Properties.seq_find_aux.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_FStar.Seq.Properties.seq_find_aux.fuel_instrumented)) :named fuel_irrelevance_FStar.Seq.Properties.seq_find_aux.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.Seq.Properties.seq_find_aux @x0 @x1 @x2 @x3) (FStar.Seq.Properties.seq_find_aux.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((FStar.Seq.Properties.seq_find_aux @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_FStar.Seq.Properties.seq_find_aux.fuel_instrumented)) :named fuel_correspondence_FStar.Seq.Properties.seq_find_aux.fuel_instrumented))
(declare-fun FStar.Seq.Properties.seq_find (Term Term Term) Term)
(declare-fun Tm_arrow_fa0cd0aaf804af216be20b328cb3ec09 () Term)
(declare-fun FStar.Seq.Properties.seq_find@tok () Term)
(declare-fun FStar.Seq.Properties.find_mem (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.find_mem@tok () Term)
(declare-fun FStar.Seq.Properties.for_all (Term Term Term) Term)
(declare-fun Tm_refine_307fd373d8b3749096cf164b41cf1984 (Term Term Term) Term)
(declare-fun Tm_arrow_098d0ddce18f722cb743337c9d7dd0b9 () Term)
(declare-fun FStar.Seq.Properties.for_all@tok () Term)
(declare-fun Tm_abs_e818836335067047224d0c19c4cabb2d (Term Term) Term)
(declare-fun FStar.Seq.Properties.seq_mem_k (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.seq_mem_k@tok () Term)
(declare-fun FStar.Seq.Properties.seq_to_list.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.Seq.Properties.seq_to_list.fuel_instrumented_token () Term)
(declare-fun FStar.Seq.Properties.seq_to_list (Term Term) Term)
(declare-fun FStar.Seq.Properties.seq_to_list@tok () Term)
(declare-fun Tm_refine_c4e3a92f9bd1d01a07e4fb66c5de2e7e (Term Term) Term)
(declare-fun Tm_arrow_7d1aeb9cf9244f8c50e0ad901486a03b () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.Seq.Properties.seq_to_list.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.Seq.Properties.seq_to_list.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.Seq.Properties.seq_to_list.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.Seq.Properties.seq_to_list.fuel_instrumented)) :named fuel_irrelevance_FStar.Seq.Properties.seq_to_list.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.Seq.Properties.seq_to_list @x0 @x1) (FStar.Seq.Properties.seq_to_list.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.Seq.Properties.seq_to_list @x0 @x1)) :qid @fuel_correspondence_FStar.Seq.Properties.seq_to_list.fuel_instrumented)) :named fuel_correspondence_FStar.Seq.Properties.seq_to_list.fuel_instrumented))
(declare-fun FStar.Seq.Properties.seq_of_list (Term Term) Term)
(declare-fun Tm_refine_d2d1ea66f2b3a92c2deb42edcbb784ce (Term Term) Term)
(declare-fun Tm_arrow_4966fa2986a35d9c0803c863a2768cbd () Term)
(declare-fun FStar.Seq.Properties.seq_of_list@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_seq_of_list_induction (Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_seq_of_list_induction@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_seq_list_bij (Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_seq_list_bij@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_list_seq_bij (Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_list_seq_bij@tok () Term)
(declare-fun FStar.Seq.Properties.createL_post (Term Term Term) Term)
(declare-fun Tm_arrow_befeea9093c61a572da65bfe7ce35cff () Term)
(declare-fun FStar.Seq.Properties.createL_post@tok () Term)
(declare-fun Tm_refine_1780a0fddfda88c43d203b562c6d3f5b () Term)
(declare-fun FStar.Seq.Properties.createL (Term Term) Term)
(declare-fun Tm_refine_29f54a8a92d732b7f4111928d707db68 (Term Term) Term)
(declare-fun Tm_arrow_6a7bb2ee242e4d89b8744d9965334de3 () Term)
(declare-fun FStar.Seq.Properties.createL@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_index_is_nth (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_index_is_nth@tok () Term)
(declare-fun FStar.Seq.Properties.contains (Term Term Term) Term)
(declare-fun Tm_arrow_65d0102b1211a5d233193433129106a1 () Term)
(declare-fun FStar.Seq.Properties.contains@tok () Term)
(declare-fun FStar.Seq.Properties.contains_intro (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.contains_intro@tok () Term)
(declare-fun FStar.Seq.Properties.contains_elim (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.contains_elim@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_contains_empty (Term) Term)
(declare-fun FStar.Seq.Properties.lemma_contains_empty@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_contains_singleton (Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_contains_singleton@tok () Term)
(declare-fun FStar.Seq.Properties.append_contains_equiv (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.append_contains_equiv@tok () Term)
(declare-fun FStar.Seq.Properties.contains_snoc (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.contains_snoc@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_find_l_contains (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_find_l_contains@tok () Term)
(declare-fun FStar.Seq.Properties.contains_cons (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.contains_cons@tok () Term)
(declare-fun FStar.Seq.Properties.append_cons_snoc (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.append_cons_snoc@tok () Term)
(declare-fun FStar.Seq.Properties.append_slices (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.append_slices@tok () Term)
(declare-fun FStar.Seq.Properties.find_l_none_no_index (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.find_l_none_no_index@tok () Term)
(declare-fun FStar.Seq.Properties.suffix_of (Term Term Term) Term)
(declare-fun Tm_arrow_2ed6082b86d605508c94c4b8a46966f5 () Term)
(declare-fun FStar.Seq.Properties.suffix_of@tok () Term)
(declare-fun FStar.Seq.Properties.cons_head_tail (Term Term) Term)
(declare-fun FStar.Seq.Properties.cons_head_tail@tok () Term)
(declare-fun FStar.Seq.Properties.head_cons (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.head_cons@tok () Term)
(declare-fun FStar.Seq.Properties.suffix_of_tail (Term Term) Term)
(declare-fun FStar.Seq.Properties.suffix_of_tail@tok () Term)
(declare-fun FStar.Seq.Properties.index_cons_l (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.index_cons_l@tok () Term)
(declare-fun FStar.Seq.Properties.index_cons_r (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.index_cons_r@tok () Term)
(declare-fun FStar.Seq.Properties.append_cons (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.append_cons@tok () Term)
(declare-fun FStar.Seq.Properties.index_tail (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.index_tail@tok () Term)
(declare-fun FStar.Seq.Properties.mem_cons (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.mem_cons@tok () Term)
(declare-fun FStar.Seq.Properties.snoc_slice_index (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.snoc_slice_index@tok () Term)
(declare-fun Tm_refine_095c5722edf0f79bcd7dce7bd084c7b5 (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.cons_index_slice (Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.cons_index_slice@tok () Term)
(declare-fun Tm_refine_09d2e9ab3b9c121b24316d151747e281 (Term Term Term) Term)
(declare-fun Tm_refine_ddd44b85040d1947cca83550b7e21966 (Term) Term)
(declare-fun FStar.Seq.Properties.slice_is_empty (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.slice_is_empty@tok () Term)
(declare-fun FStar.Seq.Properties.slice_length (Term Term) Term)
(declare-fun FStar.Seq.Properties.slice_length@tok () Term)
(declare-fun FStar.Seq.Properties.slice_slice (Term Term Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.slice_slice@tok () Term)
(declare-fun Tm_refine_1ba8fd8bb363097813064c67740b2de5 (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_seq_of_list_index (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_seq_of_list_index@tok () Term)
(declare-fun FStar.Seq.Properties.of_list (Term Term) Term)
(declare-fun Tm_arrow_474463878fff5c7c9c02e4f0b8b84aa8 () Term)
(declare-fun FStar.Seq.Properties.of_list@tok () Term)
(declare-fun FStar.Seq.Properties.seq_of_list_tl (Term Term) Term)
(declare-fun FStar.Seq.Properties.seq_of_list_tl@tok () Term)
(declare-fun FStar.Seq.Properties.mem_seq_of_list (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.mem_seq_of_list@tok () Term)
(declare-fun FStar.Seq.Properties.explode_and.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.explode_and.fuel_instrumented_token () Term)
(declare-fun FStar.Seq.Properties.explode_and (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.explode_and@tok () Term)
(declare-fun Tm_refine_5885c715bf599d471c43c6b7dcb2413b (Term Term) Term)
(declare-fun Tm_refine_c731267dd71b747abfd9fc75f6f2da81 (Term Term Term) Term)
(declare-fun Tm_arrow_62bce6f622c5bc90fd46048dee6dae55 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.Seq.Properties.explode_and.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (FStar.Seq.Properties.explode_and.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((FStar.Seq.Properties.explode_and.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_FStar.Seq.Properties.explode_and.fuel_instrumented)) :named fuel_irrelevance_FStar.Seq.Properties.explode_and.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.Seq.Properties.explode_and @x0 @x1 @x2 @x3) (FStar.Seq.Properties.explode_and.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((FStar.Seq.Properties.explode_and @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_FStar.Seq.Properties.explode_and.fuel_instrumented)) :named fuel_correspondence_FStar.Seq.Properties.explode_and.fuel_instrumented))
(declare-fun Tm_refine_9f068c7f6ce275579028a195ac18485b (Term) Term)
(declare-fun Tm_refine_1ad818e6438a897337e89a3053cb2002 (Term Term) Term)
(declare-fun FStar.Seq.Properties.pointwise_and (Term Term Term) Term)
(declare-fun Tm_arrow_1d69c34f503e87805d9fa1b40bc9b696 () Term)
(declare-fun FStar.Seq.Properties.pointwise_and@tok () Term)
(declare-fun FStar.Seq.Properties.intro_of_list_ (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.intro_of_list_@tok () Term)
(declare-fun FStar.Seq.Properties.intro_of_list (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.intro_of_list@tok () Term)
(declare-fun FStar.Seq.Properties.elim_of_list_ (Term Term Term Term) Term)
(declare-fun FStar.Seq.Properties.elim_of_list_@tok () Term)
(declare-fun FStar.Seq.Properties.elim_of_list (Term Term) Term)
(declare-fun FStar.Seq.Properties.elim_of_list@tok () Term)
(declare-fun FStar.Seq.Properties.sortWith (Term Term Term) Term)
(declare-fun Tm_arrow_783d577ed6adadfd234f2ce68178463f () Term)
(declare-fun FStar.Seq.Properties.sortWith@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_seq_to_list_permutation (Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_seq_to_list_permutation@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_seq_of_list_permutation (Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_seq_of_list_permutation@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_seq_of_list_sorted (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_seq_of_list_sorted@tok () Term)
(declare-fun FStar.Seq.Properties.lemma_seq_sortwith_correctness (Term Term Term) Term)
(declare-fun FStar.Seq.Properties.lemma_seq_sortwith_correctness@tok () Term)
(declare-fun FStar.Seq.Properties.sort_lseq (Term Term Term Term) Term)
(declare-fun Tm_refine_896d0573468d5c87de125067e75d7d47 (Term Term Term Term) Term)
(declare-fun Tm_arrow_3fb7de3746e0ee65d4a1a51ab385c639 () Term)
(declare-fun FStar.Seq.Properties.sort_lseq@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.List.Tot.Base.compare_of_bool@tok)) :named kick_partial_app_168a5a7933bf2aec40b9569f3322d078))
(declare-fun FStar.Calc.calc_proof (Term Term Term Term) Term)
(declare-fun FStar.Calc.calc_proof@x0 (Term) Term)
(declare-fun FStar.Calc.calc_proof@x1 (Term) Term)
(declare-fun FStar.Calc.calc_proof@x2 (Term) Term)
(declare-fun FStar.Calc.calc_proof@x3 (Term) Term)
(declare-fun FStar.Calc.calc_proof@tok () Term)
(declare-fun FStar.Calc.CalcRefl (Term Term) Term)
(declare-fun FStar.Calc.CalcRefl_t (Term) Term)
(declare-fun FStar.Calc.CalcRefl_x (Term) Term)
(declare-fun FStar.Calc.CalcRefl@tok () Term)
(declare-fun FStar.Calc.CalcStep (Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Calc.CalcStep_t (Term) Term)
(declare-fun FStar.Calc.CalcStep_rs (Term) Term)
(declare-fun FStar.Calc.CalcStep_p (Term) Term)
(declare-fun FStar.Calc.CalcStep_x (Term) Term)
(declare-fun FStar.Calc.CalcStep_y (Term) Term)
(declare-fun FStar.Calc.CalcStep_z (Term) Term)
(declare-fun FStar.Calc.CalcStep__5 (Term) Term)
(declare-fun FStar.Calc.CalcStep__6 (Term) Term)
(declare-fun FStar.Calc.CalcStep@tok () Term)
(declare-fun Tm_arrow_e85dbe2d578edd2a2a61107bad64844c () Term)
(declare-fun Tm_arrow_b340ecb8383074bc46375a46145a7603 () Term)
(define-fun is-FStar.Calc.calc_proof ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 101) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= __@x0 (FStar.Calc.calc_proof @x0 @x1 @x2 @x3)) :qid is-FStar.Calc.calc_proof))))
(define-fun is-FStar.Calc.CalcRefl ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 108) (= __@x0 (FStar.Calc.CalcRefl (FStar.Calc.CalcRefl_t __@x0) (FStar.Calc.CalcRefl_x __@x0)))))
(define-fun is-FStar.Calc.CalcStep ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 113) (= __@x0 (FStar.Calc.CalcStep (FStar.Calc.CalcStep_t __@x0) (FStar.Calc.CalcStep_rs __@x0) (FStar.Calc.CalcStep_p __@x0) (FStar.Calc.CalcStep_x __@x0) (FStar.Calc.CalcStep_y __@x0) (FStar.Calc.CalcStep_z __@x0) (FStar.Calc.CalcStep__5 __@x0) (FStar.Calc.CalcStep__6 __@x0)))))
(declare-fun FStar.Calc.uu___is_CalcRefl (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_4137fd252e343de6e82922409404f02e () Term)
(declare-fun FStar.Calc.uu___is_CalcRefl@tok () Term)
(declare-fun Tm_refine_3b368c069648e8b27d83e18e9c122613 (Term Term Term Term) Term)
(declare-fun FStar.Calc.__proj__CalcRefl__item__x (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_2cd208e10700fce02c13ab45b8ec22d1 () Term)
(declare-fun FStar.Calc.__proj__CalcRefl__item__x@tok () Term)
(declare-fun FStar.Calc.uu___is_CalcStep (Term Term Term Term Term) Term)
(declare-fun FStar.Calc.uu___is_CalcStep@tok () Term)
(declare-fun Tm_refine_4d2c352ec2a69453fd30fa2907779c8a (Term Term Term Term) Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__rs (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_4cf1c767ce599aeb9039370e57e3788e () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__rs@tok () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__p (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_b1e217e71bf6b687ca1506b780d4a748 () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__p@tok () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__x (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_6422593e91fed2dd4662ca0ddd49333f () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__x@tok () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__y (Term Term Term Term Term) Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__y@tok () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__z (Term Term Term Term Term) Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__z@tok () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item___5 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_d7049dfa77ce1d01d6c309530bcb86bd () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item___5@tok () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item___6 (Term Term Term Term Term) Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.Calc.__proj__CalcStep__item__p@tok)) :named kick_partial_app_7e770844f3d19b99fd09de14d699dd47))
(declare-fun Tm_arrow_fc94a5c321c3df1500a9e8101a4f81de () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item___6@tok () Term)
(declare-fun FStar.Calc.calc_pack (Term Term Term) Term)
(declare-fun FStar.Calc.calc_pack@x0 (Term) Term)
(declare-fun FStar.Calc.calc_pack@x1 (Term) Term)
(declare-fun FStar.Calc.calc_pack@x2 (Term) Term)
(declare-fun FStar.Calc.calc_pack@tok () Term)
(declare-fun FStar.Calc.Mkcalc_pack (Term Term Term Term Term) Term)
(declare-fun FStar.Calc.Mkcalc_pack_t (Term) Term)
(declare-fun FStar.Calc.Mkcalc_pack_x (Term) Term)
(declare-fun FStar.Calc.Mkcalc_pack_y (Term) Term)
(declare-fun FStar.Calc.Mkcalc_pack_rels (Term) Term)
(declare-fun FStar.Calc.Mkcalc_pack_proof (Term) Term)
(declare-fun FStar.Calc.Mkcalc_pack@tok () Term)
(declare-fun Tm_arrow_08dbb649c69d20f068597726626c6790 () Term)
(define-fun is-FStar.Calc.calc_pack ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 153) (exists ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= __@x0 (FStar.Calc.calc_pack @x0 @x1 @x2)) :qid is-FStar.Calc.calc_pack))))
(define-fun is-FStar.Calc.Mkcalc_pack ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 160) (= __@x0 (FStar.Calc.Mkcalc_pack (FStar.Calc.Mkcalc_pack_t __@x0) (FStar.Calc.Mkcalc_pack_x __@x0) (FStar.Calc.Mkcalc_pack_y __@x0) (FStar.Calc.Mkcalc_pack_rels __@x0) (FStar.Calc.Mkcalc_pack_proof __@x0)))))
(declare-fun FStar.Calc.__proj__Mkcalc_pack__item__rels (Term Term Term Term) Term)
(declare-fun Tm_arrow_5b177b9d78b0cb599bb4b2c2ce18d878 () Term)
(declare-fun FStar.Calc.__proj__Mkcalc_pack__item__rels@tok () Term)
(declare-fun FStar.Calc.__proj__Mkcalc_pack__item__proof (Term Term Term Term) Term)
(declare-fun Tm_arrow_b6aae2dbdc7a690f7b3896c459e1cdc8 () Term)
(declare-fun FStar.Calc.__proj__Mkcalc_pack__item__proof@tok () Term)
(declare-fun FStar.Calc.pk_rels (Term Term Term Term) Term)
(declare-fun FStar.Calc.pk_rels@tok () Term)
(declare-fun FStar.Calc.calc_chain_related.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun FStar.Calc.calc_chain_related.fuel_instrumented_token () Term)
(declare-fun FStar.Calc.calc_chain_related (Term Term Term Term) Term)
(declare-fun FStar.Calc.calc_chain_related@tok () Term)
(declare-fun Tm_abs_7586508c09a323b289f361c85bf3dee3 (Fuel Term Term Term Term) Term)
(declare-fun Tm_arrow_10ae2c328e1918eb5ddde4274ac6d32a () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.Calc.calc_chain_related.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (FStar.Calc.calc_chain_related.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((FStar.Calc.calc_chain_related.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_FStar.Calc.calc_chain_related.fuel_instrumented)) :named fuel_irrelevance_FStar.Calc.calc_chain_related.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.Calc.calc_chain_related @x0 @x1 @x2 @x3) (FStar.Calc.calc_chain_related.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((FStar.Calc.calc_chain_related @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_FStar.Calc.calc_chain_related.fuel_instrumented)) :named fuel_correspondence_FStar.Calc.calc_chain_related.fuel_instrumented))
(declare-fun FStar.Calc.calc_chain_compatible (Term Term Term) Term)
(declare-fun Tm_arrow_5d25af94b872513cc464e94bbc6a8348 () Term)
(declare-fun FStar.Calc.calc_chain_compatible@tok () Term)
(declare-fun FStar.Calc.elim_calc_proof (Term Term Term Term Term) Term)
(declare-fun FStar.Calc.elim_calc_proof@tok () Term)
(declare-fun FStar.Calc._calc_init (Term Term) Term)
(declare-fun FStar.Calc._calc_init@tok () Term)
(declare-fun FStar.Calc.calc_init (Term Term) Term)
(declare-fun Tm_arrow_d5eb09a3cb5614e873db952aa4f080f8 () Term)
(declare-fun FStar.Calc.calc_init@tok () Term)
(declare-fun Tm_ghost_arrow_43913ea96b2971b9b206329e4c86f5cd (Term Term Term Term) Term)
(declare-fun Tm_arrow_924fe8a596e8d1052263cdb50ea0b3f9 (Term Term Term) Term)
(declare-fun FStar.Calc._calc_step (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_ghost_arrow_4628eb98823ce323ac10495fcebb4286 () Term)
(declare-fun FStar.Calc._calc_step@tok () Term)
(declare-fun Tm_ghost_arrow_7b3b97c1ad4e8c34eea5d3c0f4f9fe1a (Term Term Term) Term)
(declare-fun FStar.Calc.calc_step (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_ghost_arrow_9937c4de8dd72b95461da0c35d6c3aef () Term)
(declare-fun FStar.Calc.calc_step@tok () Term)
(declare-fun FStar.Calc.calc_finish (Term Term Term Term Term) Term)
(declare-fun FStar.Calc.calc_finish@tok () Term)
(declare-fun FStar.Calc.calc_push_impl (Term Term Term) Term)
(declare-fun Tm_arrow_b85ee08d976be930c8c2cdaec964efe2 () Term)
(declare-fun FStar.Calc.calc_push_impl@tok () Term)
(declare-fun FStar.Math.Lib.lemma_div_def (Term Term) Term)
(declare-fun FStar.Math.Lib.lemma_div_def@tok () Term)
(declare-fun FStar.Math.Lib.mul_lemma (Term Term Term) Term)
(declare-fun FStar.Math.Lib.mul_lemma@tok () Term)
(declare-fun FStar.Math.Lib.mul_lemma_ (Term Term Term) Term)
(declare-fun FStar.Math.Lib.mul_lemma_@tok () Term)
(declare-fun FStar.Math.Lib.mul_div_lemma (Term Term) Term)
(declare-fun FStar.Math.Lib.mul_div_lemma@tok () Term)
(declare-fun FStar.Math.Lib.slash_decr_axiom (Term Term) Term)
(declare-fun FStar.Math.Lib.slash_decr_axiom@tok () Term)
(declare-fun FStar.Math.Lib.lemma_mul_minus_distr_l (Term Term Term) Term)
(declare-fun FStar.Math.Lib.lemma_mul_minus_distr_l@tok () Term)
(declare-fun FStar.Math.Lib.slash_star_axiom (Term Term Term) Term)
(declare-fun FStar.Math.Lib.slash_star_axiom@tok () Term)
(declare-fun FStar.Math.Lib.log_2.fuel_instrumented (Fuel Term) Term)
(declare-fun FStar.Math.Lib.log_2.fuel_instrumented_token () Term)
(declare-fun FStar.Math.Lib.log_2 (Term) Term)
(declare-fun FStar.Math.Lib.log_2@tok () Term)
(declare-fun Tm_arrow_195a91d0390990c5da9b9b2c7b2e9a5f () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term)) (! (= (FStar.Math.Lib.log_2.fuel_instrumented (SFuel @u0) @x1) (FStar.Math.Lib.log_2.fuel_instrumented ZFuel @x1)) :pattern ((FStar.Math.Lib.log_2.fuel_instrumented (SFuel @u0) @x1)) :qid @fuel_irrelevance_FStar.Math.Lib.log_2.fuel_instrumented)) :named fuel_irrelevance_FStar.Math.Lib.log_2.fuel_instrumented))
(assert (! (forall ((@x0 Term)) (! (= (FStar.Math.Lib.log_2 @x0) (FStar.Math.Lib.log_2.fuel_instrumented MaxFuel @x0)) :pattern ((FStar.Math.Lib.log_2 @x0)) :qid @fuel_correspondence_FStar.Math.Lib.log_2.fuel_instrumented)) :named fuel_correspondence_FStar.Math.Lib.log_2.fuel_instrumented))
(declare-fun FStar.Math.Lib.powx.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.Math.Lib.powx.fuel_instrumented_token () Term)
(declare-fun FStar.Math.Lib.powx (Term Term) Term)
(declare-fun FStar.Math.Lib.powx@tok () Term)
(declare-fun Tm_arrow_97e79e8898be25d1baac7492eb8157a8 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.Math.Lib.powx.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.Math.Lib.powx.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.Math.Lib.powx.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.Math.Lib.powx.fuel_instrumented)) :named fuel_irrelevance_FStar.Math.Lib.powx.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.Math.Lib.powx @x0 @x1) (FStar.Math.Lib.powx.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.Math.Lib.powx @x0 @x1)) :qid @fuel_correspondence_FStar.Math.Lib.powx.fuel_instrumented)) :named fuel_correspondence_FStar.Math.Lib.powx.fuel_instrumented))
(declare-fun FStar.Math.Lib.abs (Term) Term)
(declare-fun Tm_refine_5b706f1316bc4c0722dc2171363a324f (Term) Term)
(declare-fun Tm_arrow_485462bf1365ac4f0407149110b772cd () Term)
(declare-fun FStar.Math.Lib.abs@tok () Term)
(declare-fun FStar.Math.Lib.max (Term Term) Term)
(declare-fun Tm_refine_3b1de445e68d5a7cbfc9e637b6d5fe5c (Term Term) Term)
(declare-fun Tm_arrow_6cac7a49c19aab6d14a44dce4ddd50d7 () Term)
(declare-fun FStar.Math.Lib.max@tok () Term)
(declare-fun FStar.Math.Lib.min (Term Term) Term)
(declare-fun Tm_refine_75a39246caf92bd7ba0c54b533ac97ba (Term Term) Term)
(declare-fun Tm_arrow_f1c63d0f3ff3d4c0a4e173563f61a3ec () Term)
(declare-fun FStar.Math.Lib.min@tok () Term)
(declare-fun FStar.Math.Lib.div (Term Term) Term)
(declare-fun Tm_refine_2a75ac9e9041407930877285ccf479d9 (Term) Term)
(declare-fun Tm_arrow_bb819be7118d7bfb2cedbf3c6477c362 () Term)
(declare-fun FStar.Math.Lib.div@tok () Term)
(declare-fun FStar.Math.Lib.div_non_eucl (Term Term) Term)
(declare-fun Tm_refine_0ffeb4b35eb66c9dc7f43d49d6f24837 (Term Term) Term)
(declare-fun Tm_arrow_7c4dc753d10246d9d92341a1295260f4 () Term)
(declare-fun FStar.Math.Lib.div_non_eucl@tok () Term)
(declare-fun FStar.Math.Lib.shift_left (Term Term) Term)
(declare-fun Tm_refine_180a7ec928fc00449a9ff97fd83eb9f7 (Term Term) Term)
(declare-fun Tm_arrow_ebb8ce92eba15a16c00c7e434e88c84b () Term)
(declare-fun FStar.Math.Lib.shift_left@tok () Term)
(declare-fun FStar.Math.Lib.arithmetic_shift_right (Term Term) Term)
(declare-fun Tm_refine_1b8188dd620bafffed7e311591823814 (Term Term) Term)
(declare-fun Tm_arrow_0d2ab070c39795db6825f9a2ab12fa9a () Term)
(declare-fun FStar.Math.Lib.arithmetic_shift_right@tok () Term)
(declare-fun FStar.Math.Lib.signed_modulo (Term Term) Term)
(declare-fun Tm_refine_7f910f581ef6c422e545ac01d1c8b2f5 (Term Term) Term)
(declare-fun Tm_arrow_735d78cef45a99c351b2596c50444f63 () Term)
(declare-fun FStar.Math.Lib.signed_modulo@tok () Term)
(declare-fun FStar.Math.Lib.op_Plus_Percent (Term Term) Term)
(declare-fun Tm_refine_d653f98e8ce399d5b7ea191c117fe516 (Term Term) Term)
(declare-fun Tm_arrow_47a9b4ba9fff686aea1b155fa584e4a2 () Term)
(declare-fun FStar.Math.Lib.op_Plus_Percent@tok () Term)
(declare-fun FStar.Math.Lib.powx_lemma1 (Term) Term)
(declare-fun FStar.Math.Lib.powx_lemma1@tok () Term)
(declare-fun FStar.Math.Lib.powx_lemma2 (Term Term Term) Term)
(declare-fun FStar.Math.Lib.powx_lemma2@tok () Term)
(declare-fun FStar.Math.Lib.abs_mul_lemma (Term Term) Term)
(declare-fun FStar.Math.Lib.abs_mul_lemma@tok () Term)
(declare-fun FStar.Math.Lib.signed_modulo_property (Term Term) Term)
(declare-fun FStar.Math.Lib.signed_modulo_property@tok () Term)
(declare-fun FStar.Math.Lib.div_non_eucl_decr_lemma (Term Term) Term)
(declare-fun FStar.Math.Lib.div_non_eucl_decr_lemma@tok () Term)
(declare-fun FStar.Math.Lib.div_non_eucl_bigger_denom_lemma (Term Term) Term)
(declare-fun FStar.Math.Lib.div_non_eucl_bigger_denom_lemma@tok () Term)
(declare-fun FStar.Math.Lemmas.euclidean_div_axiom (Term Term) Term)
(declare-fun FStar.Math.Lemmas.euclidean_div_axiom@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_eucl_div_bound (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_eucl_div_bound@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mult_le_left (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mult_le_left@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mult_le_right (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mult_le_right@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mult_lt_left (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mult_lt_left@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mult_lt_right (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mult_lt_right@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mult_lt_sqr (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mult_lt_sqr@tok () Term)
(declare-fun FStar.Math.Lemmas.swap_mul (Term Term) Term)
(declare-fun FStar.Math.Lemmas.swap_mul@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_cancel_mul (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_cancel_mul@tok () Term)
(declare-fun FStar.Math.Lemmas.distributivity_add_left (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.distributivity_add_left@tok () Term)
(declare-fun FStar.Math.Lemmas.distributivity_add_right (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.distributivity_add_right@tok () Term)
(declare-fun FStar.Math.Lemmas.paren_mul_left (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.paren_mul_left@tok () Term)
(declare-fun FStar.Math.Lemmas.paren_mul_right (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.paren_mul_right@tok () Term)
(declare-fun FStar.Math.Lemmas.paren_add_left (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.paren_add_left@tok () Term)
(declare-fun FStar.Math.Lemmas.paren_add_right (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.paren_add_right@tok () Term)
(declare-fun FStar.Math.Lemmas.addition_is_associative (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.addition_is_associative@tok () Term)
(declare-fun FStar.Math.Lemmas.subtraction_is_distributive (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.subtraction_is_distributive@tok () Term)
(declare-fun FStar.Math.Lemmas.swap_add_plus_minus (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.swap_add_plus_minus@tok () Term)
(declare-fun FStar.Math.Lemmas.neg_mul_left (Term Term) Term)
(declare-fun FStar.Math.Lemmas.neg_mul_left@tok () Term)
(declare-fun FStar.Math.Lemmas.neg_mul_right (Term Term) Term)
(declare-fun FStar.Math.Lemmas.neg_mul_right@tok () Term)
(declare-fun FStar.Math.Lemmas.swap_neg_mul (Term Term) Term)
(declare-fun FStar.Math.Lemmas.swap_neg_mul@tok () Term)
(declare-fun FStar.Math.Lemmas.distributivity_sub_left (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.distributivity_sub_left@tok () Term)
(declare-fun FStar.Math.Lemmas.distributivity_sub_right (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.distributivity_sub_right@tok () Term)
(declare-fun FStar.Math.Lemmas.mul_binds_tighter (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.mul_binds_tighter@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_abs_mul (Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_abs_mul@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_abs_bound (Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_abs_bound@tok () Term)
(declare-fun FStar.Math.Lemmas.mul_ineq1 (Term Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.mul_ineq1@tok () Term)
(declare-fun FStar.Math.Lemmas.add_zero_left_is_same (Term) Term)
(declare-fun FStar.Math.Lemmas.add_zero_left_is_same@tok () Term)
(declare-fun FStar.Math.Lemmas.add_zero_right_is_same (Term) Term)
(declare-fun FStar.Math.Lemmas.add_zero_right_is_same@tok () Term)
(declare-fun FStar.Math.Lemmas.mul_one_left_is_same (Term) Term)
(declare-fun FStar.Math.Lemmas.mul_one_left_is_same@tok () Term)
(declare-fun FStar.Math.Lemmas.mul_one_right_is_same (Term) Term)
(declare-fun FStar.Math.Lemmas.mul_one_right_is_same@tok () Term)
(declare-fun FStar.Math.Lemmas.mul_zero_left_is_zero (Term) Term)
(declare-fun FStar.Math.Lemmas.mul_zero_left_is_zero@tok () Term)
(declare-fun FStar.Math.Lemmas.mul_zero_right_is_zero (Term) Term)
(declare-fun FStar.Math.Lemmas.mul_zero_right_is_zero@tok () Term)
(declare-fun FStar.Math.Lemmas.nat_times_nat_is_nat (Term Term) Term)
(declare-fun FStar.Math.Lemmas.nat_times_nat_is_nat@tok () Term)
(declare-fun FStar.Math.Lemmas.pos_times_pos_is_pos (Term Term) Term)
(declare-fun FStar.Math.Lemmas.pos_times_pos_is_pos@tok () Term)
(declare-fun FStar.Math.Lemmas.nat_over_pos_is_nat (Term Term) Term)
(declare-fun FStar.Math.Lemmas.nat_over_pos_is_nat@tok () Term)
(declare-fun FStar.Math.Lemmas.nat_plus_nat_equal_zero_lemma (Term Term) Term)
(declare-fun FStar.Math.Lemmas.nat_plus_nat_equal_zero_lemma@tok () Term)
(declare-fun FStar.Math.Lemmas.int_times_int_equal_zero_lemma (Term Term) Term)
(declare-fun FStar.Math.Lemmas.int_times_int_equal_zero_lemma@tok () Term)
(declare-fun FStar.Math.Lemmas.pow2_double_sum (Term) Term)
(declare-fun FStar.Math.Lemmas.pow2_double_sum@tok () Term)
(declare-fun FStar.Math.Lemmas.pow2_double_mult (Term) Term)
(declare-fun FStar.Math.Lemmas.pow2_double_mult@tok () Term)
(declare-fun FStar.Math.Lemmas.pow2_lt_compat (Term Term) Term)
(declare-fun FStar.Math.Lemmas.pow2_lt_compat@tok () Term)
(declare-fun FStar.Math.Lemmas.pow2_le_compat (Term Term) Term)
(declare-fun FStar.Math.Lemmas.pow2_le_compat@tok () Term)
(declare-fun FStar.Math.Lemmas.pow2_plus (Term Term) Term)
(declare-fun FStar.Math.Lemmas.pow2_plus@tok () Term)
(declare-fun FStar.Math.Lemmas.pow2_minus (Term Term) Term)
(declare-fun FStar.Math.Lemmas.pow2_minus@tok () Term)
(declare-fun FStar.Math.Lemmas.multiply_fractions (Term Term) Term)
(declare-fun FStar.Math.Lemmas.multiply_fractions@tok () Term)
(declare-fun FStar.Math.Lemmas.modulo_lemma (Term Term) Term)
(declare-fun FStar.Math.Lemmas.modulo_lemma@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_div_mod (Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_div_mod@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_lt (Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_lt@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_div_lt_nat (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_div_lt_nat@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_div_lt (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_div_lt@tok () Term)
(declare-fun FStar.Math.Lemmas.bounded_multiple_is_zero (Term Term) Term)
(declare-fun FStar.Math.Lemmas.bounded_multiple_is_zero@tok () Term)
(declare-fun FStar.Math.Lemmas.small_div (Term Term) Term)
(declare-fun FStar.Math.Lemmas.small_div@tok () Term)
(declare-fun FStar.Math.Lemmas.small_mod (Term Term) Term)
(declare-fun FStar.Math.Lemmas.small_mod@tok () Term)
(declare-fun FStar.Math.Lemmas.lt_multiple_is_equal (Term Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lt_multiple_is_equal@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_plus (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_plus@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_div_plus (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_div_plus@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_div_mod_plus (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_div_mod_plus@tok () Term)
(declare-fun FStar.Math.Lemmas.add_div_mod_1 (Term Term) Term)
(declare-fun FStar.Math.Lemmas.add_div_mod_1@tok () Term)
(declare-fun FStar.Math.Lemmas.sub_div_mod_1 (Term Term) Term)
(declare-fun FStar.Math.Lemmas.sub_div_mod_1@tok () Term)
(declare-fun FStar.Math.Lemmas.cancel_mul_div (Term Term) Term)
(declare-fun FStar.Math.Lemmas.cancel_mul_div@tok () Term)
(declare-fun FStar.Math.Lemmas.cancel_mul_mod (Term Term) Term)
(declare-fun FStar.Math.Lemmas.cancel_mul_mod@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_add_distr (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_add_distr@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_sub_distr (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_sub_distr@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_sub_0 (Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_sub_0@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_sub_1 (Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_sub_1@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_mul_distr_l (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_mul_distr_l@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_mul_distr_r (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_mul_distr_r@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_injective (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_injective@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mul_sub_distr (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mul_sub_distr@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_div_exact (Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_div_exact@tok () Term)
(declare-fun FStar.Math.Lemmas.div_exact_r (Term Term) Term)
(declare-fun FStar.Math.Lemmas.div_exact_r@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_spec (Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_spec@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_spec2 (Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_spec2@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_plus_distr_l (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_plus_distr_l@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_plus_distr_r (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_plus_distr_r@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_mod (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_mod@tok () Term)
(declare-fun FStar.Math.Lemmas.euclidean_division_definition (Term Term) Term)
(declare-fun FStar.Math.Lemmas.euclidean_division_definition@tok () Term)
(declare-fun FStar.Math.Lemmas.modulo_range_lemma (Term Term) Term)
(declare-fun FStar.Math.Lemmas.modulo_range_lemma@tok () Term)
(declare-fun FStar.Math.Lemmas.small_modulo_lemma_1 (Term Term) Term)
(declare-fun FStar.Math.Lemmas.small_modulo_lemma_1@tok () Term)
(declare-fun FStar.Math.Lemmas.small_modulo_lemma_2 (Term Term) Term)
(declare-fun FStar.Math.Lemmas.small_modulo_lemma_2@tok () Term)
(declare-fun FStar.Math.Lemmas.small_division_lemma_1 (Term Term) Term)
(declare-fun FStar.Math.Lemmas.small_division_lemma_1@tok () Term)
(declare-fun FStar.Math.Lemmas.small_division_lemma_2 (Term Term) Term)
(declare-fun FStar.Math.Lemmas.small_division_lemma_2@tok () Term)
(declare-fun FStar.Math.Lemmas.multiplication_order_lemma (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.multiplication_order_lemma@tok () Term)
(declare-fun FStar.Math.Lemmas.division_propriety (Term Term) Term)
(declare-fun FStar.Math.Lemmas.division_propriety@tok () Term)
(declare-fun FStar.Math.Lemmas.division_definition_lemma_1 (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.division_definition_lemma_1@tok () Term)
(declare-fun FStar.Math.Lemmas.division_definition_lemma_2 (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.division_definition_lemma_2@tok () Term)
(declare-fun FStar.Math.Lemmas.division_definition (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.division_definition@tok () Term)
(declare-fun FStar.Math.Lemmas.multiple_division_lemma (Term Term) Term)
(declare-fun FStar.Math.Lemmas.multiple_division_lemma@tok () Term)
(declare-fun FStar.Math.Lemmas.multiple_modulo_lemma (Term Term) Term)
(declare-fun FStar.Math.Lemmas.multiple_modulo_lemma@tok () Term)
(declare-fun FStar.Math.Lemmas.division_addition_lemma (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.division_addition_lemma@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_div_le_ (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_div_le_@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_div_le (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_div_le@tok () Term)
(declare-fun FStar.Math.Lemmas.division_sub_lemma (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.division_sub_lemma@tok () Term)
(declare-fun FStar.Math.Lemmas.modulo_distributivity (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.modulo_distributivity@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_plus_mul_distr (Term Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_plus_mul_distr@tok () Term)
(declare-fun FStar.Math.Lemmas.modulo_addition_lemma (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.modulo_addition_lemma@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_sub (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_sub@tok () Term)
(declare-fun FStar.Math.Lemmas.mod_mult_exact (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.mod_mult_exact@tok () Term)
(declare-fun FStar.Math.Lemmas.mod_mul_div_exact (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.mod_mul_div_exact@tok () Term)
(declare-fun FStar.Math.Lemmas.mod_pow2_div2 (Term Term) Term)
(declare-fun FStar.Math.Lemmas.mod_pow2_div2@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_div_lt_cancel (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_div_lt_cancel@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_mult_zero (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_mult_zero@tok () Term)
(declare-fun FStar.Math.Lemmas.division_multiplication_lemma (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.division_multiplication_lemma@tok () Term)
(declare-fun FStar.Math.Lemmas.cancel_fraction (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.cancel_fraction@tok () Term)
(declare-fun FStar.Math.Lemmas.modulo_scale_lemma (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.modulo_scale_lemma@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mul_pos_pos_is_pos (Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mul_pos_pos_is_pos@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mul_nat_pos_is_nat (Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mul_nat_pos_is_nat@tok () Term)
(declare-fun FStar.Math.Lemmas.modulo_division_lemma_0 (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.modulo_division_lemma_0@tok () Term)
(declare-fun FStar.Math.Lemmas.modulo_division_lemma (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.modulo_division_lemma@tok () Term)
(declare-fun FStar.Math.Lemmas.modulo_modulo_lemma (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.modulo_modulo_lemma@tok () Term)
(declare-fun FStar.Math.Lemmas.pow2_multiplication_division_lemma_1 (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.pow2_multiplication_division_lemma_1@tok () Term)
(declare-fun FStar.Math.Lemmas.pow2_multiplication_division_lemma_2 (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.pow2_multiplication_division_lemma_2@tok () Term)
(declare-fun FStar.Math.Lemmas.pow2_multiplication_modulo_lemma_1 (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.pow2_multiplication_modulo_lemma_1@tok () Term)
(declare-fun FStar.Math.Lemmas.pow2_multiplication_modulo_lemma_2 (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.pow2_multiplication_modulo_lemma_2@tok () Term)
(declare-fun FStar.Math.Lemmas.pow2_modulo_division_lemma_1 (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.pow2_modulo_division_lemma_1@tok () Term)
(declare-fun FStar.Math.Lemmas.pow2_modulo_division_lemma_2 (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.pow2_modulo_division_lemma_2@tok () Term)
(declare-fun FStar.Math.Lemmas.pow2_modulo_modulo_lemma_1 (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.pow2_modulo_modulo_lemma_1@tok () Term)
(declare-fun FStar.Math.Lemmas.pow2_modulo_modulo_lemma_2 (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.pow2_modulo_modulo_lemma_2@tok () Term)
(declare-fun FStar.Math.Lemmas.modulo_add (Term Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.modulo_add@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_twice (Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_twice@tok () Term)
(declare-fun FStar.Math.Lemmas.modulo_sub (Term Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.modulo_sub@tok () Term)
(declare-fun FStar.Math.Lemmas.mod_add_both (Term Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.mod_add_both@tok () Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_plus_injective (Term Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.lemma_mod_plus_injective@tok () Term)
(declare-fun FStar.Math.Lemmas.modulo_sub_lemma (Term Term Term) Term)
(declare-fun FStar.Math.Lemmas.modulo_sub_lemma@tok () Term)
(declare-fun FStar.BitVector.bv_t (Term) Term)
(declare-fun FStar.BitVector.bv_t@tok () Term)
(declare-fun Tm_refine_e2d5d62a90ceed8a6faf9d20615f4e1e (Term) Term)
(declare-fun FStar.BitVector.zero_vec (Term) Term)
(declare-fun Tm_arrow_b6d52a9c4babaef5c45b062eb8723782 () Term)
(declare-fun FStar.BitVector.zero_vec@tok () Term)
(declare-fun FStar.BitVector.elem_vec (Term Term) Term)
(declare-fun Tm_arrow_6880b3a4da9e8c38f1dbaa400eb50d7d () Term)
(declare-fun FStar.BitVector.elem_vec@tok () Term)
(declare-fun FStar.BitVector.ones_vec (Term) Term)
(declare-fun FStar.BitVector.ones_vec@tok () Term)
(declare-fun FStar.BitVector.logand_vec.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.BitVector.logand_vec.fuel_instrumented_token () Term)
(declare-fun FStar.BitVector.logand_vec (Term Term Term) Term)
(declare-fun FStar.BitVector.logand_vec@tok () Term)
(declare-fun Tm_arrow_d5001f682a0789c7aa8e67d06058b034 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.BitVector.logand_vec.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.BitVector.logand_vec.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.BitVector.logand_vec.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.BitVector.logand_vec.fuel_instrumented)) :named fuel_irrelevance_FStar.BitVector.logand_vec.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.BitVector.logand_vec @x0 @x1 @x2) (FStar.BitVector.logand_vec.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.BitVector.logand_vec @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.BitVector.logand_vec.fuel_instrumented)) :named fuel_correspondence_FStar.BitVector.logand_vec.fuel_instrumented))
(declare-fun FStar.BitVector.logand_vec_definition (Term Term Term Term) Term)
(declare-fun FStar.BitVector.logand_vec_definition@tok () Term)
(declare-fun FStar.BitVector.logxor_vec.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.BitVector.logxor_vec.fuel_instrumented_token () Term)
(declare-fun FStar.BitVector.logxor_vec (Term Term Term) Term)
(declare-fun FStar.BitVector.logxor_vec@tok () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.BitVector.logxor_vec.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.BitVector.logxor_vec.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.BitVector.logxor_vec.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.BitVector.logxor_vec.fuel_instrumented)) :named fuel_irrelevance_FStar.BitVector.logxor_vec.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.BitVector.logxor_vec @x0 @x1 @x2) (FStar.BitVector.logxor_vec.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.BitVector.logxor_vec @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.BitVector.logxor_vec.fuel_instrumented)) :named fuel_correspondence_FStar.BitVector.logxor_vec.fuel_instrumented))
(declare-fun FStar.BitVector.logxor_vec_definition (Term Term Term Term) Term)
(declare-fun FStar.BitVector.logxor_vec_definition@tok () Term)
(declare-fun FStar.BitVector.logor_vec.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.BitVector.logor_vec.fuel_instrumented_token () Term)
(declare-fun FStar.BitVector.logor_vec (Term Term Term) Term)
(declare-fun FStar.BitVector.logor_vec@tok () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.BitVector.logor_vec.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.BitVector.logor_vec.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.BitVector.logor_vec.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.BitVector.logor_vec.fuel_instrumented)) :named fuel_irrelevance_FStar.BitVector.logor_vec.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.BitVector.logor_vec @x0 @x1 @x2) (FStar.BitVector.logor_vec.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.BitVector.logor_vec @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.BitVector.logor_vec.fuel_instrumented)) :named fuel_correspondence_FStar.BitVector.logor_vec.fuel_instrumented))
(declare-fun FStar.BitVector.logor_vec_definition (Term Term Term Term) Term)
(declare-fun FStar.BitVector.logor_vec_definition@tok () Term)
(declare-fun FStar.BitVector.lognot_vec.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.BitVector.lognot_vec.fuel_instrumented_token () Term)
(declare-fun FStar.BitVector.lognot_vec (Term Term) Term)
(declare-fun FStar.BitVector.lognot_vec@tok () Term)
(declare-fun Tm_arrow_190e27813ba14c0d36577dc3d47778da () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.BitVector.lognot_vec.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.BitVector.lognot_vec.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.BitVector.lognot_vec.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.BitVector.lognot_vec.fuel_instrumented)) :named fuel_irrelevance_FStar.BitVector.lognot_vec.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.BitVector.lognot_vec @x0 @x1) (FStar.BitVector.lognot_vec.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.BitVector.lognot_vec @x0 @x1)) :qid @fuel_correspondence_FStar.BitVector.lognot_vec.fuel_instrumented)) :named fuel_correspondence_FStar.BitVector.lognot_vec.fuel_instrumented))
(declare-fun FStar.BitVector.lognot_vec_definition (Term Term Term) Term)
(declare-fun FStar.BitVector.lognot_vec_definition@tok () Term)
(declare-fun FStar.BitVector.lemma_xor_bounded (Term Term Term Term) Term)
(declare-fun FStar.BitVector.lemma_xor_bounded@tok () Term)
(declare-fun FStar.BitVector.is_subset_vec (Term Term Term) Term)
(declare-fun Tm_arrow_b51a0c80adeae3f31b1215853bb34fe1 () Term)
(declare-fun FStar.BitVector.is_subset_vec@tok () Term)
(declare-fun FStar.BitVector.is_superset_vec (Term Term Term) Term)
(declare-fun FStar.BitVector.is_superset_vec@tok () Term)
(declare-fun FStar.BitVector.lemma_slice_subset_vec (Term Term Term Term Term) Term)
(declare-fun FStar.BitVector.lemma_slice_subset_vec@tok () Term)
(declare-fun FStar.BitVector.lemma_slice_superset_vec (Term Term Term Term Term) Term)
(declare-fun FStar.BitVector.lemma_slice_superset_vec@tok () Term)
(declare-fun FStar.BitVector.shift_left_vec (Term Term Term) Term)
(declare-fun Tm_arrow_ccbebd343bd3a7caba5f263c2ba5f3be () Term)
(declare-fun FStar.BitVector.shift_left_vec@tok () Term)
(declare-fun FStar.BitVector.shift_left_vec_lemma_1 (Term Term Term Term) Term)
(declare-fun FStar.BitVector.shift_left_vec_lemma_1@tok () Term)
(declare-fun Tm_refine_6ccf0869e6825997ab860bb25791c11f (Term Term) Term)
(declare-fun FStar.BitVector.shift_left_vec_lemma_2 (Term Term Term Term) Term)
(declare-fun FStar.BitVector.shift_left_vec_lemma_2@tok () Term)
(declare-fun Tm_refine_e8e1ad4b2203cd724d5b8b2dba0a5826 (Term Term) Term)
(declare-fun FStar.BitVector.shift_right_vec (Term Term Term) Term)
(declare-fun FStar.BitVector.shift_right_vec@tok () Term)
(declare-fun FStar.BitVector.shift_right_vec_lemma_1 (Term Term Term Term) Term)
(declare-fun FStar.BitVector.shift_right_vec_lemma_1@tok () Term)
(declare-fun Tm_refine_34425c23b534b8a294f8f063dd9faa4b (Term Term) Term)
(declare-fun FStar.BitVector.shift_right_vec_lemma_2 (Term Term Term Term) Term)
(declare-fun FStar.BitVector.shift_right_vec_lemma_2@tok () Term)
(declare-fun Tm_refine_c0ec47abc53a2509e744dad22ccf8191 (Term Term) Term)
(declare-fun FStar.BitVector.shift_arithmetic_right_vec (Term Term Term) Term)
(declare-fun FStar.BitVector.shift_arithmetic_right_vec@tok () Term)
(declare-fun FStar.BitVector.shift_arithmetic_right_vec_lemma_1 (Term Term Term Term) Term)
(declare-fun FStar.BitVector.shift_arithmetic_right_vec_lemma_1@tok () Term)
(declare-fun FStar.BitVector.shift_arithmetic_right_vec_lemma_2 (Term Term Term Term) Term)
(declare-fun FStar.BitVector.shift_arithmetic_right_vec_lemma_2@tok () Term)
(declare-fun FStar.UInt.pow2_values (Term) Term)
(declare-fun FStar.UInt.pow2_values@tok () Term)
(declare-fun FStar.UInt.max_int (Term) Term)
(declare-fun Tm_arrow_fc34ca66de2f262c06145b17fb7ed6cb () Term)
(declare-fun FStar.UInt.max_int@tok () Term)
(declare-fun FStar.UInt.min_int (Term) Term)
(declare-fun FStar.UInt.min_int@tok () Term)
(declare-fun FStar.UInt.fits (Term Term) Term)
(declare-fun Tm_arrow_dea48782e508c14fa98dcf9716548804 () Term)
(declare-fun FStar.UInt.fits@tok () Term)
(declare-fun FStar.UInt.size (Term Term) Term)
(declare-fun Tm_arrow_f4ec8f8bfe492e31741a15356024bbaa () Term)
(declare-fun FStar.UInt.size@tok () Term)
(declare-fun FStar.UInt.uint_t (Term) Term)
(declare-fun FStar.UInt.uint_t@tok () Term)
(declare-fun Tm_refine_f13070840248fced9d9d60d77bdae3ec (Term) Term)
(declare-fun FStar.UInt.zero (Term) Term)
(declare-fun Tm_arrow_f1dd811328ea3b27fc410fa0f52880f7 () Term)
(declare-fun FStar.UInt.zero@tok () Term)
(declare-fun FStar.UInt.pow2_n (Term Term) Term)
(declare-fun Tm_arrow_8d41edd1e7b665db26512e6c6d9ece64 () Term)
(declare-fun FStar.UInt.pow2_n@tok () Term)
(declare-fun FStar.UInt.one (Term) Term)
(declare-fun Tm_arrow_89d370fa478cfd1f85a8759662ce0390 () Term)
(declare-fun FStar.UInt.one@tok () Term)
(declare-fun FStar.UInt.ones (Term) Term)
(declare-fun FStar.UInt.ones@tok () Term)
(declare-fun FStar.UInt.incr (Term Term) Term)
(declare-fun Tm_refine_22e8629663f0cb1c9de86e57e73778e3 (Term) Term)
(declare-fun Tm_arrow_e8e04e4a1022a7343e76760b76915c9e () Term)
(declare-fun FStar.UInt.incr@tok () Term)
(declare-fun FStar.UInt.decr (Term Term) Term)
(declare-fun Tm_arrow_2a167fb2d2f3f00bff7b73f048db0e83 () Term)
(declare-fun FStar.UInt.decr@tok () Term)
(declare-fun FStar.UInt.incr_underspec (Term Term) Term)
(declare-fun Tm_refine_6a367e92d5b1ca10009a43bd430dd796 (Term Term) Term)
(declare-fun Tm_arrow_fb114bd2e9239af1296268eb30490ff7 () Term)
(declare-fun FStar.UInt.incr_underspec@tok () Term)
(declare-fun FStar.UInt.decr_underspec (Term Term) Term)
(declare-fun Tm_refine_fa3c796c533e86dc9f3e3ffc647718f6 (Term Term) Term)
(declare-fun Tm_arrow_f1853f30408c6d0beb7795897a3ab5bc () Term)
(declare-fun FStar.UInt.decr_underspec@tok () Term)
(declare-fun FStar.UInt.incr_mod (Term Term) Term)
(declare-fun Tm_arrow_a565732dbe0b43ae2274b1f24341f11b () Term)
(declare-fun FStar.UInt.incr_mod@tok () Term)
(declare-fun FStar.UInt.decr_mod (Term Term) Term)
(declare-fun FStar.UInt.decr_mod@tok () Term)
(declare-fun FStar.UInt.add (Term Term Term) Term)
(declare-fun Tm_arrow_ea9f73d61c207ec4508af75e87c5ca13 () Term)
(declare-fun FStar.UInt.add@tok () Term)
(declare-fun FStar.UInt.add_underspec (Term Term Term) Term)
(declare-fun Tm_refine_c7a9b50c1b5983f8171c03368a208e31 (Term Term Term) Term)
(declare-fun Tm_arrow_880847ba34dd402fb6567384684864a6 () Term)
(declare-fun FStar.UInt.add_underspec@tok () Term)
(declare-fun FStar.UInt.add_mod (Term Term Term) Term)
(declare-fun Tm_arrow_2f3c6a962eb1cbbfd959311c0f20b277 () Term)
(declare-fun FStar.UInt.add_mod@tok () Term)
(declare-fun FStar.UInt.sub (Term Term Term) Term)
(declare-fun Tm_arrow_974b47e4388c1a4055fe210bb6a11687 () Term)
(declare-fun FStar.UInt.sub@tok () Term)
(declare-fun FStar.UInt.sub_underspec (Term Term Term) Term)
(declare-fun Tm_refine_109ae46bb20ad559af297346ec64ae4e (Term Term Term) Term)
(declare-fun Tm_arrow_1479a03f646b965be1bfedb2ee360f95 () Term)
(declare-fun FStar.UInt.sub_underspec@tok () Term)
(declare-fun FStar.UInt.sub_mod (Term Term Term) Term)
(declare-fun FStar.UInt.sub_mod@tok () Term)
(declare-fun FStar.UInt.mul (Term Term Term) Term)
(declare-fun Tm_arrow_45e02637bbbba15e6760300e4a62b58d () Term)
(declare-fun FStar.UInt.mul@tok () Term)
(declare-fun FStar.UInt.mul_underspec (Term Term Term) Term)
(declare-fun Tm_refine_ea207e5cce50229e615af011837e59a5 (Term Term Term) Term)
(declare-fun Tm_arrow_1f5fca1fff06689d84a49261819dc580 () Term)
(declare-fun FStar.UInt.mul_underspec@tok () Term)
(declare-fun FStar.UInt.mul_mod (Term Term Term) Term)
(declare-fun FStar.UInt.mul_mod@tok () Term)
(declare-fun FStar.UInt.lt_square_div_lt (Term Term) Term)
(declare-fun FStar.UInt.lt_square_div_lt@tok () Term)
(declare-fun FStar.UInt.mul_div (Term Term Term) Term)
(declare-fun FStar.UInt.mul_div@tok () Term)
(declare-fun Tm_refine_0722e9115d2a1be8d90527397d01011c (Term) Term)
(declare-fun FStar.UInt.div (Term Term Term) Term)
(declare-fun Tm_refine_e49d79feeb1e96b29b0f01b06f8dac23 (Term Term Term) Term)
(declare-fun Tm_arrow_6ebc7a9e6ff34015952a4168421980bf () Term)
(declare-fun FStar.UInt.div@tok () Term)
(declare-fun FStar.UInt.div_underspec (Term Term Term) Term)
(declare-fun Tm_refine_fafbb762e9b0100ba27aa174122ddaa3 (Term Term Term) Term)
(declare-fun Tm_arrow_ed1485a952a27dc4770fb0182ab26e79 () Term)
(declare-fun FStar.UInt.div_underspec@tok () Term)
(declare-fun FStar.UInt.div_size (Term Term Term) Term)
(declare-fun FStar.UInt.div_size@tok () Term)
(declare-fun FStar.UInt.udiv (Term Term Term) Term)
(declare-fun Tm_arrow_2b6a409bd2eeb88753b2b6fe89b0d0a9 () Term)
(declare-fun FStar.UInt.udiv@tok () Term)
(declare-fun FStar.UInt.mod (Term Term Term) Term)
(declare-fun Tm_arrow_6ae50616ce0b08fd950ce0be5e711193 () Term)
(declare-fun FStar.UInt.mod@tok () Term)
(declare-fun FStar.UInt.eq (Term Term Term) Term)
(declare-fun Tm_arrow_ed25d9271888f66e143c5c59e11fb3a9 () Term)
(declare-fun FStar.UInt.eq@tok () Term)
(declare-fun FStar.UInt.gt (Term Term Term) Term)
(declare-fun FStar.UInt.gt@tok () Term)
(declare-fun FStar.UInt.gte (Term Term Term) Term)
(declare-fun FStar.UInt.gte@tok () Term)
(declare-fun FStar.UInt.lt (Term Term Term) Term)
(declare-fun FStar.UInt.lt@tok () Term)
(declare-fun FStar.UInt.lte (Term Term Term) Term)
(declare-fun FStar.UInt.lte@tok () Term)
(declare-fun FStar.UInt.to_uint_t (Term Term) Term)
(declare-fun Tm_arrow_d5257ef463a03617bca88873b50f4e96 () Term)
(declare-fun FStar.UInt.to_uint_t@tok () Term)
(declare-fun FStar.UInt.to_vec.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.UInt.to_vec.fuel_instrumented_token () Term)
(declare-fun FStar.UInt.to_vec (Term Term) Term)
(declare-fun FStar.UInt.to_vec@tok () Term)
(declare-fun Tm_arrow_50c9ac04c4da2f9a3a1512bf3cfd180e () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.UInt.to_vec.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.UInt.to_vec.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.UInt.to_vec.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.UInt.to_vec.fuel_instrumented)) :named fuel_irrelevance_FStar.UInt.to_vec.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.UInt.to_vec @x0 @x1) (FStar.UInt.to_vec.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.UInt.to_vec @x0 @x1)) :qid @fuel_correspondence_FStar.UInt.to_vec.fuel_instrumented)) :named fuel_correspondence_FStar.UInt.to_vec.fuel_instrumented))
(declare-fun FStar.UInt.from_vec.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.UInt.from_vec.fuel_instrumented_token () Term)
(declare-fun FStar.UInt.from_vec (Term Term) Term)
(declare-fun FStar.UInt.from_vec@tok () Term)
(declare-fun Tm_arrow_3a21f80bb386ebae30b30ec5363d47ef () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.UInt.from_vec.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.UInt.from_vec.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.UInt.from_vec.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.UInt.from_vec.fuel_instrumented)) :named fuel_irrelevance_FStar.UInt.from_vec.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.UInt.from_vec @x0 @x1) (FStar.UInt.from_vec.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.UInt.from_vec @x0 @x1)) :qid @fuel_correspondence_FStar.UInt.from_vec.fuel_instrumented)) :named fuel_correspondence_FStar.UInt.from_vec.fuel_instrumented))
(declare-fun FStar.UInt.to_vec_lemma_1 (Term Term Term) Term)
(declare-fun FStar.UInt.to_vec_lemma_1@tok () Term)
(declare-fun FStar.UInt.to_vec_lemma_2 (Term Term Term) Term)
(declare-fun FStar.UInt.to_vec_lemma_2@tok () Term)
(declare-fun FStar.UInt.inverse_aux (Term Term Term) Term)
(declare-fun FStar.UInt.inverse_aux@tok () Term)
(declare-fun FStar.UInt.inverse_vec_lemma (Term Term) Term)
(declare-fun FStar.UInt.inverse_vec_lemma@tok () Term)
(declare-fun FStar.UInt.inverse_num_lemma (Term Term) Term)
(declare-fun FStar.UInt.inverse_num_lemma@tok () Term)
(declare-fun FStar.UInt.from_vec_lemma_1 (Term Term Term) Term)
(declare-fun FStar.UInt.from_vec_lemma_1@tok () Term)
(declare-fun FStar.UInt.from_vec_lemma_2 (Term Term Term) Term)
(declare-fun FStar.UInt.from_vec_lemma_2@tok () Term)
(declare-fun FStar.UInt.from_vec_aux (Term Term Term Term) Term)
(declare-fun FStar.UInt.from_vec_aux@tok () Term)
(declare-fun FStar.UInt.seq_slice_lemma (Term Term Term Term Term Term) Term)
(declare-fun FStar.UInt.seq_slice_lemma@tok () Term)
(declare-fun FStar.UInt.from_vec_propriety (Term Term Term) Term)
(declare-fun FStar.UInt.from_vec_propriety@tok () Term)
(declare-fun FStar.UInt.append_lemma (Term Term Term Term) Term)
(declare-fun FStar.UInt.append_lemma@tok () Term)
(declare-fun FStar.UInt.slice_left_lemma (Term Term Term) Term)
(declare-fun FStar.UInt.slice_left_lemma@tok () Term)
(declare-fun FStar.UInt.slice_right_lemma (Term Term Term) Term)
(declare-fun FStar.UInt.slice_right_lemma@tok () Term)
(declare-fun FStar.UInt.zero_to_vec_lemma (Term Term) Term)
(declare-fun FStar.UInt.zero_to_vec_lemma@tok () Term)
(declare-fun FStar.UInt.zero_from_vec_lemma (Term) Term)
(declare-fun FStar.UInt.zero_from_vec_lemma@tok () Term)
(declare-fun FStar.UInt.one_to_vec_lemma (Term Term) Term)
(declare-fun FStar.UInt.one_to_vec_lemma@tok () Term)
(declare-fun FStar.UInt.pow2_to_vec_lemma (Term Term Term) Term)
(declare-fun FStar.UInt.pow2_to_vec_lemma@tok () Term)
(declare-fun FStar.UInt.pow2_from_vec_lemma (Term Term) Term)
(declare-fun FStar.UInt.pow2_from_vec_lemma@tok () Term)
(declare-fun FStar.UInt.ones_to_vec_lemma (Term Term) Term)
(declare-fun FStar.UInt.ones_to_vec_lemma@tok () Term)
(declare-fun FStar.UInt.ones_from_vec_lemma (Term) Term)
(declare-fun FStar.UInt.ones_from_vec_lemma@tok () Term)
(declare-fun FStar.UInt.nth (Term Term Term) Term)
(declare-fun Tm_arrow_3fc70c4ae2acbd923fa94b8473fca72c () Term)
(declare-fun FStar.UInt.nth@tok () Term)
(declare-fun FStar.UInt.nth_lemma (Term Term Term) Term)
(declare-fun FStar.UInt.nth_lemma@tok () Term)
(declare-fun FStar.UInt.zero_nth_lemma (Term Term) Term)
(declare-fun FStar.UInt.zero_nth_lemma@tok () Term)
(declare-fun FStar.UInt.pow2_nth_lemma (Term Term Term) Term)
(declare-fun FStar.UInt.pow2_nth_lemma@tok () Term)
(declare-fun FStar.UInt.one_nth_lemma (Term Term) Term)
(declare-fun FStar.UInt.one_nth_lemma@tok () Term)
(declare-fun FStar.UInt.ones_nth_lemma (Term Term) Term)
(declare-fun FStar.UInt.ones_nth_lemma@tok () Term)
(declare-fun FStar.UInt.logand (Term Term Term) Term)
(declare-fun Tm_arrow_f4d897275479f32ec94ab14cea117895 () Term)
(declare-fun FStar.UInt.logand@tok () Term)
(declare-fun FStar.UInt.logxor (Term Term Term) Term)
(declare-fun FStar.UInt.logxor@tok () Term)
(declare-fun FStar.UInt.logor (Term Term Term) Term)
(declare-fun FStar.UInt.logor@tok () Term)
(declare-fun FStar.UInt.lognot (Term Term) Term)
(declare-fun Tm_arrow_7e93208f7d6c7796851172614443345f () Term)
(declare-fun FStar.UInt.lognot@tok () Term)
(declare-fun FStar.UInt.logand_definition (Term Term Term Term) Term)
(declare-fun FStar.UInt.logand_definition@tok () Term)
(declare-fun FStar.UInt.logxor_definition (Term Term Term Term) Term)
(declare-fun FStar.UInt.logxor_definition@tok () Term)
(declare-fun FStar.UInt.logor_definition (Term Term Term Term) Term)
(declare-fun FStar.UInt.logor_definition@tok () Term)
(declare-fun FStar.UInt.lognot_definition (Term Term Term) Term)
(declare-fun FStar.UInt.lognot_definition@tok () Term)
(declare-fun FStar.UInt.minus (Term Term) Term)
(declare-fun FStar.UInt.minus@tok () Term)
(declare-fun FStar.UInt.logand_commutative (Term Term Term) Term)
(declare-fun FStar.UInt.logand_commutative@tok () Term)
(declare-fun FStar.UInt.logand_associative (Term Term Term Term) Term)
(declare-fun FStar.UInt.logand_associative@tok () Term)
(declare-fun FStar.UInt.logand_self (Term Term) Term)
(declare-fun FStar.UInt.logand_self@tok () Term)
(declare-fun FStar.UInt.logand_lemma_1 (Term Term) Term)
(declare-fun FStar.UInt.logand_lemma_1@tok () Term)
(declare-fun FStar.UInt.logand_lemma_2 (Term Term) Term)
(declare-fun FStar.UInt.logand_lemma_2@tok () Term)
(declare-fun FStar.UInt.subset_vec_le_lemma (Term Term Term) Term)
(declare-fun FStar.UInt.subset_vec_le_lemma@tok () Term)
(declare-fun FStar.UInt.logand_le (Term Term Term) Term)
(declare-fun FStar.UInt.logand_le@tok () Term)
(declare-fun FStar.UInt.logxor_commutative (Term Term Term) Term)
(declare-fun FStar.UInt.logxor_commutative@tok () Term)
(declare-fun FStar.UInt.logxor_associative (Term Term Term Term) Term)
(declare-fun FStar.UInt.logxor_associative@tok () Term)
(declare-fun FStar.UInt.logxor_self (Term Term) Term)
(declare-fun FStar.UInt.logxor_self@tok () Term)
(declare-fun FStar.UInt.logxor_lemma_1 (Term Term) Term)
(declare-fun FStar.UInt.logxor_lemma_1@tok () Term)
(declare-fun FStar.UInt.logxor_lemma_2 (Term Term) Term)
(declare-fun FStar.UInt.logxor_lemma_2@tok () Term)
(declare-fun FStar.UInt.xor (Term Term) Term)
(declare-fun Tm_arrow_a41b9b98d4288401e09e5c3b51ccc4f5 () Term)
(declare-fun FStar.UInt.xor@tok () Term)
(declare-fun FStar.UInt.xor_lemma (Term Term) Term)
(declare-fun FStar.UInt.xor_lemma@tok () Term)
(declare-fun FStar.UInt.logxor_inv (Term Term Term) Term)
(declare-fun FStar.UInt.logxor_inv@tok () Term)
(declare-fun FStar.UInt.logxor_neq_nonzero (Term Term Term) Term)
(declare-fun FStar.UInt.logxor_neq_nonzero@tok () Term)
(declare-fun FStar.UInt.logor_commutative (Term Term Term) Term)
(declare-fun FStar.UInt.logor_commutative@tok () Term)
(declare-fun FStar.UInt.logor_associative (Term Term Term Term) Term)
(declare-fun FStar.UInt.logor_associative@tok () Term)
(declare-fun FStar.UInt.logor_self (Term Term) Term)
(declare-fun FStar.UInt.logor_self@tok () Term)
(declare-fun FStar.UInt.logor_lemma_1 (Term Term) Term)
(declare-fun FStar.UInt.logor_lemma_1@tok () Term)
(declare-fun FStar.UInt.logor_lemma_2 (Term Term) Term)
(declare-fun FStar.UInt.logor_lemma_2@tok () Term)
(declare-fun FStar.UInt.superset_vec_ge_lemma (Term Term Term) Term)
(declare-fun FStar.UInt.superset_vec_ge_lemma@tok () Term)
(declare-fun FStar.UInt.logor_ge (Term Term Term) Term)
(declare-fun FStar.UInt.logor_ge@tok () Term)
(declare-fun FStar.UInt.lognot_self (Term Term) Term)
(declare-fun FStar.UInt.lognot_self@tok () Term)
(declare-fun FStar.UInt.lognot_lemma_1 (Term) Term)
(declare-fun FStar.UInt.lognot_lemma_1@tok () Term)
(declare-fun FStar.UInt.index_to_vec_ones (Term Term Term) Term)
(declare-fun FStar.UInt.index_to_vec_ones@tok () Term)
(declare-fun Tm_refine_7e0b9b2dbca36eab00de093c1b701c6d (Term) Term)
(declare-fun FStar.UInt.logor_disjoint (Term Term Term Term) Term)
(declare-fun FStar.UInt.logor_disjoint@tok () Term)
(declare-fun FStar.UInt.logand_mask (Term Term Term) Term)
(declare-fun FStar.UInt.logand_mask@tok () Term)
(declare-fun FStar.UInt.shift_left (Term Term Term) Term)
(declare-fun Tm_arrow_88bed77db23726a0c4c74cf2019c096b () Term)
(declare-fun FStar.UInt.shift_left@tok () Term)
(declare-fun FStar.UInt.shift_right (Term Term Term) Term)
(declare-fun FStar.UInt.shift_right@tok () Term)
(declare-fun FStar.UInt.shift_left_lemma_1 (Term Term Term Term) Term)
(declare-fun FStar.UInt.shift_left_lemma_1@tok () Term)
(declare-fun FStar.UInt.shift_left_lemma_2 (Term Term Term Term) Term)
(declare-fun FStar.UInt.shift_left_lemma_2@tok () Term)
(declare-fun FStar.UInt.shift_right_lemma_1 (Term Term Term Term) Term)
(declare-fun FStar.UInt.shift_right_lemma_1@tok () Term)
(declare-fun FStar.UInt.shift_right_lemma_2 (Term Term Term Term) Term)
(declare-fun FStar.UInt.shift_right_lemma_2@tok () Term)
(declare-fun FStar.UInt.shift_left_logand_lemma (Term Term Term Term) Term)
(declare-fun FStar.UInt.shift_left_logand_lemma@tok () Term)
(declare-fun FStar.UInt.shift_right_logand_lemma (Term Term Term Term) Term)
(declare-fun FStar.UInt.shift_right_logand_lemma@tok () Term)
(declare-fun FStar.UInt.shift_left_logxor_lemma (Term Term Term Term) Term)
(declare-fun FStar.UInt.shift_left_logxor_lemma@tok () Term)
(declare-fun FStar.UInt.shift_right_logxor_lemma (Term Term Term Term) Term)
(declare-fun FStar.UInt.shift_right_logxor_lemma@tok () Term)
(declare-fun FStar.UInt.shift_left_logor_lemma (Term Term Term Term) Term)
(declare-fun FStar.UInt.shift_left_logor_lemma@tok () Term)
(declare-fun FStar.UInt.shift_right_logor_lemma (Term Term Term Term) Term)
(declare-fun FStar.UInt.shift_right_logor_lemma@tok () Term)
(declare-fun FStar.UInt.shift_left_value_aux_1 (Term Term Term) Term)
(declare-fun FStar.UInt.shift_left_value_aux_1@tok () Term)
(declare-fun FStar.UInt.shift_left_value_aux_2 (Term Term) Term)
(declare-fun FStar.UInt.shift_left_value_aux_2@tok () Term)
(declare-fun FStar.UInt.shift_left_value_aux_3 (Term Term Term) Term)
(declare-fun FStar.UInt.shift_left_value_aux_3@tok () Term)
(declare-fun FStar.UInt.shift_left_value_lemma (Term Term Term) Term)
(declare-fun FStar.UInt.shift_left_value_lemma@tok () Term)
(declare-fun FStar.UInt.shift_right_value_aux_1 (Term Term Term) Term)
(declare-fun FStar.UInt.shift_right_value_aux_1@tok () Term)
(declare-fun FStar.UInt.shift_right_value_aux_2 (Term Term) Term)
(declare-fun FStar.UInt.shift_right_value_aux_2@tok () Term)
(declare-fun FStar.UInt.shift_right_value_aux_3 (Term Term Term) Term)
(declare-fun FStar.UInt.shift_right_value_aux_3@tok () Term)
(declare-fun FStar.UInt.shift_right_value_lemma (Term Term Term) Term)
(declare-fun FStar.UInt.shift_right_value_lemma@tok () Term)
(declare-fun FStar.UInt.msb (Term Term) Term)
(declare-fun Tm_arrow_d4ac65fa6e48f26152e66f6f5f032db4 () Term)
(declare-fun FStar.UInt.msb@tok () Term)
(declare-fun FStar.UInt.lemma_msb_pow2 (Term Term) Term)
(declare-fun FStar.UInt.lemma_msb_pow2@tok () Term)
(declare-fun FStar.UInt.lemma_minus_zero (Term Term) Term)
(declare-fun FStar.UInt.lemma_minus_zero@tok () Term)
(declare-fun FStar.UInt.lemma_msb_gte (Term Term Term) Term)
(declare-fun FStar.UInt.lemma_msb_gte@tok () Term)
(declare-fun FStar.UInt.lemma_uint_mod (Term Term) Term)
(declare-fun FStar.UInt.lemma_uint_mod@tok () Term)
(declare-fun FStar.UInt.lemma_add_sub_cancel (Term Term Term) Term)
(declare-fun FStar.UInt.lemma_add_sub_cancel@tok () Term)
(declare-fun FStar.UInt.lemma_mod_sub_distr_l (Term Term Term) Term)
(declare-fun FStar.UInt.lemma_mod_sub_distr_l@tok () Term)
(declare-fun FStar.UInt.lemma_sub_add_cancel (Term Term Term) Term)
(declare-fun FStar.UInt.lemma_sub_add_cancel@tok () Term)
(declare-fun FStar.UInt.zero_extend_vec (Term Term) Term)
(declare-fun Tm_arrow_dcb1e97275faab10b7eb1bdfcfbde371 () Term)
(declare-fun FStar.UInt.zero_extend_vec@tok () Term)
(declare-fun FStar.UInt.one_extend_vec (Term Term) Term)
(declare-fun FStar.UInt.one_extend_vec@tok () Term)
(declare-fun FStar.UInt.zero_extend (Term Term) Term)
(declare-fun Tm_arrow_8a55f1e2e0fc60c6f44b88ae88621b5f () Term)
(declare-fun FStar.UInt.zero_extend@tok () Term)
(declare-fun FStar.UInt.one_extend (Term Term) Term)
(declare-fun FStar.UInt.one_extend@tok () Term)
(declare-fun FStar.UInt.lemma_zero_extend (Term Term) Term)
(declare-fun FStar.UInt.lemma_zero_extend@tok () Term)
(declare-fun Tm_refine_a2362280d81dbd526f1fa3f771e8faad (Term) Term)
(declare-fun FStar.UInt.lemma_one_extend (Term Term) Term)
(declare-fun FStar.UInt.lemma_one_extend@tok () Term)
(declare-fun FStar.UInt.lemma_lognot_zero_ext (Term Term) Term)
(declare-fun FStar.UInt.lemma_lognot_zero_ext@tok () Term)
(declare-fun FStar.UInt.lemma_lognot_one_ext (Term Term) Term)
(declare-fun FStar.UInt.lemma_lognot_one_ext@tok () Term)
(declare-fun FStar.UInt.lemma_lognot_value_mod (Term Term) Term)
(declare-fun FStar.UInt.lemma_lognot_value_mod@tok () Term)
(declare-fun FStar.UInt.lemma_lognot_value_zero (Term Term) Term)
(declare-fun FStar.UInt.lemma_lognot_value_zero@tok () Term)
(declare-fun FStar.UInt.lemma_one_mod_pow2 (Term) Term)
(declare-fun FStar.UInt.lemma_one_mod_pow2@tok () Term)
(declare-fun FStar.UInt.lemma_lognot_value_nonzero (Term Term) Term)
(declare-fun FStar.UInt.lemma_lognot_value_nonzero@tok () Term)
(declare-fun FStar.UInt.lemma_lognot_value (Term Term) Term)
(declare-fun FStar.UInt.lemma_lognot_value@tok () Term)
(declare-fun FStar.UInt.lemma_minus_eq_zero_sub (Term Term) Term)
(declare-fun FStar.UInt.lemma_minus_eq_zero_sub@tok () Term)
(declare-fun FStar.UInt32.n (Dummy_sort) Term)
(declare-fun FStar.UInt32.t (Dummy_sort) Term)
(declare-fun FStar.UInt32.v (Term) Term)
(declare-fun Tm_arrow_33a06d9a3ec1c77524ab958d37ae1453 () Term)
(declare-fun FStar.UInt32.v@tok () Term)
(declare-fun FStar.UInt32.uint_to_t (Term) Term)
(declare-fun Tm_refine_0ea1fba779ad5718e28476faeef94d56 (Term) Term)
(declare-fun Tm_arrow_3d414099f2a2b7ef3e11b1fc75a28674 () Term)
(declare-fun FStar.UInt32.uint_to_t@tok () Term)
(declare-fun FStar.UInt32.uv_inv (Term) Term)
(declare-fun FStar.UInt32.uv_inv@tok () Term)
(declare-fun FStar.UInt32.vu_inv (Term) Term)
(declare-fun FStar.UInt32.vu_inv@tok () Term)
(declare-fun FStar.UInt32.v_inj (Term Term) Term)
(declare-fun FStar.UInt32.v_inj@tok () Term)
(declare-fun FStar.UInt32.add (Term Term) Term)
(declare-fun Tm_refine_709aff84c75b0fff77dcbf3b529649dd (Term Term) Term)
(declare-fun Tm_arrow_5558b72197031b1efc1a0f8298859a47 () Term)
(declare-fun FStar.UInt32.add@tok () Term)
(declare-fun FStar.UInt32.add_underspec (Term Term) Term)
(declare-fun Tm_refine_57eacb083aaa8f3c6200eef2872d40a9 (Term Term) Term)
(declare-fun Tm_arrow_2aa4a786718187783c350fff98c0276d () Term)
(declare-fun FStar.UInt32.add_underspec@tok () Term)
(declare-fun FStar.UInt32.add_mod (Term Term) Term)
(declare-fun Tm_refine_edc8fb7e909853d860d4ab445ef31337 (Term Term) Term)
(declare-fun Tm_arrow_edbd649f4b12a343efa6ef46e7961890 () Term)
(declare-fun FStar.UInt32.add_mod@tok () Term)
(declare-fun FStar.UInt32.sub (Term Term) Term)
(declare-fun Tm_refine_aa4b3d268075d84252df525db1f85524 (Term Term) Term)
(declare-fun Tm_arrow_ac932fe6124478fcfd5be99d334122e8 () Term)
(declare-fun FStar.UInt32.sub@tok () Term)
(declare-fun FStar.UInt32.sub_underspec (Term Term) Term)
(declare-fun Tm_refine_01926286fa04b785df0ea0da544f2001 (Term Term) Term)
(declare-fun Tm_arrow_a0c271942b2fe7be43f6ae297698cd0b () Term)
(declare-fun FStar.UInt32.sub_underspec@tok () Term)
(declare-fun FStar.UInt32.sub_mod (Term Term) Term)
(declare-fun Tm_refine_ace23c600fbe87b65e5fc333816f74de (Term Term) Term)
(declare-fun Tm_arrow_4a8c4b67b5977a746f1eeda7c310346f () Term)
(declare-fun FStar.UInt32.sub_mod@tok () Term)
(declare-fun FStar.UInt32.mul (Term Term) Term)
(declare-fun Tm_refine_1ccfb21903aa30ace8832f7a4d067d9b (Term Term) Term)
(declare-fun Tm_arrow_f261941925861d12451675f7409141e5 () Term)
(declare-fun FStar.UInt32.mul@tok () Term)
(declare-fun FStar.UInt32.mul_underspec (Term Term) Term)
(declare-fun Tm_refine_cb4ffd3222952e9ac95fc72e8f9913c6 (Term Term) Term)
(declare-fun Tm_arrow_54623a1c9ed03c94751f7d25d259da67 () Term)
(declare-fun FStar.UInt32.mul_underspec@tok () Term)
(declare-fun FStar.UInt32.mul_mod (Term Term) Term)
(declare-fun Tm_refine_8618df86656cf4c2bc98614452120307 (Term Term) Term)
(declare-fun Tm_arrow_b9ba4f3f3f0a1ea3202a99cc97238a0d () Term)
(declare-fun FStar.UInt32.mul_mod@tok () Term)
(declare-fun Tm_refine_0941c9ff95557f2d53bc8f8179ab793e () Term)
(declare-fun FStar.UInt32.div (Term Term) Term)
(declare-fun Tm_refine_74d1ae07763cf2ce5f26906c9df0d2cc (Term Term) Term)
(declare-fun Tm_arrow_61dc5944349c0fd1e6ccd916a51fdfe8 () Term)
(declare-fun FStar.UInt32.div@tok () Term)
(declare-fun FStar.UInt32.rem (Term Term) Term)
(declare-fun Tm_refine_19ac6a052799e5086e9c3eb3a21d54a5 (Term Term) Term)
(declare-fun Tm_arrow_a00bbce6d7d4a1d495177d4f11116643 () Term)
(declare-fun FStar.UInt32.rem@tok () Term)
(declare-fun FStar.UInt32.logand (Term Term) Term)
(declare-fun Tm_refine_7afd5b0ca8e77c7f6870883658e19d63 (Term Term) Term)
(declare-fun Tm_arrow_eff0426e7af51f8d330de4f569da9534 () Term)
(declare-fun FStar.UInt32.logand@tok () Term)
(declare-fun FStar.UInt32.logxor (Term Term) Term)
(declare-fun Tm_refine_2b25e5c3b25bc06167200cbfa5d36b3e (Term Term) Term)
(declare-fun Tm_arrow_07d2eb0ad8dc47fa48b862c24603f207 () Term)
(declare-fun FStar.UInt32.logxor@tok () Term)
(declare-fun FStar.UInt32.logor (Term Term) Term)
(declare-fun Tm_refine_39cb18a1d289e559096741772432b24f (Term Term) Term)
(declare-fun Tm_arrow_f4c0c09b0ba22212b54bc6a7fb947fac () Term)
(declare-fun FStar.UInt32.logor@tok () Term)
(declare-fun FStar.UInt32.lognot (Term) Term)
(declare-fun Tm_refine_d5743ca0a8d5f3ceec748bdcb132b14f (Term) Term)
(declare-fun Tm_arrow_b6548dae703a0f26a4185c51dee5464b () Term)
(declare-fun FStar.UInt32.lognot@tok () Term)
(declare-fun FStar.UInt32.shift_right (Term Term) Term)
(declare-fun Tm_refine_59202c8b625f4b04caf2081d6778d9e7 (Term Term) Term)
(declare-fun Tm_arrow_13c7acc70a3dd34a798f691f2cee4104 () Term)
(declare-fun FStar.UInt32.shift_right@tok () Term)
(declare-fun FStar.UInt32.shift_left (Term Term) Term)
(declare-fun Tm_refine_c642c4de19ebed0b1a9b5f85d40989c0 (Term Term) Term)
(declare-fun Tm_arrow_0709d575329517627fac117b134f4462 () Term)
(declare-fun FStar.UInt32.shift_left@tok () Term)
(declare-fun FStar.UInt32.eq (Term Term) Term)
(declare-fun Tm_arrow_6de09abf9de7977da03ee416904d3039 () Term)
(declare-fun FStar.UInt32.eq@tok () Term)
(declare-fun FStar.UInt32.gt (Term Term) Term)
(declare-fun FStar.UInt32.gt@tok () Term)
(declare-fun FStar.UInt32.gte (Term Term) Term)
(declare-fun FStar.UInt32.gte@tok () Term)
(declare-fun FStar.UInt32.lt (Term Term) Term)
(declare-fun FStar.UInt32.lt@tok () Term)
(declare-fun FStar.UInt32.lte (Term Term) Term)
(declare-fun FStar.UInt32.lte@tok () Term)
(declare-fun FStar.UInt32.minus (Term) Term)
(declare-fun Tm_arrow_c4b70260248a2080020c883b42aa875d () Term)
(declare-fun FStar.UInt32.minus@tok () Term)
(declare-fun FStar.UInt32.n_minus_one (Dummy_sort) Term)
(declare-fun FStar.UInt32.eq_mask (Term Term) Term)
(declare-fun Tm_refine_09d9a189c8c7a3bf3fc28db14e6689cd (Term Term) Term)
(declare-fun Tm_arrow_472ed8b8700983a2f5b417531368b430 () Term)
(declare-fun FStar.UInt32.eq_mask@tok () Term)
(declare-fun FStar.UInt32.lemma_sub_msbs (Term Term) Term)
(declare-fun FStar.UInt32.lemma_sub_msbs@tok () Term)
(declare-fun FStar.UInt32.gte_mask (Term Term) Term)
(declare-fun Tm_refine_83df857506788e94d25c8be97271668a (Term Term) Term)
(declare-fun Tm_arrow_a9de8133430dc71a337d9373e485c8b4 () Term)
(declare-fun FStar.UInt32.gte_mask@tok () Term)
(declare-fun FStar.UInt32.op_Plus_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Plus_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Plus_Question_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Plus_Question_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Plus_Percent_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Plus_Percent_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Subtraction_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Subtraction_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Subtraction_Question_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Subtraction_Question_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Subtraction_Percent_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Subtraction_Percent_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Star_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Star_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Star_Question_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Star_Question_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Star_Percent_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Star_Percent_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Slash_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Slash_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Percent_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Percent_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Hat_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Hat_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Amp_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Amp_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Bar_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Bar_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Less_Less_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Less_Less_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Greater_Greater_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Greater_Greater_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Equals_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Equals_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Greater_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Greater_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Greater_Equals_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Greater_Equals_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Less_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Less_Hat@tok () Term)
(declare-fun FStar.UInt32.op_Less_Equals_Hat (Term Term) Term)
(declare-fun FStar.UInt32.op_Less_Equals_Hat@tok () Term)
(declare-fun FStar.UInt32.to_string (Term) Term)
(declare-fun Tm_arrow_bde0326394a5877aafa8a9dfb4adb318 () Term)
(declare-fun FStar.UInt32.to_string@tok () Term)
(declare-fun FStar.UInt32.to_string_hex (Term) Term)
(declare-fun FStar.UInt32.to_string_hex@tok () Term)
(declare-fun FStar.UInt32.to_string_hex_pad (Term) Term)
(declare-fun FStar.UInt32.to_string_hex_pad@tok () Term)
(declare-fun FStar.UInt32.of_string (Term) Term)
(declare-fun Tm_arrow_564534749090ea8f842e229c3182e762 () Term)
(declare-fun FStar.UInt32.of_string@tok () Term)
(declare-fun FStar.UInt32.__uint_to_t (Term) Term)
(declare-fun Tm_arrow_67ad727682511dd92ce30d8d55620a8e () Term)
(declare-fun FStar.UInt32.__uint_to_t@tok () Term)
(declare-fun FStar.Int.pow2_values (Term) Term)
(declare-fun FStar.Int.pow2_values@tok () Term)
(declare-fun FStar.Int.max_int (Term) Term)
(declare-fun Tm_arrow_08643d78e274903c12e67630bc27e2ff () Term)
(declare-fun FStar.Int.max_int@tok () Term)
(declare-fun FStar.Int.min_int (Term) Term)
(declare-fun FStar.Int.min_int@tok () Term)
(declare-fun FStar.Int.fits (Term Term) Term)
(declare-fun Tm_arrow_0cc3774076f9b140636f49c6b11206ea () Term)
(declare-fun FStar.Int.fits@tok () Term)
(declare-fun FStar.Int.size (Term Term) Term)
(declare-fun Tm_arrow_7146999d8e685cab1fa5e885783d4ad4 () Term)
(declare-fun FStar.Int.size@tok () Term)
(declare-fun FStar.Int.int_t (Term) Term)
(declare-fun Tm_arrow_e214da407f361f6aa0144228799685d1 () Term)
(declare-fun FStar.Int.int_t@tok () Term)
(declare-fun Tm_refine_c156ecc6eab05d1687a383ef171435eb (Term) Term)
(declare-fun FStar.Int.op_Slash (Term Term) Term)
(declare-fun Tm_arrow_2c2bb042329e2e757b97305bbc29732f () Term)
(declare-fun FStar.Int.op_Slash@tok () Term)
(declare-fun Tm_refine_6f861454c283cab7fef581bd2f2d57c5 () Term)
(declare-fun FStar.Int.op_At_Percent (Term Term) Term)
(declare-fun Tm_arrow_3896a5194433b12d044f39d7e0b679dc () Term)
(declare-fun FStar.Int.op_At_Percent@tok () Term)
(declare-fun FStar.Int.zero (Term) Term)
(declare-fun Tm_arrow_cb14a53d8f51c2a1b5f2e44ec1c55960 () Term)
(declare-fun FStar.Int.zero@tok () Term)
(declare-fun Tm_refine_cf74cf5c1e7834b84db9cc7ebce886a3 (Term) Term)
(declare-fun FStar.Int.pow2_n (Term Term) Term)
(declare-fun Tm_arrow_42409e57c55f2a2d0836412885dba252 () Term)
(declare-fun FStar.Int.pow2_n@tok () Term)
(declare-fun Tm_refine_4fe9a5df27ca5859eef8add9fc6819fb () Term)
(declare-fun FStar.Int.pow2_minus_one (Term Term) Term)
(declare-fun Tm_arrow_81be2ee4e7a1e46c9526aae5e34753cd () Term)
(declare-fun FStar.Int.pow2_minus_one@tok () Term)
(declare-fun FStar.Int.one (Term) Term)
(declare-fun Tm_arrow_e2450f3af7bd5b3af47241cdfb1c2db6 () Term)
(declare-fun FStar.Int.one@tok () Term)
(declare-fun FStar.Int.ones (Term) Term)
(declare-fun FStar.Int.ones@tok () Term)
(declare-fun FStar.Int.incr (Term Term) Term)
(declare-fun Tm_refine_dcbbaccec0a9dbd3681a14f97d5258f4 (Term) Term)
(declare-fun Tm_arrow_6a595e67db857b4e04ea431fd250db84 () Term)
(declare-fun FStar.Int.incr@tok () Term)
(declare-fun FStar.Int.decr (Term Term) Term)
(declare-fun Tm_arrow_9932ad821a47221f73f30476224722b3 () Term)
(declare-fun FStar.Int.decr@tok () Term)
(declare-fun FStar.Int.incr_underspec (Term Term) Term)
(declare-fun Tm_refine_d4a5cafc6f5a0f55c9100191cf1c919d (Term Term) Term)
(declare-fun Tm_arrow_7da78e36e44c2863a3eea73f058069f8 () Term)
(declare-fun FStar.Int.incr_underspec@tok () Term)
(declare-fun FStar.Int.decr_underspec (Term Term) Term)
(declare-fun Tm_refine_fe0f51cc65c8d431b43406ae8d7f7c7c (Term Term) Term)
(declare-fun Tm_arrow_f8ffe0a78d6e5b3dac71656ff7d0fc5a () Term)
(declare-fun FStar.Int.decr_underspec@tok () Term)
(declare-fun FStar.Int.incr_mod (Term Term) Term)
(declare-fun Tm_arrow_d4f13608b577247ae2db20b2380b2245 () Term)
(declare-fun FStar.Int.incr_mod@tok () Term)
(declare-fun FStar.Int.decr_mod (Term Term) Term)
(declare-fun FStar.Int.decr_mod@tok () Term)
(declare-fun FStar.Int.add (Term Term Term) Term)
(declare-fun Tm_arrow_cbeba074d8c79f94519373cfde34463f () Term)
(declare-fun FStar.Int.add@tok () Term)
(declare-fun FStar.Int.add_underspec (Term Term Term) Term)
(declare-fun Tm_refine_7bd0fa444597c4ebd4664ae6a997600a (Term Term Term) Term)
(declare-fun Tm_arrow_5c387c335d6e6391b1c81e806fbecc03 () Term)
(declare-fun FStar.Int.add_underspec@tok () Term)
(declare-fun FStar.Int.add_mod (Term Term Term) Term)
(declare-fun Tm_arrow_18a34a79f38620fd3e207686d0d0d13e () Term)
(declare-fun FStar.Int.add_mod@tok () Term)
(declare-fun FStar.Int.sub (Term Term Term) Term)
(declare-fun Tm_arrow_d5e0171e91c640344190e488b3c3a2c8 () Term)
(declare-fun FStar.Int.sub@tok () Term)
(declare-fun FStar.Int.sub_underspec (Term Term Term) Term)
(declare-fun Tm_refine_b4c298e8d79868eb1409c37bf0adba2a (Term Term Term) Term)
(declare-fun Tm_arrow_f42d521160539850f1993d34e8fc87c9 () Term)
(declare-fun FStar.Int.sub_underspec@tok () Term)
(declare-fun FStar.Int.sub_mod (Term Term Term) Term)
(declare-fun FStar.Int.sub_mod@tok () Term)
(declare-fun FStar.Int.mul (Term Term Term) Term)
(declare-fun Tm_arrow_59f7075a28af88a37cc8d77ed622794d () Term)
(declare-fun FStar.Int.mul@tok () Term)
(declare-fun FStar.Int.mul_underspec (Term Term Term) Term)
(declare-fun Tm_refine_e0808d72dd3bcd98cbd025f677f0b52b (Term Term Term) Term)
(declare-fun Tm_arrow_c3825549d78bf3b47b1fc19cca6efb0a () Term)
(declare-fun FStar.Int.mul_underspec@tok () Term)
(declare-fun FStar.Int.mul_mod (Term Term Term) Term)
(declare-fun FStar.Int.mul_mod@tok () Term)
(declare-fun Tm_refine_83ac8ca0eae25a164d9f9c0d728fbff9 (Term) Term)
(declare-fun FStar.Int.div (Term Term Term) Term)
(declare-fun Tm_refine_70714641831ff35b8943074d85fc7551 (Term Term Term) Term)
(declare-fun Tm_arrow_59a1c11be2fac6a30b2acdbfbf1eda90 () Term)
(declare-fun FStar.Int.div@tok () Term)
(declare-fun FStar.Int.div_underspec (Term Term Term) Term)
(declare-fun Tm_refine_af4cbfe65dbbaeb55593b4625c2c5048 (Term Term Term) Term)
(declare-fun Tm_arrow_0f80d94a97a6b0663b1915a2060513cc () Term)
(declare-fun FStar.Int.div_underspec@tok () Term)
(declare-fun FStar.Int.div_size (Term Term Term) Term)
(declare-fun FStar.Int.div_size@tok () Term)
(declare-fun Tm_refine_8506aeb4dd19f2072121aa1df21f1bb2 (Term) Term)
(declare-fun FStar.Int.udiv (Term Term Term) Term)
(declare-fun Tm_arrow_82b3f90612854f7c40f1bdc10bed000c () Term)
(declare-fun FStar.Int.udiv@tok () Term)
(declare-fun FStar.Int.mod (Term Term Term) Term)
(declare-fun Tm_arrow_d683be1bb1ee9de66cbbf189f68ec0e5 () Term)
(declare-fun FStar.Int.mod@tok () Term)
(declare-fun FStar.Int.eq (Term Term Term) Term)
(declare-fun Tm_arrow_8a34ac1c572f737da4642094a6f8e213 () Term)
(declare-fun FStar.Int.eq@tok () Term)
(declare-fun FStar.Int.gt (Term Term Term) Term)
(declare-fun FStar.Int.gt@tok () Term)
(declare-fun FStar.Int.gte (Term Term Term) Term)
(declare-fun FStar.Int.gte@tok () Term)
(declare-fun FStar.Int.lt (Term Term Term) Term)
(declare-fun FStar.Int.lt@tok () Term)
(declare-fun FStar.Int.lte (Term Term Term) Term)
(declare-fun FStar.Int.lte@tok () Term)
(declare-fun FStar.Int.to_uint (Term Term) Term)
(declare-fun Tm_arrow_3e678eb9a841c4f9b41c85aeb802f0f1 () Term)
(declare-fun FStar.Int.to_uint@tok () Term)
(declare-fun FStar.Int.from_uint (Term Term) Term)
(declare-fun Tm_arrow_c31ea52198bde53869920a7d3bc4602c () Term)
(declare-fun FStar.Int.from_uint@tok () Term)
(declare-fun FStar.Int.to_uint_injective (Term Term) Term)
(declare-fun FStar.Int.to_uint_injective@tok () Term)
(declare-fun FStar.Int.to_int_t (Term Term) Term)
(declare-fun Tm_arrow_4814b4e3e94f328f65fd76f9d65943d4 () Term)
(declare-fun FStar.Int.to_int_t@tok () Term)
(declare-fun FStar.Int.to_vec (Term Term) Term)
(declare-fun Tm_arrow_45e09970c9488f8db22355eb21b4b697 () Term)
(declare-fun FStar.Int.to_vec@tok () Term)
(declare-fun FStar.Int.from_vec (Term Term) Term)
(declare-fun Tm_arrow_82852c1e83761b67bc6fcca3c7b80d79 () Term)
(declare-fun FStar.Int.from_vec@tok () Term)
(declare-fun FStar.Int.to_vec_lemma_1 (Term Term Term) Term)
(declare-fun FStar.Int.to_vec_lemma_1@tok () Term)
(declare-fun FStar.Int.to_vec_lemma_2 (Term Term Term) Term)
(declare-fun FStar.Int.to_vec_lemma_2@tok () Term)
(declare-fun FStar.Int.inverse_aux (Term Term Term) Term)
(declare-fun FStar.Int.inverse_aux@tok () Term)
(declare-fun FStar.Int.inverse_vec_lemma (Term Term) Term)
(declare-fun FStar.Int.inverse_vec_lemma@tok () Term)
(declare-fun FStar.Int.inverse_num_lemma (Term Term) Term)
(declare-fun FStar.Int.inverse_num_lemma@tok () Term)
(declare-fun FStar.Int.from_vec_lemma_1 (Term Term Term) Term)
(declare-fun FStar.Int.from_vec_lemma_1@tok () Term)
(declare-fun FStar.Int.from_vec_lemma_2 (Term Term Term) Term)
(declare-fun FStar.Int.from_vec_lemma_2@tok () Term)
(declare-fun FStar.Int.zero_to_vec_lemma (Term Term) Term)
(declare-fun FStar.Int.zero_to_vec_lemma@tok () Term)
(declare-fun FStar.Int.zero_from_vec_lemma (Term) Term)
(declare-fun FStar.Int.zero_from_vec_lemma@tok () Term)
(declare-fun FStar.Int.one_to_vec_lemma (Term Term) Term)
(declare-fun FStar.Int.one_to_vec_lemma@tok () Term)
(declare-fun FStar.Int.pow2_to_vec_lemma (Term Term Term) Term)
(declare-fun FStar.Int.pow2_to_vec_lemma@tok () Term)
(declare-fun FStar.Int.pow2_from_vec_lemma (Term Term) Term)
(declare-fun FStar.Int.pow2_from_vec_lemma@tok () Term)
(declare-fun Tm_refine_b555e04c50662c1d4e406318a3bd8d8d (Term) Term)
(declare-fun FStar.Int.ones_to_vec_lemma (Term Term) Term)
(declare-fun FStar.Int.ones_to_vec_lemma@tok () Term)
(declare-fun FStar.Int.ones_from_vec_lemma (Term) Term)
(declare-fun FStar.Int.ones_from_vec_lemma@tok () Term)
(declare-fun FStar.Int.nth (Term Term Term) Term)
(declare-fun Tm_arrow_4019956ce842311d665dc67ac9fd8b34 () Term)
(declare-fun FStar.Int.nth@tok () Term)
(declare-fun FStar.Int.nth_lemma (Term Term Term) Term)
(declare-fun FStar.Int.nth_lemma@tok () Term)
(declare-fun FStar.Int.zero_nth_lemma (Term Term) Term)
(declare-fun FStar.Int.zero_nth_lemma@tok () Term)
(declare-fun FStar.Int.one_nth_lemma (Term Term) Term)
(declare-fun FStar.Int.one_nth_lemma@tok () Term)
(declare-fun FStar.Int.ones_nth_lemma (Term Term) Term)
(declare-fun FStar.Int.ones_nth_lemma@tok () Term)
(declare-fun FStar.Int.logand (Term Term Term) Term)
(declare-fun FStar.Int.logand@tok () Term)
(declare-fun FStar.Int.logxor (Term Term Term) Term)
(declare-fun FStar.Int.logxor@tok () Term)
(declare-fun FStar.Int.logor (Term Term Term) Term)
(declare-fun FStar.Int.logor@tok () Term)
(declare-fun FStar.Int.lognot (Term Term) Term)
(declare-fun FStar.Int.lognot@tok () Term)
(declare-fun FStar.Int.logand_definition (Term Term Term Term) Term)
(declare-fun FStar.Int.logand_definition@tok () Term)
(declare-fun FStar.Int.logxor_definition (Term Term Term Term) Term)
(declare-fun FStar.Int.logxor_definition@tok () Term)
(declare-fun FStar.Int.logor_definition (Term Term Term Term) Term)
(declare-fun FStar.Int.logor_definition@tok () Term)
(declare-fun FStar.Int.lognot_definition (Term Term Term) Term)
(declare-fun FStar.Int.lognot_definition@tok () Term)
(declare-fun FStar.Int.minus (Term Term) Term)
(declare-fun Tm_arrow_04cc0f7bdc56c0cf812e46ad027a361f () Term)
(declare-fun FStar.Int.minus@tok () Term)
(declare-fun FStar.Int.logand_commutative (Term Term Term) Term)
(declare-fun FStar.Int.logand_commutative@tok () Term)
(declare-fun FStar.Int.logand_associative (Term Term Term Term) Term)
(declare-fun FStar.Int.logand_associative@tok () Term)
(declare-fun FStar.Int.logand_self (Term Term) Term)
(declare-fun FStar.Int.logand_self@tok () Term)
(declare-fun FStar.Int.logand_lemma_1 (Term Term) Term)
(declare-fun FStar.Int.logand_lemma_1@tok () Term)
(declare-fun FStar.Int.logand_lemma_2 (Term Term) Term)
(declare-fun FStar.Int.logand_lemma_2@tok () Term)
(declare-fun FStar.Int.sign_bit_negative (Term Term) Term)
(declare-fun FStar.Int.sign_bit_negative@tok () Term)
(declare-fun FStar.Int.sign_bit_positive (Term Term) Term)
(declare-fun FStar.Int.sign_bit_positive@tok () Term)
(declare-fun FStar.Int.logand_pos_le (Term Term Term) Term)
(declare-fun FStar.Int.logand_pos_le@tok () Term)
(declare-fun FStar.Int.logand_pow2_minus_one (Term Term Term) Term)
(declare-fun FStar.Int.logand_pow2_minus_one@tok () Term)
(declare-fun FStar.Int.logand_max (Term Term) Term)
(declare-fun FStar.Int.logand_max@tok () Term)
(declare-fun FStar.Int.logxor_commutative (Term Term Term) Term)
(declare-fun FStar.Int.logxor_commutative@tok () Term)
(declare-fun FStar.Int.logxor_associative (Term Term Term Term) Term)
(declare-fun FStar.Int.logxor_associative@tok () Term)
(declare-fun FStar.Int.logxor_self (Term Term) Term)
(declare-fun FStar.Int.logxor_self@tok () Term)
(declare-fun FStar.Int.logxor_lemma_1 (Term Term) Term)
(declare-fun FStar.Int.logxor_lemma_1@tok () Term)
(declare-fun FStar.Int.logxor_lemma_2 (Term Term) Term)
(declare-fun FStar.Int.logxor_lemma_2@tok () Term)
(declare-fun FStar.Int.logxor_inv (Term Term Term) Term)
(declare-fun FStar.Int.logxor_inv@tok () Term)
(declare-fun FStar.Int.logxor_neq_nonzero (Term Term Term) Term)
(declare-fun FStar.Int.logxor_neq_nonzero@tok () Term)
(declare-fun FStar.Int.lognot_negative (Term Term) Term)
(declare-fun FStar.Int.lognot_negative@tok () Term)
(declare-fun Tm_refine_f9945c9851ba67924155357268d171eb (Term) Term)
(declare-fun FStar.Int.shift_left (Term Term Term) Term)
(declare-fun Tm_arrow_855fa52a66bb6d9af33de248be8e1a9a () Term)
(declare-fun FStar.Int.shift_left@tok () Term)
(declare-fun FStar.Int.shift_right (Term Term Term) Term)
(declare-fun FStar.Int.shift_right@tok () Term)
(declare-fun FStar.Int.shift_arithmetic_right (Term Term Term) Term)
(declare-fun Tm_arrow_f565aa7121c91c2f8ce9f41727c7b7ca () Term)
(declare-fun FStar.Int.shift_arithmetic_right@tok () Term)
(declare-fun FStar.Int.shift_left_lemma_1 (Term Term Term Term) Term)
(declare-fun FStar.Int.shift_left_lemma_1@tok () Term)
(declare-fun FStar.Int.shift_left_lemma_2 (Term Term Term Term) Term)
(declare-fun FStar.Int.shift_left_lemma_2@tok () Term)
(declare-fun FStar.Int.shift_left_value_lemma (Term Term Term) Term)
(declare-fun FStar.Int.shift_left_value_lemma@tok () Term)
(declare-fun FStar.Int.shift_right_lemma_1 (Term Term Term Term) Term)
(declare-fun FStar.Int.shift_right_lemma_1@tok () Term)
(declare-fun FStar.Int.shift_right_lemma_2 (Term Term Term Term) Term)
(declare-fun FStar.Int.shift_right_lemma_2@tok () Term)
(declare-fun FStar.Int.shift_arithmetic_right_lemma_1 (Term Term Term Term) Term)
(declare-fun FStar.Int.shift_arithmetic_right_lemma_1@tok () Term)
(declare-fun FStar.Int.shift_arithmetic_right_lemma_2 (Term Term Term Term) Term)
(declare-fun FStar.Int.shift_arithmetic_right_lemma_2@tok () Term)
(declare-fun FStar.Int64.n (Dummy_sort) Term)
(declare-fun FStar.Int64.t (Dummy_sort) Term)
(declare-fun FStar.Int64.v (Term) Term)
(declare-fun Tm_arrow_50f88cfd3e9adc79ecaea80d24eaf881 () Term)
(declare-fun FStar.Int64.v@tok () Term)
(declare-fun FStar.Int64.int_to_t (Term) Term)
(declare-fun Tm_refine_20b9727bfb368ca1ad6e64242df43812 (Term) Term)
(declare-fun Tm_arrow_9aacd4c51d388dea7f57e52893b15954 () Term)
(declare-fun FStar.Int64.int_to_t@tok () Term)
(declare-fun FStar.Int64.uv_inv (Term) Term)
(declare-fun FStar.Int64.uv_inv@tok () Term)
(declare-fun FStar.Int64.vu_inv (Term) Term)
(declare-fun FStar.Int64.vu_inv@tok () Term)
(declare-fun FStar.Int64.v_inj (Term Term) Term)
(declare-fun FStar.Int64.v_inj@tok () Term)
(declare-fun FStar.Int64.add (Term Term) Term)
(declare-fun Tm_refine_cff33b8d55d1ab8b8408d67ea53401d3 (Term Term) Term)
(declare-fun Tm_arrow_ed83283a33f866113fbd25895b9b8d2d () Term)
(declare-fun FStar.Int64.add@tok () Term)
(declare-fun FStar.Int64.sub (Term Term) Term)
(declare-fun Tm_refine_1fc9ac3a217b8d21cc2c0d75816a6c74 (Term Term) Term)
(declare-fun Tm_arrow_4542deddf7766ec0693cc853fcf4efcd () Term)
(declare-fun FStar.Int64.sub@tok () Term)
(declare-fun FStar.Int64.mul (Term Term) Term)
(declare-fun Tm_refine_37c0725a54ced297933377446e859b55 (Term Term) Term)
(declare-fun Tm_arrow_42cc16185f0281f66fd3c38cb2ce966d () Term)
(declare-fun FStar.Int64.mul@tok () Term)
(declare-fun Tm_refine_628f456abb4ff7ec3d24a18ea94ac133 () Term)
(declare-fun FStar.Int64.div (Term Term) Term)
(declare-fun Tm_refine_a5642a7a89d263d94fde9c889b795c19 (Term Term) Term)
(declare-fun Tm_arrow_c45424883a6239e4d5ed622479d0e2c2 () Term)
(declare-fun FStar.Int64.div@tok () Term)
(declare-fun FStar.Int64.rem (Term Term) Term)
(declare-fun Tm_refine_1d7b4ef1b74a345016b65edcb3a0b11c (Term Term) Term)
(declare-fun Tm_arrow_b094b2204766bbf210faf3515dac5edb () Term)
(declare-fun FStar.Int64.rem@tok () Term)
(declare-fun FStar.Int64.logand (Term Term) Term)
(declare-fun Tm_refine_0fe072140b6cab185956764b6b2b5100 (Term Term) Term)
(declare-fun Tm_arrow_0f24127e58cdc78e646ac8e9ce1e220b () Term)
(declare-fun FStar.Int64.logand@tok () Term)
(declare-fun FStar.Int64.logxor (Term Term) Term)
(declare-fun Tm_refine_e2357e15859202c1b74739b99f268c77 (Term Term) Term)
(declare-fun Tm_arrow_2b608ce5a03451a1a703bfa96c9de841 () Term)
(declare-fun FStar.Int64.logxor@tok () Term)
(declare-fun FStar.Int64.logor (Term Term) Term)
(declare-fun Tm_refine_0d502fb451739d594ffb2dde19acb8c7 (Term Term) Term)
(declare-fun Tm_arrow_f2d6223e577fd2c0dc4882b4e94da2d1 () Term)
(declare-fun FStar.Int64.logor@tok () Term)
(declare-fun FStar.Int64.lognot (Term) Term)
(declare-fun Tm_refine_09cdf91263ea29addfb21cf90d99d38a (Term) Term)
(declare-fun Tm_arrow_d446e9a4954555b21a6b121387f388f7 () Term)
(declare-fun FStar.Int64.lognot@tok () Term)
(declare-fun FStar.Int64.shift_right (Term Term) Term)
(declare-fun Tm_refine_8a1048adcc7173ce6ba343120c56fc30 (Term Term) Term)
(declare-fun Tm_arrow_460456e909b6fc3f1db6426fd53c8cb8 () Term)
(declare-fun FStar.Int64.shift_right@tok () Term)
(declare-fun FStar.Int64.shift_left (Term Term) Term)
(declare-fun Tm_refine_36ce14007f3fdeef8a04301aa925b2cd (Term Term) Term)
(declare-fun Tm_arrow_af31e9f4e4b00e004d480198352f97f7 () Term)
(declare-fun FStar.Int64.shift_left@tok () Term)
(declare-fun FStar.Int64.shift_arithmetic_right (Term Term) Term)
(declare-fun Tm_refine_0edc24855031dc65d4a9dbb9e8e84d13 (Term Term) Term)
(declare-fun Tm_arrow_b8898305f4bc94ede71031fc934596bd () Term)
(declare-fun FStar.Int64.shift_arithmetic_right@tok () Term)
(declare-fun FStar.Int64.eq (Term Term) Term)
(declare-fun Tm_arrow_da34eb90e0110da92e0998be30c252a6 () Term)
(declare-fun FStar.Int64.eq@tok () Term)
(declare-fun FStar.Int64.gt (Term Term) Term)
(declare-fun FStar.Int64.gt@tok () Term)
(declare-fun FStar.Int64.gte (Term Term) Term)
(declare-fun FStar.Int64.gte@tok () Term)
(declare-fun FStar.Int64.lt (Term Term) Term)
(declare-fun FStar.Int64.lt@tok () Term)
(declare-fun FStar.Int64.lte (Term Term) Term)
(declare-fun FStar.Int64.lte@tok () Term)
(declare-fun FStar.Int64.op_Plus_Hat (Term Term) Term)
(declare-fun FStar.Int64.op_Plus_Hat@tok () Term)
(declare-fun FStar.Int64.op_Subtraction_Hat (Term Term) Term)
(declare-fun FStar.Int64.op_Subtraction_Hat@tok () Term)
(declare-fun FStar.Int64.op_Star_Hat (Term Term) Term)
(declare-fun FStar.Int64.op_Star_Hat@tok () Term)
(declare-fun FStar.Int64.op_Slash_Hat (Term Term) Term)
(declare-fun FStar.Int64.op_Slash_Hat@tok () Term)
(declare-fun FStar.Int64.op_Percent_Hat (Term Term) Term)
(declare-fun FStar.Int64.op_Percent_Hat@tok () Term)
(declare-fun FStar.Int64.op_Hat_Hat (Term Term) Term)
(declare-fun FStar.Int64.op_Hat_Hat@tok () Term)
(declare-fun FStar.Int64.op_Amp_Hat (Term Term) Term)
(declare-fun FStar.Int64.op_Amp_Hat@tok () Term)
(declare-fun FStar.Int64.op_Bar_Hat (Term Term) Term)
(declare-fun FStar.Int64.op_Bar_Hat@tok () Term)
(declare-fun FStar.Int64.op_Less_Less_Hat (Term Term) Term)
(declare-fun FStar.Int64.op_Less_Less_Hat@tok () Term)
(declare-fun FStar.Int64.op_Greater_Greater_Hat (Term Term) Term)
(declare-fun FStar.Int64.op_Greater_Greater_Hat@tok () Term)
(declare-fun FStar.Int64.op_Greater_Greater_Greater_Hat (Term Term) Term)
(declare-fun FStar.Int64.op_Greater_Greater_Greater_Hat@tok () Term)
(declare-fun FStar.Int64.op_Equals_Hat (Term Term) Term)
(declare-fun FStar.Int64.op_Equals_Hat@tok () Term)
(declare-fun FStar.Int64.op_Greater_Hat (Term Term) Term)
(declare-fun FStar.Int64.op_Greater_Hat@tok () Term)
(declare-fun FStar.Int64.op_Greater_Equals_Hat (Term Term) Term)
(declare-fun FStar.Int64.op_Greater_Equals_Hat@tok () Term)
(declare-fun FStar.Int64.op_Less_Hat (Term Term) Term)
(declare-fun FStar.Int64.op_Less_Hat@tok () Term)
(declare-fun FStar.Int64.op_Less_Equals_Hat (Term Term) Term)
(declare-fun FStar.Int64.op_Less_Equals_Hat@tok () Term)
(declare-fun Tm_refine_09e0d51b082ead211eb10bd8852b815a () Term)
(declare-fun FStar.Int64.ct_abs (Term) Term)
(declare-fun Tm_refine_7fa122cebddb86b486e24aaafbe2ddf4 (Term) Term)
(declare-fun Tm_arrow_160d8d6d739ab631daa29edaa7550b74 () Term)
(declare-fun FStar.Int64.ct_abs@tok () Term)
(declare-fun FStar.Int64.to_string (Term) Term)
(declare-fun Tm_arrow_30afe33eb03c92a72e5102bbb0499845 () Term)
(declare-fun FStar.Int64.to_string@tok () Term)
(declare-fun FStar.Int64.of_string (Term) Term)
(declare-fun Tm_arrow_03a93f86f13501f75297c43a6aba4fd8 () Term)
(declare-fun FStar.Int64.of_string@tok () Term)
(declare-fun FStar.Int64.__int_to_t (Term) Term)
(declare-fun Tm_arrow_737f306dc84ebb26e78501a84ed111e0 () Term)
(declare-fun FStar.Int64.__int_to_t@tok () Term)
(declare-fun Wasm.Numeric_error.e_IntegerDivideByZero (Term) Term)
(declare-fun Tm_arrow_9ee1114e3db6c73824148eb1da632bfc () Term)
(declare-fun Wasm.Numeric_error.e_IntegerDivideByZero@tok () Term)
(declare-fun Wasm.Numeric_error.e_IntegerOverflow (Term) Term)
(declare-fun Wasm.Numeric_error.e_IntegerOverflow@tok () Term)
(declare-fun FStar.UInt64.n (Dummy_sort) Term)
(declare-fun FStar.UInt64.t (Dummy_sort) Term)
(declare-fun FStar.UInt64.v (Term) Term)
(declare-fun Tm_arrow_b1dc77edd47f50a79ef19c45877be87f () Term)
(declare-fun FStar.UInt64.v@tok () Term)
(declare-fun FStar.UInt64.uint_to_t (Term) Term)
(declare-fun Tm_refine_48c1b5b4c02ad49f0760911a9d4b1fb4 (Term) Term)
(declare-fun Tm_arrow_0a7b550d26d1f7783c7c5e1990842388 () Term)
(declare-fun FStar.UInt64.uint_to_t@tok () Term)
(declare-fun FStar.UInt64.uv_inv (Term) Term)
(declare-fun FStar.UInt64.uv_inv@tok () Term)
(declare-fun FStar.UInt64.vu_inv (Term) Term)
(declare-fun FStar.UInt64.vu_inv@tok () Term)
(declare-fun FStar.UInt64.v_inj (Term Term) Term)
(declare-fun FStar.UInt64.v_inj@tok () Term)
(declare-fun FStar.UInt64.add (Term Term) Term)
(declare-fun Tm_refine_bc552b2c624e2add758b3ac761c0c563 (Term Term) Term)
(declare-fun Tm_arrow_be2b56e86970b1435b564896876df5af () Term)
(declare-fun FStar.UInt64.add@tok () Term)
(declare-fun FStar.UInt64.add_underspec (Term Term) Term)
(declare-fun Tm_refine_453fa410c3a31a8a972a89b516aee90f (Term Term) Term)
(declare-fun Tm_arrow_7f1e1876505bc4561e28a0354c79be94 () Term)
(declare-fun FStar.UInt64.add_underspec@tok () Term)
(declare-fun FStar.UInt64.add_mod (Term Term) Term)
(declare-fun Tm_refine_2d98f2f5de361516da3dbd9f556509e2 (Term Term) Term)
(declare-fun Tm_arrow_05395bb977e74723e0c89b35f3db81b1 () Term)
(declare-fun FStar.UInt64.add_mod@tok () Term)
(declare-fun FStar.UInt64.sub (Term Term) Term)
(declare-fun Tm_refine_4db8ba22c4504a66577a2159dcc603cd (Term Term) Term)
(declare-fun Tm_arrow_a3c2957810330952c9cd0dc2ef7e5dc1 () Term)
(declare-fun FStar.UInt64.sub@tok () Term)
(declare-fun FStar.UInt64.sub_underspec (Term Term) Term)
(declare-fun Tm_refine_dd3e2dd01aa446ac6616a71fc757406a (Term Term) Term)
(declare-fun Tm_arrow_87b0e65776a09c1fe9734c4195b4bf84 () Term)
(declare-fun FStar.UInt64.sub_underspec@tok () Term)
(declare-fun FStar.UInt64.sub_mod (Term Term) Term)
(declare-fun Tm_refine_cb95789552ffa46c14f21af13ceaad6b (Term Term) Term)
(declare-fun Tm_arrow_7f617113bda01094490f58e39564f398 () Term)
(declare-fun FStar.UInt64.sub_mod@tok () Term)
(declare-fun FStar.UInt64.mul (Term Term) Term)
(declare-fun Tm_refine_2ac8bed7a6398f84bccb91bd4fed7136 (Term Term) Term)
(declare-fun Tm_arrow_ea17845c6f4791bda61fffc74c40da51 () Term)
(declare-fun FStar.UInt64.mul@tok () Term)
(declare-fun FStar.UInt64.mul_underspec (Term Term) Term)
(declare-fun Tm_refine_b936d941ba7bf51db4d781f9af09acd3 (Term Term) Term)
(declare-fun Tm_arrow_596709ad66a9eee3dc6ef040a813e08e () Term)
(declare-fun FStar.UInt64.mul_underspec@tok () Term)
(declare-fun FStar.UInt64.mul_mod (Term Term) Term)
(declare-fun Tm_refine_fce3a2e2e29645212301d89fcebc4e29 (Term Term) Term)
(declare-fun Tm_arrow_a58b92e22a54f064a91938f5890f3d26 () Term)
(declare-fun FStar.UInt64.mul_mod@tok () Term)
(declare-fun Tm_refine_94d25b6e0041d543efd58300424ecc37 () Term)
(declare-fun FStar.UInt64.div (Term Term) Term)
(declare-fun Tm_refine_2905e4cd1a81244ae97dc5c62563e060 (Term Term) Term)
(declare-fun Tm_arrow_362fd430a2a36692a10db610ce347491 () Term)
(declare-fun FStar.UInt64.div@tok () Term)
(declare-fun FStar.UInt64.rem (Term Term) Term)
(declare-fun Tm_refine_06f2bf4950bb76094f7b7f43daea2409 (Term Term) Term)
(declare-fun Tm_arrow_53bf9c10f719f234f584267623ec2e33 () Term)
(declare-fun FStar.UInt64.rem@tok () Term)
(declare-fun FStar.UInt64.logand (Term Term) Term)
(declare-fun Tm_refine_4a73301fbc41c8e432f23b6aef69a5eb (Term Term) Term)
(declare-fun Tm_arrow_cbca1d1a87f201e6ff2f61643983b2f3 () Term)
(declare-fun FStar.UInt64.logand@tok () Term)
(declare-fun FStar.UInt64.logxor (Term Term) Term)
(declare-fun Tm_refine_b87f471e80e3c2bc077d38b7026cfcf6 (Term Term) Term)
(declare-fun Tm_arrow_7a0892a26110d0c3bb8d5540c3f9134f () Term)
(declare-fun FStar.UInt64.logxor@tok () Term)
(declare-fun FStar.UInt64.logor (Term Term) Term)
(declare-fun Tm_refine_6913af387cf2f30da0961ac60666f00f (Term Term) Term)
(declare-fun Tm_arrow_88959be20cb195d8ed8c043810621aa5 () Term)
(declare-fun FStar.UInt64.logor@tok () Term)
(declare-fun FStar.UInt64.lognot (Term) Term)
(declare-fun Tm_refine_d294ad5c8783c9adf54e87f8b3d910d1 (Term) Term)
(declare-fun Tm_arrow_5830582bc087a4c4cac6e2d02503540d () Term)
(declare-fun FStar.UInt64.lognot@tok () Term)
(declare-fun FStar.UInt64.shift_right (Term Term) Term)
(declare-fun Tm_refine_0556f625b89f1ac99fd21e82e26fe9e0 (Term Term) Term)
(declare-fun Tm_arrow_54172cd4c03b90333401dcf08f131f18 () Term)
(declare-fun FStar.UInt64.shift_right@tok () Term)
(declare-fun FStar.UInt64.shift_left (Term Term) Term)
(declare-fun Tm_refine_ebf0af240d826e12ec6c1570ad81631c (Term Term) Term)
(declare-fun Tm_arrow_f0e726dc2efef2bba1cad7b7437673ab () Term)
(declare-fun FStar.UInt64.shift_left@tok () Term)
(declare-fun FStar.UInt64.eq (Term Term) Term)
(declare-fun Tm_arrow_598288f3403164a95ff09472c7ec0bb4 () Term)
(declare-fun FStar.UInt64.eq@tok () Term)
(declare-fun FStar.UInt64.gt (Term Term) Term)
(declare-fun FStar.UInt64.gt@tok () Term)
(declare-fun FStar.UInt64.gte (Term Term) Term)
(declare-fun FStar.UInt64.gte@tok () Term)
(declare-fun FStar.UInt64.lt (Term Term) Term)
(declare-fun FStar.UInt64.lt@tok () Term)
(declare-fun FStar.UInt64.lte (Term Term) Term)
(declare-fun FStar.UInt64.lte@tok () Term)
(declare-fun FStar.UInt64.minus (Term) Term)
(declare-fun Tm_arrow_1b7783661e16e9c2a9894c974bc97032 () Term)
(declare-fun FStar.UInt64.minus@tok () Term)
(declare-fun FStar.UInt64.n_minus_one (Dummy_sort) Term)
(declare-fun FStar.UInt64.eq_mask (Term Term) Term)
(declare-fun Tm_refine_30c561286d2c8600e271922aaab003cf (Term Term) Term)
(declare-fun Tm_arrow_dc89781bb433a3a499ce3ed25df276ee () Term)
(declare-fun FStar.UInt64.eq_mask@tok () Term)
(declare-fun FStar.UInt64.lemma_sub_msbs (Term Term) Term)
(declare-fun FStar.UInt64.lemma_sub_msbs@tok () Term)
(declare-fun FStar.UInt64.gte_mask (Term Term) Term)
(declare-fun Tm_refine_1b1f0e3b5d9ef76ddc765c8d9e623234 (Term Term) Term)
(declare-fun Tm_arrow_7b13171caed18c0d7cf0b1d9315655c1 () Term)
(declare-fun FStar.UInt64.gte_mask@tok () Term)
(declare-fun FStar.UInt64.op_Plus_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Plus_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Plus_Question_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Plus_Question_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Plus_Percent_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Plus_Percent_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Subtraction_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Subtraction_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Subtraction_Question_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Subtraction_Question_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Subtraction_Percent_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Subtraction_Percent_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Star_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Star_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Star_Question_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Star_Question_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Star_Percent_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Star_Percent_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Slash_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Slash_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Percent_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Percent_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Hat_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Hat_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Amp_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Amp_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Bar_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Bar_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Less_Less_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Less_Less_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Greater_Greater_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Greater_Greater_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Equals_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Equals_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Greater_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Greater_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Greater_Equals_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Greater_Equals_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Less_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Less_Hat@tok () Term)
(declare-fun FStar.UInt64.op_Less_Equals_Hat (Term Term) Term)
(declare-fun FStar.UInt64.op_Less_Equals_Hat@tok () Term)
(declare-fun FStar.UInt64.to_string (Term) Term)
(declare-fun Tm_arrow_9181e066d5f5e8abb661df26378ed002 () Term)
(declare-fun FStar.UInt64.to_string@tok () Term)
(declare-fun FStar.UInt64.to_string_hex (Term) Term)
(declare-fun FStar.UInt64.to_string_hex@tok () Term)
(declare-fun FStar.UInt64.to_string_hex_pad (Term) Term)
(declare-fun FStar.UInt64.to_string_hex_pad@tok () Term)
(declare-fun FStar.UInt64.of_string (Term) Term)
(declare-fun Tm_arrow_d8ed8461d1bddbfa79f5d5b77e608759 () Term)
(declare-fun FStar.UInt64.of_string@tok () Term)
(declare-fun FStar.UInt64.__uint_to_t (Term) Term)
(declare-fun Tm_arrow_583103ad9bf405c63f576183363ae2d9 () Term)
(declare-fun FStar.UInt64.__uint_to_t@tok () Term)
(declare-fun Wasm.I64.n (Dummy_sort) Term)
(declare-fun Wasm.I64.bitwidth (Dummy_sort) Term)
(declare-fun Wasm.I64.t (Dummy_sort) Term)
(declare-fun Wasm.I64.bytes () Term)
(declare-fun Tm_refine_0c702c452b9d9784c90dce30ce1dbabc () Term)
(declare-fun Wasm.I64.of_int_s (Term) Term)
(declare-fun Tm_arrow_209089d20f0f6dd5f9782f38e07ca50b () Term)
(declare-fun Wasm.I64.of_int_s@tok () Term)
(declare-fun Wasm.I64.of_int_u (Term) Term)
(declare-fun Wasm.I64.of_int_u@tok () Term)
(declare-fun Wasm.I64.to_int_s (Term) Term)
(declare-fun Tm_arrow_6d44fc39d7ff1bef127b3c1a5603a61d () Term)
(declare-fun Wasm.I64.to_int_s@tok () Term)
(declare-fun Wasm.I64.to_int_u (Term) Term)
(declare-fun Tm_arrow_96930467056dab2fde9390082c37dbca () Term)
(declare-fun Wasm.I64.to_int_u@tok () Term)
(declare-fun Wasm.I64.of_bytes (Term) Term)
(declare-fun Tm_arrow_d4189af3976cc794e86119c8e0047f49 () Term)
(declare-fun Wasm.I64.of_bytes@tok () Term)
(declare-fun Wasm.I64.to_bytes (Term) Term)
(declare-fun Tm_arrow_f012e83d8ff6ad6abe379a788afca3b2 () Term)
(declare-fun Wasm.I64.to_bytes@tok () Term)
(declare-fun Wasm.I64.zero (Dummy_sort) Term)
(declare-fun Wasm.I64.one (Dummy_sort) Term)
(declare-fun Wasm.I64.add (Term Term) Term)
(declare-fun Tm_arrow_d78aa0a40f651fbec29ab3eb66c9796c () Term)
(declare-fun Wasm.I64.add@tok () Term)
(declare-fun Wasm.I64.sub (Term Term) Term)
(declare-fun Wasm.I64.sub@tok () Term)
(declare-fun Wasm.I64.mul (Term Term) Term)
(declare-fun Wasm.I64.mul@tok () Term)
(declare-fun Wasm.I64.to_s (Term) Term)
(declare-fun Tm_arrow_922c2ef7cd602b02e6d1f85dfc37080b () Term)
(declare-fun Wasm.I64.to_s@tok () Term)
(declare-fun Wasm.I64.fr_s (Term) Term)
(declare-fun Tm_arrow_c05090887f15a76cbaf5b8bf6d88b661 () Term)
(declare-fun Wasm.I64.fr_s@tok () Term)
(declare-fun Wasm.I64._v (Term) Term)
(declare-fun Wasm.I64._v@tok () Term)
(declare-fun Wasm.I64.div_s (Term Term) Term)
(declare-fun Tm_arrow_f9f0a296e8e9c325ad1d36dc60d02e5a () Term)
(declare-fun Wasm.I64.div_s@tok () Term)
(declare-fun Wasm.I64.div_u (Term Term) Term)
(declare-fun Wasm.I64.div_u@tok () Term)
(declare-fun Wasm.I64.rem_s (Term Term) Term)
(declare-fun Wasm.I64.rem_s@tok () Term)
(declare-fun Wasm.I64.rem_u (Term Term) Term)
(declare-fun Wasm.I64.rem_u@tok () Term)
(declare-fun Wasm.I64.and_ (Term Term) Term)
(declare-fun Wasm.I64.and_@tok () Term)
(declare-fun Wasm.I64.or_ (Term Term) Term)
(declare-fun Wasm.I64.or_@tok () Term)
(declare-fun Wasm.I64.xor (Term Term) Term)
(declare-fun Wasm.I64.xor@tok () Term)
(declare-fun Wasm.I64.clamp_mask (Term) Term)
(declare-fun Tm_arrow_196e3feac7f7672e7aa7394a167afccb () Term)
(declare-fun Wasm.I64.clamp_mask@tok () Term)
(declare-fun Wasm.I64.shl (Term Term) Term)
(declare-fun Wasm.I64.shl@tok () Term)
(declare-fun Wasm.I64.shr_s (Term Term) Term)
(declare-fun Wasm.I64.shr_s@tok () Term)
(declare-fun Wasm.I64.shr_u (Term Term) Term)
(declare-fun Wasm.I64.shr_u@tok () Term)
(declare-fun Wasm.I64.rotl (Term Term) Term)
(declare-fun Wasm.I64.rotl@tok () Term)
(declare-fun Wasm.I64.rotr (Term Term) Term)
(declare-fun Wasm.I64.rotr@tok () Term)
(declare-fun Wasm.I64.clz (Term) Term)
(declare-fun Tm_arrow_bda9a30a64a7a5331ec05f32bf4d362d () Term)
(declare-fun Wasm.I64.clz@tok () Term)
(declare-fun Wasm.I64.ctz (Term) Term)
(declare-fun Wasm.I64.ctz@tok () Term)
(declare-fun Wasm.I64.popcnt (Term) Term)
(declare-fun Wasm.I64.popcnt@tok () Term)
(declare-fun Wasm.I64.eqz (Term) Term)
(declare-fun Tm_arrow_178b7c983dd205a0eb51eba88962d469 () Term)
(declare-fun Wasm.I64.eqz@tok () Term)
(declare-fun Tm_arrow_3ac63c7cfc131b876392a0f57194c78f (Term) Term)
(declare-fun Wasm.I64.cmp_s (Term Term Term Term) Term)
(declare-fun Tm_arrow_56080429dfec09385c97dfc000b6466d () Term)
(declare-fun Wasm.I64.cmp_s@tok () Term)
(declare-fun Wasm.I64.eq (Term Term) Term)
(declare-fun Tm_arrow_2973ef9461cf26d9a0157277bfefa988 () Term)
(declare-fun Wasm.I64.eq@tok () Term)
(declare-fun Wasm.I64.ne (Term Term) Term)
(declare-fun Wasm.I64.ne@tok () Term)
(declare-fun Wasm.I64.lt_s (Term Term) Term)
(declare-fun Wasm.I64.lt_s@tok () Term)
(declare-fun Wasm.I64.lt_u (Term Term) Term)
(declare-fun Wasm.I64.lt_u@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.Int64.lt@tok)) :named kick_partial_app_89b35e4f227a4bf83af8cb476e264a21))
(declare-fun Wasm.I64.le_s (Term Term) Term)
(declare-fun Wasm.I64.le_s@tok () Term)
(declare-fun Wasm.I64.le_u (Term Term) Term)
(declare-fun Wasm.I64.le_u@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.Int64.lte@tok)) :named kick_partial_app_815ef9cbe8ae51ab91d6246936f6fa14))
(declare-fun Wasm.I64.gt_s (Term Term) Term)
(declare-fun Wasm.I64.gt_s@tok () Term)
(declare-fun Wasm.I64.gt_u (Term Term) Term)
(declare-fun Wasm.I64.gt_u@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.Int64.gt@tok)) :named kick_partial_app_d46e6f9a8076ade9555991f619f62ba3))
(declare-fun Wasm.I64.ge_s (Term Term) Term)
(declare-fun Wasm.I64.ge_s@tok () Term)
(declare-fun Wasm.I64.ge_u (Term Term) Term)
(declare-fun Wasm.I64.ge_u@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.Int64.gte@tok)) :named kick_partial_app_3d8e5fc08264b7bf0232870306a238e1))
(declare-fun Wasm.I64.of_string_s (Term) Term)
(declare-fun Tm_arrow_2e3ae0bd6440b0a5bb90244ab543c002 () Term)
(declare-fun Wasm.I64.of_string_s@tok () Term)
(declare-fun Wasm.I64.of_string_u (Term) Term)
(declare-fun Wasm.I64.of_string_u@tok () Term)
(declare-fun Wasm.I64.of_string (Term) Term)
(declare-fun Wasm.I64.of_string@tok () Term)
(declare-fun Wasm.I64.to_string_s (Term) Term)
(declare-fun Tm_arrow_f8c4a9c1daabf27b6ab102e4890a30ee () Term)
(declare-fun Wasm.I64.to_string_s@tok () Term)
(declare-fun Wasm.I64.to_string_u (Term) Term)
(declare-fun Wasm.I64.to_string_u@tok () Term)
(declare-fun Wasm.I64.to_string (Term Term Term) Term)
(declare-fun Wasm.I64.to_string@tok () Term)
(declare-fun FStar.Int32.n (Dummy_sort) Term)
(declare-fun FStar.Int32.t (Dummy_sort) Term)
(declare-fun FStar.Int32.v (Term) Term)
(declare-fun Tm_arrow_f4bf94df4bd6f39905f23de9668012e4 () Term)
(declare-fun FStar.Int32.v@tok () Term)
(declare-fun FStar.Int32.int_to_t (Term) Term)
(declare-fun Tm_refine_627e9f1cc724efa294bbc10092665eb4 (Term) Term)
(declare-fun Tm_arrow_fe360e36795474927c4df051072b7c84 () Term)
(declare-fun FStar.Int32.int_to_t@tok () Term)
(declare-fun FStar.Int32.uv_inv (Term) Term)
(declare-fun FStar.Int32.uv_inv@tok () Term)
(declare-fun FStar.Int32.vu_inv (Term) Term)
(declare-fun FStar.Int32.vu_inv@tok () Term)
(declare-fun FStar.Int32.v_inj (Term Term) Term)
(declare-fun FStar.Int32.v_inj@tok () Term)
(declare-fun FStar.Int32.add (Term Term) Term)
(declare-fun Tm_refine_5aa5ab11c31de0febf935305a5c980c9 (Term Term) Term)
(declare-fun Tm_arrow_1ae2a1cb7e3b9275ba73e0391a268c58 () Term)
(declare-fun FStar.Int32.add@tok () Term)
(declare-fun FStar.Int32.sub (Term Term) Term)
(declare-fun Tm_refine_2370a76276b3eaf034dd2a6c193ec479 (Term Term) Term)
(declare-fun Tm_arrow_3f0cd0a55749dce187a8b0625a84b969 () Term)
(declare-fun FStar.Int32.sub@tok () Term)
(declare-fun FStar.Int32.mul (Term Term) Term)
(declare-fun Tm_refine_b2da501eb6d7b3b17717277c72cd3d33 (Term Term) Term)
(declare-fun Tm_arrow_a8520b13e74a8db37464ccab702fc4d8 () Term)
(declare-fun FStar.Int32.mul@tok () Term)
(declare-fun Tm_refine_9961d54ea871d3cceb9a869af9f4caf7 () Term)
(declare-fun FStar.Int32.div (Term Term) Term)
(declare-fun Tm_refine_10c5468be26c345f983216e2f4a2830e (Term Term) Term)
(declare-fun Tm_arrow_e4982050523b30538ddc26f6d929adaa () Term)
(declare-fun FStar.Int32.div@tok () Term)
(declare-fun FStar.Int32.rem (Term Term) Term)
(declare-fun Tm_refine_923e81a1f108f9949dc0543f2627072f (Term Term) Term)
(declare-fun Tm_arrow_b3f1d49408f6546fc11f91d422dabe23 () Term)
(declare-fun FStar.Int32.rem@tok () Term)
(declare-fun FStar.Int32.logand (Term Term) Term)
(declare-fun Tm_refine_6866b028a4b89e77530792ce38231111 (Term Term) Term)
(declare-fun Tm_arrow_a653d9f76ea6ba694062a5cbf0e017cf () Term)
(declare-fun FStar.Int32.logand@tok () Term)
(declare-fun FStar.Int32.logxor (Term Term) Term)
(declare-fun Tm_refine_becfe5da95f1aa4ee2ce8bcb219c8d8b (Term Term) Term)
(declare-fun Tm_arrow_4e701446c0289f2c818a71c60cde3590 () Term)
(declare-fun FStar.Int32.logxor@tok () Term)
(declare-fun FStar.Int32.logor (Term Term) Term)
(declare-fun Tm_refine_0353e025954e9364168f29e3769e4cb4 (Term Term) Term)
(declare-fun Tm_arrow_01dedda34d05d39141cd218b604eb3c0 () Term)
(declare-fun FStar.Int32.logor@tok () Term)
(declare-fun FStar.Int32.lognot (Term) Term)
(declare-fun Tm_refine_353248002d2ca4cf50785f111f47157a (Term) Term)
(declare-fun Tm_arrow_f1b1fe05c7d8b62f9fe5e829c0ada0fd () Term)
(declare-fun FStar.Int32.lognot@tok () Term)
(declare-fun FStar.Int32.shift_right (Term Term) Term)
(declare-fun Tm_refine_a5bfe2c071f769c34fb186b3c6f025bc (Term Term) Term)
(declare-fun Tm_arrow_b3ba4dcd7dc367eb89868fa161b4e04d () Term)
(declare-fun FStar.Int32.shift_right@tok () Term)
(declare-fun FStar.Int32.shift_left (Term Term) Term)
(declare-fun Tm_refine_f042c9816d442898756db486f43c46c5 (Term Term) Term)
(declare-fun Tm_arrow_ac724b30d6ffb2633cc66987d5660504 () Term)
(declare-fun FStar.Int32.shift_left@tok () Term)
(declare-fun FStar.Int32.shift_arithmetic_right (Term Term) Term)
(declare-fun Tm_refine_3465cdfd5e573e06047a897b8d2ec713 (Term Term) Term)
(declare-fun Tm_arrow_56e16e1b27df5db49461580069a4b2e8 () Term)
(declare-fun FStar.Int32.shift_arithmetic_right@tok () Term)
(declare-fun FStar.Int32.eq (Term Term) Term)
(declare-fun Tm_arrow_4229113e57d40c359ccaebc3146f28d8 () Term)
(declare-fun FStar.Int32.eq@tok () Term)
(declare-fun FStar.Int32.gt (Term Term) Term)
(declare-fun FStar.Int32.gt@tok () Term)
(declare-fun FStar.Int32.gte (Term Term) Term)
(declare-fun FStar.Int32.gte@tok () Term)
(declare-fun FStar.Int32.lt (Term Term) Term)
(declare-fun FStar.Int32.lt@tok () Term)
(declare-fun FStar.Int32.lte (Term Term) Term)
(declare-fun FStar.Int32.lte@tok () Term)
(declare-fun FStar.Int32.op_Plus_Hat (Term Term) Term)
(declare-fun FStar.Int32.op_Plus_Hat@tok () Term)
(declare-fun FStar.Int32.op_Subtraction_Hat (Term Term) Term)
(declare-fun FStar.Int32.op_Subtraction_Hat@tok () Term)
(declare-fun FStar.Int32.op_Star_Hat (Term Term) Term)
(declare-fun FStar.Int32.op_Star_Hat@tok () Term)
(declare-fun FStar.Int32.op_Slash_Hat (Term Term) Term)
(declare-fun FStar.Int32.op_Slash_Hat@tok () Term)
(declare-fun FStar.Int32.op_Percent_Hat (Term Term) Term)
(declare-fun FStar.Int32.op_Percent_Hat@tok () Term)
(declare-fun FStar.Int32.op_Hat_Hat (Term Term) Term)
(declare-fun FStar.Int32.op_Hat_Hat@tok () Term)
(declare-fun FStar.Int32.op_Amp_Hat (Term Term) Term)
(declare-fun FStar.Int32.op_Amp_Hat@tok () Term)
(declare-fun FStar.Int32.op_Bar_Hat (Term Term) Term)
(declare-fun FStar.Int32.op_Bar_Hat@tok () Term)
(declare-fun FStar.Int32.op_Less_Less_Hat (Term Term) Term)
(declare-fun FStar.Int32.op_Less_Less_Hat@tok () Term)
(declare-fun FStar.Int32.op_Greater_Greater_Hat (Term Term) Term)
(declare-fun FStar.Int32.op_Greater_Greater_Hat@tok () Term)
(declare-fun FStar.Int32.op_Greater_Greater_Greater_Hat (Term Term) Term)
(declare-fun FStar.Int32.op_Greater_Greater_Greater_Hat@tok () Term)
(declare-fun FStar.Int32.op_Equals_Hat (Term Term) Term)
(declare-fun FStar.Int32.op_Equals_Hat@tok () Term)
(declare-fun FStar.Int32.op_Greater_Hat (Term Term) Term)
(declare-fun FStar.Int32.op_Greater_Hat@tok () Term)
(declare-fun FStar.Int32.op_Greater_Equals_Hat (Term Term) Term)
(declare-fun FStar.Int32.op_Greater_Equals_Hat@tok () Term)
(declare-fun FStar.Int32.op_Less_Hat (Term Term) Term)
(declare-fun FStar.Int32.op_Less_Hat@tok () Term)
(declare-fun FStar.Int32.op_Less_Equals_Hat (Term Term) Term)
(declare-fun FStar.Int32.op_Less_Equals_Hat@tok () Term)
(declare-fun Tm_refine_853c92b1b57deba9861afab3b88011fd () Term)
(declare-fun FStar.Int32.ct_abs (Term) Term)
(declare-fun Tm_refine_4832a4dd6f6c8b4bcd43cf5fa229de92 (Term) Term)
(declare-fun Tm_arrow_da79825446e7a53ed4e2199d118751df () Term)
(declare-fun FStar.Int32.ct_abs@tok () Term)
(declare-fun FStar.Int32.to_string (Term) Term)
(declare-fun Tm_arrow_29acd599eab236ba0b201e41bc06d1d3 () Term)
(declare-fun FStar.Int32.to_string@tok () Term)
(declare-fun FStar.Int32.of_string (Term) Term)
(declare-fun Tm_arrow_faca34681b3b6bb74518267d4cc90946 () Term)
(declare-fun FStar.Int32.of_string@tok () Term)
(declare-fun FStar.Int32.__int_to_t (Term) Term)
(declare-fun Tm_arrow_3b2fe9363a51dee88398c671861cfa75 () Term)
(declare-fun FStar.Int32.__int_to_t@tok () Term)
(declare-fun Wasm.I32.n (Dummy_sort) Term)
(declare-fun Wasm.I32.bitwidth (Dummy_sort) Term)
(declare-fun Wasm.I32.t (Dummy_sort) Term)
(declare-fun Wasm.I32.bytes () Term)
(declare-fun Tm_refine_46d09664db97e0f935ed04faadaeb035 () Term)
(declare-fun Wasm.I32.of_int_s (Term) Term)
(declare-fun Tm_arrow_5e7f6c5b2855b340013da82c482f339b () Term)
(declare-fun Wasm.I32.of_int_s@tok () Term)
(declare-fun Wasm.I32.of_int_u (Term) Term)
(declare-fun Wasm.I32.of_int_u@tok () Term)
(declare-fun Wasm.I32.to_int_s (Term) Term)
(declare-fun Tm_arrow_4558a68aca68399c770dec6331af42f1 () Term)
(declare-fun Wasm.I32.to_int_s@tok () Term)
(declare-fun Wasm.I32.to_int_u (Term) Term)
(declare-fun Tm_arrow_c09924d6928af447389cfdcea5fbcc89 () Term)
(declare-fun Wasm.I32.to_int_u@tok () Term)
(declare-fun Wasm.I32.of_bytes (Term) Term)
(declare-fun Tm_arrow_be71e7f03db514bd3c2ea9ab74bc7985 () Term)
(declare-fun Wasm.I32.of_bytes@tok () Term)
(declare-fun Wasm.I32.to_bytes (Term) Term)
(declare-fun Tm_arrow_84d91b54b94f63e2b58e715e1c1e5802 () Term)
(declare-fun Wasm.I32.to_bytes@tok () Term)
(declare-fun Wasm.I32.zero (Dummy_sort) Term)
(declare-fun Wasm.I32.one (Dummy_sort) Term)
(declare-fun Wasm.I32.add (Term Term) Term)
(declare-fun Tm_arrow_b25dd924af84f3c1c5a316b948e42555 () Term)
(declare-fun Wasm.I32.add@tok () Term)
(declare-fun Wasm.I32.sub (Term Term) Term)
(declare-fun Wasm.I32.sub@tok () Term)
(declare-fun Wasm.I32.mul (Term Term) Term)
(declare-fun Wasm.I32.mul@tok () Term)
(declare-fun Wasm.I32.to_s (Term) Term)
(declare-fun Tm_arrow_7f41a53b8c33a72cc3782e6a7f4e0d32 () Term)
(declare-fun Wasm.I32.to_s@tok () Term)
(declare-fun Wasm.I32.fr_s (Term) Term)
(declare-fun Tm_arrow_3906cc25030a1f9f99b07b5409f9fe17 () Term)
(declare-fun Wasm.I32.fr_s@tok () Term)
(declare-fun Wasm.I32._v (Term) Term)
(declare-fun Wasm.I32._v@tok () Term)
(declare-fun Wasm.I32.div_s (Term Term) Term)
(declare-fun Tm_arrow_1f2911fd5107d1c57c69f9272c2b1dce () Term)
(declare-fun Wasm.I32.div_s@tok () Term)
(declare-fun Wasm.I32.div_u (Term Term) Term)
(declare-fun Wasm.I32.div_u@tok () Term)
(declare-fun Wasm.I32.rem_s (Term Term) Term)
(declare-fun Wasm.I32.rem_s@tok () Term)
(declare-fun Wasm.I32.rem_u (Term Term) Term)
(declare-fun Wasm.I32.rem_u@tok () Term)
(declare-fun Wasm.I32.and_ (Term Term) Term)
(declare-fun Wasm.I32.and_@tok () Term)
(declare-fun Wasm.I32.or_ (Term Term) Term)
(declare-fun Wasm.I32.or_@tok () Term)
(declare-fun Wasm.I32.xor (Term Term) Term)
(declare-fun Wasm.I32.xor@tok () Term)
(declare-fun Wasm.I32.clamp_mask (Term) Term)
(declare-fun Wasm.I32.clamp_mask@tok () Term)
(declare-fun Wasm.I32.shl (Term Term) Term)
(declare-fun Wasm.I32.shl@tok () Term)
(declare-fun Wasm.I32.shr_s (Term Term) Term)
(declare-fun Wasm.I32.shr_s@tok () Term)
(declare-fun Wasm.I32.shr_u (Term Term) Term)
(declare-fun Wasm.I32.shr_u@tok () Term)
(declare-fun Wasm.I32.rotl (Term Term) Term)
(declare-fun Wasm.I32.rotl@tok () Term)
(declare-fun Wasm.I32.rotr (Term Term) Term)
(declare-fun Wasm.I32.rotr@tok () Term)
(declare-fun Wasm.I32.clz (Term) Term)
(declare-fun Tm_arrow_00ec144fa1e5e9634060d5e91dbc0bb2 () Term)
(declare-fun Wasm.I32.clz@tok () Term)
(declare-fun Wasm.I32.ctz (Term) Term)
(declare-fun Wasm.I32.ctz@tok () Term)
(declare-fun Wasm.I32.popcnt (Term) Term)
(declare-fun Wasm.I32.popcnt@tok () Term)
(declare-fun Wasm.I32.eqz (Term) Term)
(declare-fun Tm_arrow_a7235a800e4c99bcaa404f344449b2de () Term)
(declare-fun Wasm.I32.eqz@tok () Term)
(declare-fun Tm_arrow_c8b858b7dfce0b001b7f40debcfe1712 (Term) Term)
(declare-fun Wasm.I32.cmp_s (Term Term Term Term) Term)
(declare-fun Tm_arrow_b985b9264228fde4852224051f24a4d2 () Term)
(declare-fun Wasm.I32.cmp_s@tok () Term)
(declare-fun Wasm.I32.eq (Term Term) Term)
(declare-fun Tm_arrow_58e06433df2a9e3110a178ce4fe71008 () Term)
(declare-fun Wasm.I32.eq@tok () Term)
(declare-fun Wasm.I32.ne (Term Term) Term)
(declare-fun Wasm.I32.ne@tok () Term)
(declare-fun Wasm.I32.lt_s (Term Term) Term)
(declare-fun Wasm.I32.lt_s@tok () Term)
(declare-fun Wasm.I32.lt_u (Term Term) Term)
(declare-fun Wasm.I32.lt_u@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.Int32.lt@tok)) :named kick_partial_app_c0a149790eb482a8b07cf98f7479ec7c))
(declare-fun Wasm.I32.le_s (Term Term) Term)
(declare-fun Wasm.I32.le_s@tok () Term)
(declare-fun Wasm.I32.le_u (Term Term) Term)
(declare-fun Wasm.I32.le_u@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.Int32.lte@tok)) :named kick_partial_app_2ff271fd27c150842fa7446b86c8ff1b))
(declare-fun Wasm.I32.gt_s (Term Term) Term)
(declare-fun Wasm.I32.gt_s@tok () Term)
(declare-fun Wasm.I32.gt_u (Term Term) Term)
(declare-fun Wasm.I32.gt_u@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.Int32.gt@tok)) :named kick_partial_app_89096ae115f4fa7429b49a6f5cf41258))
(declare-fun Wasm.I32.ge_s (Term Term) Term)
(declare-fun Wasm.I32.ge_s@tok () Term)
(declare-fun Wasm.I32.ge_u (Term Term) Term)
(declare-fun Wasm.I32.ge_u@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.Int32.gte@tok)) :named kick_partial_app_09c7a26b32de6bddb29e441f589df5d1))
(declare-fun Wasm.I32.of_string_s (Term) Term)
(declare-fun Tm_arrow_37c38eb051ecc6d5cedb68afe70f84f2 () Term)
(declare-fun Wasm.I32.of_string_s@tok () Term)
(declare-fun Wasm.I32.of_string_u (Term) Term)
(declare-fun Wasm.I32.of_string_u@tok () Term)
(declare-fun Wasm.I32.of_string (Term) Term)
(declare-fun Wasm.I32.of_string@tok () Term)
(declare-fun Wasm.I32.to_string_s (Term) Term)
(declare-fun Tm_arrow_07cf28a2fa2614542983d429a0a758ed () Term)
(declare-fun Wasm.I32.to_string_s@tok () Term)
(declare-fun Wasm.I32.to_string_u (Term) Term)
(declare-fun Wasm.I32.to_string_u@tok () Term)
(declare-fun Wasm.I32.to_string (Term Term Term) Term)
(declare-fun Wasm.I32.to_string@tok () Term)
(declare-fun Wasm.I64_convert.extend_i32_s (Term) Term)
(declare-fun Tm_arrow_39d66fb15622c71b43386531455e8b73 () Term)
(declare-fun Wasm.I64_convert.extend_i32_s@tok () Term)
(declare-fun Wasm.I64_convert.extend_i32_u (Term) Term)
(declare-fun Wasm.I64_convert.extend_i32_u@tok () Term)
(declare-fun Wasm.I64_convert.trunc_f32_s (Term) Term)
(declare-fun Tm_arrow_238fd9e1809091ebeb4e87c46f64fbfa () Term)
(declare-fun Wasm.I64_convert.trunc_f32_s@tok () Term)
(declare-fun Wasm.I64_convert.trunc_f32_u (Term) Term)
(declare-fun Wasm.I64_convert.trunc_f32_u@tok () Term)
(declare-fun Wasm.I64_convert.trunc_f64_s (Term) Term)
(declare-fun Tm_arrow_686cff8236319984d227dc2d7a6b2367 () Term)
(declare-fun Wasm.I64_convert.trunc_f64_s@tok () Term)
(declare-fun Wasm.I64_convert.trunc_f64_u (Term) Term)
(declare-fun Wasm.I64_convert.trunc_f64_u@tok () Term)
(declare-fun Wasm.I64_convert.reinterpret_f64 (Term) Term)
(declare-fun Tm_arrow_3d93cb4cef5cef7bf3298578501cd2e7 () Term)
(declare-fun Wasm.I64_convert.reinterpret_f64@tok () Term)
(declare-fun Wasm.I32_convert.wrap_i64 (Term) Term)
(declare-fun Tm_arrow_e6775cb3384ea309a8396de8290f9a22 () Term)
(declare-fun Wasm.I32_convert.wrap_i64@tok () Term)
(declare-fun Wasm.I32_convert.trunc_f32_s (Term) Term)
(declare-fun Tm_arrow_8b3bd115adde6f94be4c026aca6bc5af () Term)
(declare-fun Wasm.I32_convert.trunc_f32_s@tok () Term)
(declare-fun Wasm.I32_convert.trunc_f32_u (Term) Term)
(declare-fun Wasm.I32_convert.trunc_f32_u@tok () Term)
(declare-fun Wasm.I32_convert.trunc_f64_s (Term) Term)
(declare-fun Tm_arrow_83d903434f825e8aaa0cb7846b916064 () Term)
(declare-fun Wasm.I32_convert.trunc_f64_s@tok () Term)
(declare-fun Wasm.I32_convert.trunc_f64_u (Term) Term)
(declare-fun Wasm.I32_convert.trunc_f64_u@tok () Term)
(declare-fun Wasm.I32_convert.reinterpret_f32 (Term) Term)
(declare-fun Tm_arrow_7ceb851021764ed3968ac0f2805011e3 () Term)
(declare-fun Wasm.I32_convert.reinterpret_f32@tok () Term)
(declare-fun Opaque_s.make_opaque (Term Term) Term)
(declare-fun Opaque_s.make_opaque@tok () Term)
(declare-fun Opaque_s.reveal_opaque (Term Term) Term)
(declare-fun Opaque_s.reveal_opaque@tok () Term)
(declare-fun FStar.Char.char (Dummy_sort) Term)
(declare-fun FStar.Char.char_code () Term)
(declare-fun Tm_refine_234921f2f7cfd34987b1ae1e46094c99 () Term)
(declare-fun FStar.Char.u32_of_char (Term) Term)
(declare-fun Tm_arrow_09ae08f23212b3776b47464ac075ff69 () Term)
(declare-fun FStar.Char.u32_of_char@tok () Term)
(declare-fun FStar.Char.char_of_u32 (Term) Term)
(declare-fun Tm_arrow_6b2de8c9d183197e10fa8623c8ed0069 () Term)
(declare-fun FStar.Char.char_of_u32@tok () Term)
(declare-fun FStar.Char.char_of_u32_of_char (Term) Term)
(declare-fun FStar.Char.char_of_u32_of_char@tok () Term)
(declare-fun FStar.Char.u32_of_char_of_u32 (Term) Term)
(declare-fun FStar.Char.u32_of_char_of_u32@tok () Term)
(declare-fun FStar.Char.int_of_char (Term) Term)
(declare-fun Tm_arrow_edb4339633bae2b96af63b0dbac8e538 () Term)
(declare-fun FStar.Char.int_of_char@tok () Term)
(declare-fun Tm_refine_cbae9286a4cd5dcd61e6ddad2b643794 () Term)
(declare-fun FStar.Char.char_of_int (Term) Term)
(declare-fun Tm_arrow_ad2a55302922fbb81e83e158bb096021 () Term)
(declare-fun FStar.Char.char_of_int@tok () Term)
(declare-fun FStar.Char.lowercase (Term) Term)
(declare-fun Tm_arrow_410c308158a4312d1307cd758f94e691 () Term)
(declare-fun FStar.Char.lowercase@tok () Term)
(declare-fun FStar.Char.uppercase (Term) Term)
(declare-fun FStar.Char.uppercase@tok () Term)
(declare-fun FStar.Char.__char_of_int (Term) Term)
(declare-fun Tm_arrow_269aaec28d3e769b82922feb9fbb0224 () Term)
(declare-fun FStar.Char.__char_of_int@tok () Term)
(declare-fun FStar.String.char (Dummy_sort) Term)
(declare-fun FStar.String.list_of_string (Term) Term)
(declare-fun Tm_arrow_8e894982d3a57de23acd924ee4086ea4 () Term)
(declare-fun FStar.String.list_of_string@tok () Term)
(declare-fun FStar.String.string_of_list (Term) Term)
(declare-fun Tm_arrow_2b8d885f530ca05ebe30451ee7c376b1 () Term)
(declare-fun FStar.String.string_of_list@tok () Term)
(declare-fun FStar.String.string_of_list_of_string (Term) Term)
(declare-fun FStar.String.string_of_list_of_string@tok () Term)
(declare-fun FStar.String.list_of_string_of_list (Term) Term)
(declare-fun FStar.String.list_of_string_of_list@tok () Term)
(declare-fun FStar.String.strlen (Term) Term)
(declare-fun Tm_arrow_da3d814f5b1ad2141d40c402a9d6f1ab () Term)
(declare-fun FStar.String.strlen@tok () Term)
(declare-fun FStar.String.length (Term) Term)
(declare-fun FStar.String.length@tok () Term)
(declare-fun FStar.String.maxlen (Term Term) Term)
(declare-fun Tm_arrow_e0948a38a2979ce5e4f73fa59f7a9ccb () Term)
(declare-fun FStar.String.maxlen@tok () Term)
(declare-fun FStar.String.make (Term Term) Term)
(declare-fun Tm_refine_5bd57a2b9b9fc8ea75ce9775c54c0669 (Term) Term)
(declare-fun Tm_arrow_922e49fa0986c31ac7db7b1c600af88a () Term)
(declare-fun FStar.String.make@tok () Term)
(declare-fun FStar.String.string_of_char (Term) Term)
(declare-fun Tm_arrow_1c1920c3176055111ac9719f3df59bde () Term)
(declare-fun FStar.String.string_of_char@tok () Term)
(declare-fun FStar.String.split (Term Term) Term)
(declare-fun Tm_arrow_fce767018e6ccd77e9439298933da142 () Term)
(declare-fun FStar.String.split@tok () Term)
(declare-fun FStar.String.concat (Term Term) Term)
(declare-fun Tm_arrow_7f645f38922df25bf6714b10f0b9c343 () Term)
(declare-fun FStar.String.concat@tok () Term)
(declare-fun FStar.String.compare (Term Term) Term)
(declare-fun Tm_arrow_77650534d172f9f4bbf4f147268736a3 () Term)
(declare-fun FStar.String.compare@tok () Term)
(declare-fun FStar.String.lowercase (Term) Term)
(declare-fun Tm_arrow_70affe4dada4ca8ba18740c614ba5211 () Term)
(declare-fun FStar.String.lowercase@tok () Term)
(declare-fun FStar.String.uppercase (Term) Term)
(declare-fun FStar.String.uppercase@tok () Term)
(declare-fun Tm_refine_1ca113d8204771fcd4ddf6572679125d (Term) Term)
(declare-fun FStar.String.index (Term Term) Term)
(declare-fun Tm_arrow_8cf5edc60e2819e4fdbf71e3c1554765 () Term)
(declare-fun FStar.String.index@tok () Term)
(declare-fun FStar.String.index_of (Term Term) Term)
(declare-fun Tm_arrow_a80ec5872c82b8c1c0bbd79fac842e7b () Term)
(declare-fun FStar.String.index_of@tok () Term)
(declare-fun Tm_refine_01729ae4a969ac9da9ca55c528b50bff (Term Term) Term)
(declare-fun FStar.String.sub (Term Term Term) Term)
(declare-fun Tm_arrow_670f503b64058073fb68c73419340465 () Term)
(declare-fun FStar.String.sub@tok () Term)
(declare-fun FStar.String.collect (Term Term) Term)
(declare-fun FStar.String.collect@tok () Term)
(declare-fun FStar.String.substring (Term Term Term) Term)
(declare-fun FStar.String.substring@tok () Term)
(declare-fun FStar.String.get (Term Term) Term)
(declare-fun FStar.String.get@tok () Term)
(declare-fun FStar.String.concat_length (Term Term) Term)
(declare-fun FStar.String.concat_length@tok () Term)
(declare-fun FStar.String.list_of_concat (Term Term) Term)
(declare-fun FStar.String.list_of_concat@tok () Term)
(declare-fun Wasm.Lib.List.__lfail (Term) Term)
(declare-fun Wasm.Lib.List.__lfail@tok () Term)
(declare-fun Wasm.Lib.List.make.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun Wasm.Lib.List.make.fuel_instrumented_token () Term)
(declare-fun Wasm.Lib.List.make (Term Term Term) Term)
(declare-fun Wasm.Lib.List.make@tok () Term)
(declare-fun Tm_arrow_e46acacd9b973c40a70886d22afc6930 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (Wasm.Lib.List.make.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (Wasm.Lib.List.make.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((Wasm.Lib.List.make.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_Wasm.Lib.List.make.fuel_instrumented)) :named fuel_irrelevance_Wasm.Lib.List.make.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (Wasm.Lib.List.make @x0 @x1 @x2) (Wasm.Lib.List.make.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((Wasm.Lib.List.make @x0 @x1 @x2)) :qid @fuel_correspondence_Wasm.Lib.List.make.fuel_instrumented)) :named fuel_correspondence_Wasm.Lib.List.make.fuel_instrumented))
(declare-fun Tm_arrow_3ec379adf03e252c5dd5eac0a57d8566 (Term) Term)
(declare-fun Wasm.Lib.List.table (Term Term Term) Term)
(declare-fun Tm_arrow_55ced385c394cdbb0f72cdf728d4f54c () Term)
(declare-fun Wasm.Lib.List.table@tok () Term)
(declare-fun Wasm.Lib.List.take.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun Wasm.Lib.List.take.fuel_instrumented_token () Term)
(declare-fun Wasm.Lib.List.take (Term Term Term) Term)
(declare-fun Wasm.Lib.List.take@tok () Term)
(declare-fun Tm_abs_99d0c977e6f152bedbc67a2615b3d120 (Term Term) Term)
(declare-fun Tm_arrow_c414b07f3761a8bd37c280851c1a1ca5 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (Wasm.Lib.List.take.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (Wasm.Lib.List.take.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((Wasm.Lib.List.take.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_Wasm.Lib.List.take.fuel_instrumented)) :named fuel_irrelevance_Wasm.Lib.List.take.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (Wasm.Lib.List.take @x0 @x1 @x2) (Wasm.Lib.List.take.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((Wasm.Lib.List.take @x0 @x1 @x2)) :qid @fuel_correspondence_Wasm.Lib.List.take.fuel_instrumented)) :named fuel_correspondence_Wasm.Lib.List.take.fuel_instrumented))
(declare-fun Wasm.Lib.List.drop.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun Wasm.Lib.List.drop.fuel_instrumented_token () Term)
(declare-fun Wasm.Lib.List.drop (Term Term Term) Term)
(declare-fun Wasm.Lib.List.drop@tok () Term)
(declare-fun Tm_arrow_6d629b5864899a2bd726aa67b051b977 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (Wasm.Lib.List.drop.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (Wasm.Lib.List.drop.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((Wasm.Lib.List.drop.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_Wasm.Lib.List.drop.fuel_instrumented)) :named fuel_irrelevance_Wasm.Lib.List.drop.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (Wasm.Lib.List.drop @x0 @x1 @x2) (Wasm.Lib.List.drop.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((Wasm.Lib.List.drop @x0 @x1 @x2)) :qid @fuel_correspondence_Wasm.Lib.List.drop.fuel_instrumented)) :named fuel_correspondence_Wasm.Lib.List.drop.fuel_instrumented))
(declare-fun Wasm.Lib.List.last.fuel_instrumented (Fuel Term Term) Term)
(declare-fun Wasm.Lib.List.last.fuel_instrumented_token () Term)
(declare-fun Wasm.Lib.List.last (Term Term) Term)
(declare-fun Wasm.Lib.List.last@tok () Term)
(declare-fun Tm_arrow_b9d14c722c965fd1e5102038a40cbdce () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (Wasm.Lib.List.last.fuel_instrumented (SFuel @u0) @x1 @x2) (Wasm.Lib.List.last.fuel_instrumented ZFuel @x1 @x2)) :pattern ((Wasm.Lib.List.last.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_Wasm.Lib.List.last.fuel_instrumented)) :named fuel_irrelevance_Wasm.Lib.List.last.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (Wasm.Lib.List.last @x0 @x1) (Wasm.Lib.List.last.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((Wasm.Lib.List.last @x0 @x1)) :qid @fuel_correspondence_Wasm.Lib.List.last.fuel_instrumented)) :named fuel_correspondence_Wasm.Lib.List.last.fuel_instrumented))
(declare-fun Wasm.Lib.List.split_last.fuel_instrumented (Fuel Term Term) Term)
(declare-fun Wasm.Lib.List.split_last.fuel_instrumented_token () Term)
(declare-fun Wasm.Lib.List.split_last (Term Term) Term)
(declare-fun Wasm.Lib.List.split_last@tok () Term)
(declare-fun Tm_arrow_98c5932bc4feb19cd01feb8ca31b04c2 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (Wasm.Lib.List.split_last.fuel_instrumented (SFuel @u0) @x1 @x2) (Wasm.Lib.List.split_last.fuel_instrumented ZFuel @x1 @x2)) :pattern ((Wasm.Lib.List.split_last.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_Wasm.Lib.List.split_last.fuel_instrumented)) :named fuel_irrelevance_Wasm.Lib.List.split_last.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (Wasm.Lib.List.split_last @x0 @x1) (Wasm.Lib.List.split_last.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((Wasm.Lib.List.split_last @x0 @x1)) :qid @fuel_correspondence_Wasm.Lib.List.split_last.fuel_instrumented)) :named fuel_correspondence_Wasm.Lib.List.split_last.fuel_instrumented))
(declare-fun Wasm.Lib.List.index_where (Term Term Term) Term)
(declare-fun Tm_arrow_6d36775d49615250989136b0bebe0506 () Term)
(declare-fun Wasm.Lib.List.index_where@tok () Term)
(declare-fun Wasm.Lib.List.index_of (Term Term Term) Term)
(declare-fun Tm_arrow_2a49b7c9b19d2d25e62bf7521a3abc24 () Term)
(declare-fun Wasm.Lib.List.index_of@tok () Term)
(declare-fun Tm_abs_3b0ace08b3d34b1b9c6190ea8851f44c (Term Term) Term)
(declare-fun Wasm.Lib.List.map_filter.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun Wasm.Lib.List.map_filter.fuel_instrumented_token () Term)
(declare-fun Wasm.Lib.List.map_filter (Term Term Term Term) Term)
(declare-fun Wasm.Lib.List.map_filter@tok () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (Wasm.Lib.List.map_filter.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (Wasm.Lib.List.map_filter.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((Wasm.Lib.List.map_filter.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_Wasm.Lib.List.map_filter.fuel_instrumented)) :named fuel_irrelevance_Wasm.Lib.List.map_filter.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (Wasm.Lib.List.map_filter @x0 @x1 @x2 @x3) (Wasm.Lib.List.map_filter.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((Wasm.Lib.List.map_filter @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_Wasm.Lib.List.map_filter.fuel_instrumented)) :named fuel_correspondence_Wasm.Lib.List.map_filter.fuel_instrumented))
(declare-fun Wasm.Lib.List.map_ex.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun Wasm.Lib.List.map_ex.fuel_instrumented_token () Term)
(declare-fun Wasm.Lib.List.map_ex (Term Term Term Term) Term)
(declare-fun Wasm.Lib.List.map_ex@tok () Term)
(declare-fun Tm_abs_91328a7379affbea1619571db971852b (Term Term) Term)
(declare-fun Tm_arrow_6d762ef2e3cfb9218e8550d6bb8bc486 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (Wasm.Lib.List.map_ex.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (Wasm.Lib.List.map_ex.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((Wasm.Lib.List.map_ex.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_Wasm.Lib.List.map_ex.fuel_instrumented)) :named fuel_irrelevance_Wasm.Lib.List.map_ex.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (Wasm.Lib.List.map_ex @x0 @x1 @x2 @x3) (Wasm.Lib.List.map_ex.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((Wasm.Lib.List.map_ex @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_Wasm.Lib.List.map_ex.fuel_instrumented)) :named fuel_correspondence_Wasm.Lib.List.map_ex.fuel_instrumented))
(declare-fun Wasm.Lib.List.fold_right2.fuel_instrumented (Fuel Term Term Term Term Term Term Term) Term)
(declare-fun Wasm.Lib.List.fold_right2.fuel_instrumented_token () Term)
(declare-fun Wasm.Lib.List.fold_right2 (Term Term Term Term Term Term Term) Term)
(declare-fun Wasm.Lib.List.fold_right2@tok () Term)
(declare-fun Tm_arrow_e3059f7dd0edb0e0091c6e2c20b383ca (Term Term Term) Term)
(declare-fun Tm_refine_a185fd27ce3ea776f3b07ea7f485cc37 (Term Term Term) Term)
(declare-fun Tm_arrow_a56c469b0beda9119c104d85eac37df0 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term)) (! (= (Wasm.Lib.List.fold_right2.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5 @x6 @x7) (Wasm.Lib.List.fold_right2.fuel_instrumented ZFuel @x1 @x2 @x3 @x4 @x5 @x6 @x7)) :pattern ((Wasm.Lib.List.fold_right2.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5 @x6 @x7)) :qid @fuel_irrelevance_Wasm.Lib.List.fold_right2.fuel_instrumented)) :named fuel_irrelevance_Wasm.Lib.List.fold_right2.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term)) (! (= (Wasm.Lib.List.fold_right2 @x0 @x1 @x2 @x3 @x4 @x5 @x6) (Wasm.Lib.List.fold_right2.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3 @x4 @x5 @x6)) :pattern ((Wasm.Lib.List.fold_right2 @x0 @x1 @x2 @x3 @x4 @x5 @x6)) :qid @fuel_correspondence_Wasm.Lib.List.fold_right2.fuel_instrumented)) :named fuel_correspondence_Wasm.Lib.List.fold_right2.fuel_instrumented))
(declare-fun FStar.Option.isNone (Term Term) Term)
(declare-fun FStar.Option.isNone@tok () Term)
(declare-fun FStar.Option.isSome (Term Term) Term)
(declare-fun FStar.Option.isSome@tok () Term)
(declare-fun FStar.Option.map (Term Term Term Term) Term)
(declare-fun FStar.Option.map@tok () Term)
(declare-fun FStar.Option.mapTot (Term Term Term Term) Term)
(declare-fun Tm_arrow_5aa71f5e730df4e952780582419a00ef () Term)
(declare-fun FStar.Option.mapTot@tok () Term)
(declare-fun FStar.Option.get (Term Term) Term)
(declare-fun FStar.Option.get@tok () Term)
(declare-fun Wasm.Types.value_type () Term)
(declare-fun Wasm.Types.I32Type () Term)
(declare-fun Wasm.Types.I32Type@tok () Term)
(declare-fun Wasm.Types.I64Type () Term)
(declare-fun Wasm.Types.I64Type@tok () Term)
(declare-fun Wasm.Types.F32Type () Term)
(declare-fun Wasm.Types.F32Type@tok () Term)
(declare-fun Wasm.Types.F64Type () Term)
(declare-fun Wasm.Types.F64Type@tok () Term)
(define-fun is-Wasm.Types.value_type ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 101) (= __@x0 Wasm.Types.value_type)))
(define-fun is-Wasm.Types.I32Type ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 107) (= __@x0 Wasm.Types.I32Type)))
(define-fun is-Wasm.Types.I64Type ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 109) (= __@x0 Wasm.Types.I64Type)))
(define-fun is-Wasm.Types.F32Type ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 111) (= __@x0 Wasm.Types.F32Type)))
(define-fun is-Wasm.Types.F64Type ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 113) (= __@x0 Wasm.Types.F64Type)))
(declare-fun Wasm.Types.uu___is_I32Type (Term) Term)
(declare-fun Tm_arrow_f9a3e07a6b49550b8e01b1747bcbfa46 () Term)
(declare-fun Wasm.Types.uu___is_I32Type@tok () Term)
(declare-fun Wasm.Types.uu___is_I64Type (Term) Term)
(declare-fun Wasm.Types.uu___is_I64Type@tok () Term)
(declare-fun Wasm.Types.uu___is_F32Type (Term) Term)
(declare-fun Wasm.Types.uu___is_F32Type@tok () Term)
(declare-fun Wasm.Types.uu___is_F64Type (Term) Term)
(declare-fun Wasm.Types.uu___is_F64Type@tok () Term)
(declare-fun Wasm.Types.stack_type () Term)
(declare-fun Wasm.Types.func_type () Term)
(declare-fun Wasm.Types.FuncType (Term) Term)
(declare-fun Wasm.Types.FuncType__0 (Term) Term)
(declare-fun Wasm.Types.FuncType@tok () Term)
(declare-fun Tm_arrow_d59dc8c99b7bcbd160cf55e53ecaca03 () Term)
(define-fun is-Wasm.Types.func_type ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 122) (= __@x0 Wasm.Types.func_type)))
(define-fun is-Wasm.Types.FuncType ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 128) (= __@x0 (Wasm.Types.FuncType (Wasm.Types.FuncType__0 __@x0)))))
(declare-fun Wasm.Types.uu___is_FuncType (Term) Term)
(declare-fun Tm_arrow_2c52df507df2cf605356746dd79a7eac () Term)
(declare-fun Wasm.Types.uu___is_FuncType@tok () Term)
(declare-fun Wasm.Types.__proj__FuncType__item___0 (Term) Term)
(declare-fun Tm_arrow_8a771b9935a3fa036fd54568beedb4ae () Term)
(declare-fun Wasm.Types.__proj__FuncType__item___0@tok () Term)
(declare-fun Wasm.Types.limits (Term) Term)
(declare-fun Wasm.Types.limits@x0 (Term) Term)
(declare-fun Wasm.Types.limits@tok () Term)
(declare-fun Wasm.Types.Mklimits (Term Term Term) Term)
(declare-fun Wasm.Types.Mklimits__a (Term) Term)
(declare-fun Wasm.Types.Mklimits_min (Term) Term)
(declare-fun Wasm.Types.Mklimits_max (Term) Term)
(declare-fun Wasm.Types.Mklimits@tok () Term)
(declare-fun Tm_arrow_9075ae99d449f5533e4cf55bd5182dfb () Term)
(define-fun is-Wasm.Types.limits ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 136) (exists ((@x0 Term)) (! (= __@x0 (Wasm.Types.limits @x0)) :qid is-Wasm.Types.limits))))
(define-fun is-Wasm.Types.Mklimits ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 143) (= __@x0 (Wasm.Types.Mklimits (Wasm.Types.Mklimits__a __@x0) (Wasm.Types.Mklimits_min __@x0) (Wasm.Types.Mklimits_max __@x0)))))
(declare-fun Wasm.Types.__proj__Mklimits__item__min (Term Term) Term)
(declare-fun Tm_arrow_7970661e9925cb1e30e03c7c4eb622bb () Term)
(declare-fun Wasm.Types.__proj__Mklimits__item__min@tok () Term)
(declare-fun Wasm.Types.__proj__Mklimits__item__max (Term Term) Term)
(declare-fun Tm_arrow_0fb3fa97eb8db0ed5cb1c802044a2d7e () Term)
(declare-fun Wasm.Types.__proj__Mklimits__item__max@tok () Term)
(declare-fun Wasm.Types.elem_type () Term)
(declare-fun Wasm.Types.FuncRefType () Term)
(declare-fun Wasm.Types.FuncRefType@tok () Term)
(define-fun is-Wasm.Types.elem_type ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 151) (= __@x0 Wasm.Types.elem_type)))
(define-fun is-Wasm.Types.FuncRefType ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 157) (= __@x0 Wasm.Types.FuncRefType)))
(declare-fun Wasm.Types.uu___is_FuncRefType (Term) Term)
(declare-fun Tm_arrow_42dff36ff5c07bfa28ee1af56a9c1c7b () Term)
(declare-fun Wasm.Types.uu___is_FuncRefType@tok () Term)
(declare-fun Wasm.Types.table_type () Term)
(declare-fun Wasm.Types.TableType (Term) Term)
(declare-fun Wasm.Types.TableType__0 (Term) Term)
(declare-fun Wasm.Types.TableType@tok () Term)
(declare-fun Tm_arrow_9fe866ddb19db45a8d3f5e761ecf3256 () Term)
(define-fun is-Wasm.Types.table_type ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 160) (= __@x0 Wasm.Types.table_type)))
(define-fun is-Wasm.Types.TableType ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 166) (= __@x0 (Wasm.Types.TableType (Wasm.Types.TableType__0 __@x0)))))
(declare-fun Wasm.Types.uu___is_TableType (Term) Term)
(declare-fun Tm_arrow_b31f0d7d7692a031a4d64473fb7d899a () Term)
(declare-fun Wasm.Types.uu___is_TableType@tok () Term)
(declare-fun Wasm.Types.__proj__TableType__item___0 (Term) Term)
(declare-fun Tm_arrow_d20ba6a1d86450f00ca2dd1932cfad81 () Term)
(declare-fun Wasm.Types.__proj__TableType__item___0@tok () Term)
(declare-fun Wasm.Types.memory_type () Term)
(declare-fun Wasm.Types.MemoryType (Term) Term)
(declare-fun Wasm.Types.MemoryType__0 (Term) Term)
(declare-fun Wasm.Types.MemoryType@tok () Term)
(declare-fun Tm_arrow_60c3a1f24e6da66a74602e480a2de442 () Term)
(define-fun is-Wasm.Types.memory_type ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 174) (= __@x0 Wasm.Types.memory_type)))
(define-fun is-Wasm.Types.MemoryType ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 180) (= __@x0 (Wasm.Types.MemoryType (Wasm.Types.MemoryType__0 __@x0)))))
(declare-fun Wasm.Types.uu___is_MemoryType (Term) Term)
(declare-fun Tm_arrow_69b69445175af136dcb084a964687de9 () Term)
(declare-fun Wasm.Types.uu___is_MemoryType@tok () Term)
(declare-fun Wasm.Types.__proj__MemoryType__item___0 (Term) Term)
(declare-fun Tm_arrow_c207fe0577ebf4ac56cfe3a3ac5accfc () Term)
(declare-fun Wasm.Types.__proj__MemoryType__item___0@tok () Term)
(declare-fun Wasm.Types.mutability () Term)
(declare-fun Wasm.Types.Immutable () Term)
(declare-fun Wasm.Types.Immutable@tok () Term)
(declare-fun Wasm.Types.Mutable () Term)
(declare-fun Wasm.Types.Mutable@tok () Term)
(define-fun is-Wasm.Types.mutability ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 188) (= __@x0 Wasm.Types.mutability)))
(define-fun is-Wasm.Types.Immutable ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 194) (= __@x0 Wasm.Types.Immutable)))
(define-fun is-Wasm.Types.Mutable ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 196) (= __@x0 Wasm.Types.Mutable)))
(declare-fun Wasm.Types.uu___is_Immutable (Term) Term)
(declare-fun Tm_arrow_48e8871c020d7ae7d79d1fb4438ed29d () Term)
(declare-fun Wasm.Types.uu___is_Immutable@tok () Term)
(declare-fun Wasm.Types.uu___is_Mutable (Term) Term)
(declare-fun Wasm.Types.uu___is_Mutable@tok () Term)
(declare-fun Wasm.Types.global_type () Term)
(declare-fun Wasm.Types.GlobalType (Term) Term)
(declare-fun Wasm.Types.GlobalType__0 (Term) Term)
(declare-fun Wasm.Types.GlobalType@tok () Term)
(declare-fun Tm_arrow_ab7042f967e74696aeeea3b374cf3f15 () Term)
(define-fun is-Wasm.Types.global_type ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 201) (= __@x0 Wasm.Types.global_type)))
(define-fun is-Wasm.Types.GlobalType ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 207) (= __@x0 (Wasm.Types.GlobalType (Wasm.Types.GlobalType__0 __@x0)))))
(declare-fun Wasm.Types.uu___is_GlobalType (Term) Term)
(declare-fun Tm_arrow_d2bc8b32117830ef8fd23f2cdb284eb1 () Term)
(declare-fun Wasm.Types.uu___is_GlobalType@tok () Term)
(declare-fun Wasm.Types.__proj__GlobalType__item___0 (Term) Term)
(declare-fun Tm_arrow_940b73d611302810299cbb4bdbe72d12 () Term)
(declare-fun Wasm.Types.__proj__GlobalType__item___0@tok () Term)
(declare-fun Wasm.Types.extern_type () Term)
(declare-fun Wasm.Types.ExternFuncType (Term) Term)
(declare-fun Wasm.Types.ExternFuncType__0 (Term) Term)
(declare-fun Wasm.Types.ExternFuncType@tok () Term)
(declare-fun Wasm.Types.ExternTableType (Term) Term)
(declare-fun Wasm.Types.ExternTableType__0 (Term) Term)
(declare-fun Wasm.Types.ExternTableType@tok () Term)
(declare-fun Wasm.Types.ExternMemoryType (Term) Term)
(declare-fun Wasm.Types.ExternMemoryType__0 (Term) Term)
(declare-fun Wasm.Types.ExternMemoryType@tok () Term)
(declare-fun Wasm.Types.ExternGlobalType (Term) Term)
(declare-fun Wasm.Types.ExternGlobalType__0 (Term) Term)
(declare-fun Wasm.Types.ExternGlobalType@tok () Term)
(declare-fun Tm_arrow_c4e1406a1d87bb6aa93bfc435f9c5d3a () Term)
(declare-fun Tm_arrow_e8f208f236ccc44ecc802d020b65f5fb () Term)
(declare-fun Tm_arrow_0d051ce8d05981ad87c3ac8fa35e1fb7 () Term)
(declare-fun Tm_arrow_09e8378e67593cf1ab5dff077769f121 () Term)
(define-fun is-Wasm.Types.extern_type ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 215) (= __@x0 Wasm.Types.extern_type)))
(define-fun is-Wasm.Types.ExternFuncType ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 221) (= __@x0 (Wasm.Types.ExternFuncType (Wasm.Types.ExternFuncType__0 __@x0)))))
(define-fun is-Wasm.Types.ExternTableType ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 226) (= __@x0 (Wasm.Types.ExternTableType (Wasm.Types.ExternTableType__0 __@x0)))))
(define-fun is-Wasm.Types.ExternMemoryType ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 231) (= __@x0 (Wasm.Types.ExternMemoryType (Wasm.Types.ExternMemoryType__0 __@x0)))))
(define-fun is-Wasm.Types.ExternGlobalType ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 236) (= __@x0 (Wasm.Types.ExternGlobalType (Wasm.Types.ExternGlobalType__0 __@x0)))))
(declare-fun Wasm.Types.uu___is_ExternFuncType (Term) Term)
(declare-fun Tm_arrow_76a12571b302331195788a5f933ec233 () Term)
(declare-fun Wasm.Types.uu___is_ExternFuncType@tok () Term)
(declare-fun Tm_refine_6d326c9e596dc87bc2b3d7bb7c3f7897 () Term)
(declare-fun Wasm.Types.__proj__ExternFuncType__item___0 (Term) Term)
(declare-fun Tm_arrow_3bb2f5c4a89123c4ebd265000408c998 () Term)
(declare-fun Wasm.Types.__proj__ExternFuncType__item___0@tok () Term)
(declare-fun Wasm.Types.uu___is_ExternTableType (Term) Term)
(declare-fun Wasm.Types.uu___is_ExternTableType@tok () Term)
(declare-fun Tm_refine_61fbd5b699c6c9ba27df8c550b308481 () Term)
(declare-fun Wasm.Types.__proj__ExternTableType__item___0 (Term) Term)
(declare-fun Tm_arrow_be4540262d8c53e628bd05aaad652edc () Term)
(declare-fun Wasm.Types.__proj__ExternTableType__item___0@tok () Term)
(declare-fun Wasm.Types.uu___is_ExternMemoryType (Term) Term)
(declare-fun Wasm.Types.uu___is_ExternMemoryType@tok () Term)
(declare-fun Tm_refine_30b85edbfc00a46008419b91fb748e07 () Term)
(declare-fun Wasm.Types.__proj__ExternMemoryType__item___0 (Term) Term)
(declare-fun Tm_arrow_12ceb9ce7bda8e86a5b2e665852d2939 () Term)
(declare-fun Wasm.Types.__proj__ExternMemoryType__item___0@tok () Term)
(declare-fun Wasm.Types.uu___is_ExternGlobalType (Term) Term)
(declare-fun Wasm.Types.uu___is_ExternGlobalType@tok () Term)
(declare-fun Tm_refine_4e13695559e230cd4ffed70bcd11d673 () Term)
(declare-fun Wasm.Types.__proj__ExternGlobalType__item___0 (Term) Term)
(declare-fun Tm_arrow_f578b0bb5cb6d828d4df3b202cae0955 () Term)
(declare-fun Wasm.Types.__proj__ExternGlobalType__item___0@tok () Term)
(declare-fun Wasm.Types.size (Term) Term)
(declare-fun Tm_arrow_659a30c66121018c4d6a02d93130dd1c () Term)
(declare-fun Wasm.Types.size@tok () Term)
(declare-fun Wasm.Types.match_limits (Term Term) Term)
(declare-fun Tm_arrow_03161b4aa80584cf3968286f234fef6e () Term)
(declare-fun Wasm.Types.match_limits@tok () Term)
(declare-fun Wasm.Types.match_func_type (Term Term) Term)
(declare-fun Tm_arrow_c7d01a41e5767fa805cf610d6a5a11bc () Term)
(declare-fun Wasm.Types.match_func_type@tok () Term)
(declare-fun Wasm.Types.match_table_type (Term Term) Term)
(declare-fun Tm_arrow_e257819bcb66125f8f90dd2bc03c01ba () Term)
(declare-fun Wasm.Types.match_table_type@tok () Term)
(declare-fun Wasm.Types.match_memory_type (Term Term) Term)
(declare-fun Tm_arrow_bf1166347c184f7a6b98de530630357a () Term)
(declare-fun Wasm.Types.match_memory_type@tok () Term)
(declare-fun Wasm.Types.match_global_type (Term Term) Term)
(declare-fun Tm_arrow_0dba258b0932a63fec353714c7ad2fea () Term)
(declare-fun Wasm.Types.match_global_type@tok () Term)
(declare-fun Wasm.Types.match_extern_type (Term Term) Term)
(declare-fun Tm_arrow_2113a91a47b1a42baeb39a07fad70dd3 () Term)
(declare-fun Wasm.Types.match_extern_type@tok () Term)
(declare-fun Wasm.Types.funcs (Term) Term)
(declare-fun Tm_arrow_8573bd106f7dd73eac39d958b258e9e3 () Term)
(declare-fun Wasm.Types.funcs@tok () Term)
(declare-fun Tm_arrow_89e2a136b48475be1cc4fa50d100b5f0 () Term)
(declare-fun Tm_abs_1b8b5fe123337fac69d5db65cf25b80e () Term)
(declare-fun Wasm.Types.tables (Term) Term)
(declare-fun Tm_arrow_d03ecb0b1171d593a7750ab033c71224 () Term)
(declare-fun Wasm.Types.tables@tok () Term)
(declare-fun Tm_arrow_66a70a5bd8ab531e02c8637e8e8d1295 () Term)
(declare-fun Tm_abs_89f804b8c2a70e0f82e5bdfd56ac383c () Term)
(declare-fun Wasm.Types.memories (Term) Term)
(declare-fun Tm_arrow_8159fdcd427af083208ff6fba8c8cc33 () Term)
(declare-fun Wasm.Types.memories@tok () Term)
(declare-fun Tm_arrow_2339001b1af68b5a5a33eee802213a08 () Term)
(declare-fun Tm_abs_fd65cf9a1a3cfc90e443bc8f01fdf057 () Term)
(declare-fun Wasm.Types.globals (Term) Term)
(declare-fun Tm_arrow_5f4c771140ddae625ad553a2b70415fe () Term)
(declare-fun Wasm.Types.globals@tok () Term)
(declare-fun Tm_arrow_70be6633b5bbdbda1ba193f64486f40d () Term)
(declare-fun Tm_abs_99614dc80404db1f56d9d43b647d684c () Term)
(declare-fun Wasm.Types.string_of_value_type (Term) Term)
(declare-fun Tm_arrow_63f7d9e0cdd89b070ef08302eee2ab57 () Term)
(declare-fun Wasm.Types.string_of_value_type@tok () Term)
(declare-fun Wasm.Types.string_of_value_types (Term) Term)
(declare-fun Tm_arrow_897446ec10b46f02953abe1b80bd6f75 () Term)
(declare-fun Wasm.Types.string_of_value_types@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp Wasm.Types.string_of_value_type@tok)) :named kick_partial_app_9cf1f13895cfd9e6c17680d7b0c59734))
(declare-fun Wasm.Types.string_of_elem_type (Term) Term)
(declare-fun Tm_arrow_998267fd9d102142184d0529d15cca8c () Term)
(declare-fun Wasm.Types.string_of_elem_type@tok () Term)
(declare-fun Wasm.Types.string_of_limits (Term) Term)
(declare-fun Tm_arrow_89e29a3707d1f6805190ca706ba12ec4 () Term)
(declare-fun Wasm.Types.string_of_limits@tok () Term)
(declare-fun Wasm.Types.string_of_memory_type (Term) Term)
(declare-fun Tm_arrow_4132084850d00e41e8f4a28adc004fc7 () Term)
(declare-fun Wasm.Types.string_of_memory_type@tok () Term)
(declare-fun Wasm.Types.string_of_table_type (Term) Term)
(declare-fun Tm_arrow_de7ab130414f1f4ac77a177bcbf5e598 () Term)
(declare-fun Wasm.Types.string_of_table_type@tok () Term)
(declare-fun Wasm.Types.string_of_global_type (Term) Term)
(declare-fun Tm_arrow_d5c38807c7f834255bb380b092bd5e98 () Term)
(declare-fun Wasm.Types.string_of_global_type@tok () Term)
(declare-fun Wasm.Types.string_of_stack_type (Term) Term)
(declare-fun Wasm.Types.string_of_stack_type@tok () Term)
(declare-fun Wasm.Types.string_of_func_type (Term) Term)
(declare-fun Tm_arrow_28deb87ada8f1430dcb551ae6ebeb766 () Term)
(declare-fun Wasm.Types.string_of_func_type@tok () Term)
(declare-fun Wasm.Types.string_of_extern_type (Term) Term)
(declare-fun Tm_arrow_e189e229f18bca30840fdf896ed5f91c () Term)
(declare-fun Wasm.Types.string_of_extern_type@tok () Term)
(declare-fun Wasm.Values.op (Term Term Term Term) Term)
(declare-fun Wasm.Values.op@x0 (Term) Term)
(declare-fun Wasm.Values.op@x1 (Term) Term)
(declare-fun Wasm.Values.op@x2 (Term) Term)
(declare-fun Wasm.Values.op@x3 (Term) Term)
(declare-fun Wasm.Values.op@tok () Term)
(declare-fun Wasm.Values.I32 (Term Term Term Term Term) Term)
(declare-fun Wasm.Values.I32_i32 (Term) Term)
(declare-fun Wasm.Values.I32_i64 (Term) Term)
(declare-fun Wasm.Values.I32_f32 (Term) Term)
(declare-fun Wasm.Values.I32_f64 (Term) Term)
(declare-fun Wasm.Values.I32__0 (Term) Term)
(declare-fun Wasm.Values.I32@tok () Term)
(declare-fun Wasm.Values.I64 (Term Term Term Term Term) Term)
(declare-fun Wasm.Values.I64_i32 (Term) Term)
(declare-fun Wasm.Values.I64_i64 (Term) Term)
(declare-fun Wasm.Values.I64_f32 (Term) Term)
(declare-fun Wasm.Values.I64_f64 (Term) Term)
(declare-fun Wasm.Values.I64__0 (Term) Term)
(declare-fun Wasm.Values.I64@tok () Term)
(declare-fun Wasm.Values.F32 (Term Term Term Term Term) Term)
(declare-fun Wasm.Values.F32_i32 (Term) Term)
(declare-fun Wasm.Values.F32_i64 (Term) Term)
(declare-fun Wasm.Values.F32_f32 (Term) Term)
(declare-fun Wasm.Values.F32_f64 (Term) Term)
(declare-fun Wasm.Values.F32__0 (Term) Term)
(declare-fun Wasm.Values.F32@tok () Term)
(declare-fun Wasm.Values.F64 (Term Term Term Term Term) Term)
(declare-fun Wasm.Values.F64_i32 (Term) Term)
(declare-fun Wasm.Values.F64_i64 (Term) Term)
(declare-fun Wasm.Values.F64_f32 (Term) Term)
(declare-fun Wasm.Values.F64_f64 (Term) Term)
(declare-fun Wasm.Values.F64__0 (Term) Term)
(declare-fun Wasm.Values.F64@tok () Term)
(declare-fun Tm_arrow_ffe4f1878a29b401b9562aac114a6ac6 () Term)
(declare-fun Tm_arrow_e313c344b4522e214411af4c55195198 () Term)
(declare-fun Tm_arrow_bfed5dca6b11b1b8ed1a049fe4d83667 () Term)
(declare-fun Tm_arrow_2b90dc499451395732683f7f47609a57 () Term)
(define-fun is-Wasm.Values.op ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 101) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= __@x0 (Wasm.Values.op @x0 @x1 @x2 @x3)) :qid is-Wasm.Values.op))))
(define-fun is-Wasm.Values.I32 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 108) (= __@x0 (Wasm.Values.I32 (Wasm.Values.I32_i32 __@x0) (Wasm.Values.I32_i64 __@x0) (Wasm.Values.I32_f32 __@x0) (Wasm.Values.I32_f64 __@x0) (Wasm.Values.I32__0 __@x0)))))
(define-fun is-Wasm.Values.I64 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 113) (= __@x0 (Wasm.Values.I64 (Wasm.Values.I64_i32 __@x0) (Wasm.Values.I64_i64 __@x0) (Wasm.Values.I64_f32 __@x0) (Wasm.Values.I64_f64 __@x0) (Wasm.Values.I64__0 __@x0)))))
(define-fun is-Wasm.Values.F32 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 118) (= __@x0 (Wasm.Values.F32 (Wasm.Values.F32_i32 __@x0) (Wasm.Values.F32_i64 __@x0) (Wasm.Values.F32_f32 __@x0) (Wasm.Values.F32_f64 __@x0) (Wasm.Values.F32__0 __@x0)))))
(define-fun is-Wasm.Values.F64 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 123) (= __@x0 (Wasm.Values.F64 (Wasm.Values.F64_i32 __@x0) (Wasm.Values.F64_i64 __@x0) (Wasm.Values.F64_f32 __@x0) (Wasm.Values.F64_f64 __@x0) (Wasm.Values.F64__0 __@x0)))))
(declare-fun Wasm.Values.uu___is_I32 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_6a7c00fa47719ed52408994f8af233d2 () Term)
(declare-fun Wasm.Values.uu___is_I32@tok () Term)
(declare-fun Tm_refine_4d4eb9f3a4ca37a4bab89ec7b4b4977b (Term Term Term Term) Term)
(declare-fun Wasm.Values.__proj__I32__item___0 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_29c51d654381c188e9a6431913bc6af6 () Term)
(declare-fun Wasm.Values.__proj__I32__item___0@tok () Term)
(declare-fun Wasm.Values.uu___is_I64 (Term Term Term Term Term) Term)
(declare-fun Wasm.Values.uu___is_I64@tok () Term)
(declare-fun Tm_refine_0e6370604b24f50ca3757c0b674be211 (Term Term Term Term) Term)
(declare-fun Wasm.Values.__proj__I64__item___0 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_504e036804d280609dd8dc46b673ce1e () Term)
(declare-fun Wasm.Values.__proj__I64__item___0@tok () Term)
(declare-fun Wasm.Values.uu___is_F32 (Term Term Term Term Term) Term)
(declare-fun Wasm.Values.uu___is_F32@tok () Term)
(declare-fun Tm_refine_de16f69a1ef4f3b977d84500ed989788 (Term Term Term Term) Term)
(declare-fun Wasm.Values.__proj__F32__item___0 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_53a462e56b29b6d513cf1ebfa23134f0 () Term)
(declare-fun Wasm.Values.__proj__F32__item___0@tok () Term)
(declare-fun Wasm.Values.uu___is_F64 (Term Term Term Term Term) Term)
(declare-fun Wasm.Values.uu___is_F64@tok () Term)
(declare-fun Tm_refine_b956747cc17edde7eb7b7193763cadec (Term Term Term Term) Term)
(declare-fun Wasm.Values.__proj__F64__item___0 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_4562d1a5c398501594f4c168803d3d08 () Term)
(declare-fun Wasm.Values.__proj__F64__item___0@tok () Term)
(declare-fun Wasm.Values.value () Term)
(declare-fun Wasm.Values.type_of (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9f87661828c2631efc6d605d367162b5 () Term)
(declare-fun Wasm.Values.type_of@tok () Term)
(declare-fun Wasm.Values.default_value (Term) Term)
(declare-fun Tm_arrow_2cc405b0b631809f2848d280dc962d09 () Term)
(declare-fun Wasm.Values.default_value@tok () Term)
(declare-fun Wasm.Values.value_of_bool (Term Term Term Term) Term)
(declare-fun Tm_arrow_2a584703b9f39e6f6d0f44a410856b14 () Term)
(declare-fun Wasm.Values.value_of_bool@tok () Term)
(declare-fun Wasm.Values.string_of_value (Term) Term)
(declare-fun Tm_arrow_3b81c374393856356f7d57471cced277 () Term)
(declare-fun Wasm.Values.string_of_value@tok () Term)
(declare-fun Wasm.Values.string_of_values (Term) Term)
(declare-fun Wasm.Values.string_of_values@tok () Term)
(declare-fun Wasm.Values.e_Value (Term Term) Term)
(declare-fun Tm_arrow_55c930cb3739b431e744a7fd9a20ee78 () Term)
(declare-fun Wasm.Values.e_Value@tok () Term)
(declare-fun Wasm.Memory.op_String_Access (Term Term) Term)
(declare-fun Tm_arrow_9c859e8a1c6526d3222abd12b06f56e6 (Term Term) Term)
(declare-fun Tm_arrow_6bba04b4885461a0e9e5b22b0a94469a () Term)
(declare-fun Wasm.Memory.op_String_Access@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.Map.sel@tok)) :named kick_partial_app_edfe432dfa91cadec5785b1a3740ab83))
(declare-fun Wasm.Memory.op_String_Assignment (Term Term) Term)
(declare-fun Tm_arrow_e76ad7ea1b49a51ebc304bcd6e344d98 (Term Term) Term)
(declare-fun Tm_arrow_ecbe25e460c8c11eb9fd7d4047b093d0 () Term)
(declare-fun Wasm.Memory.op_String_Assignment@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.Map.upd@tok)) :named kick_partial_app_8a7f7b4aae27e82e9b0c2aa043fb2952))
(declare-fun Wasm.Memory.size_ (Dummy_sort) Term)
(declare-fun Wasm.Memory.address (Dummy_sort) Term)
(declare-fun Wasm.Memory.offset (Dummy_sort) Term)
(declare-fun Wasm.Memory.pack_size () Term)
(declare-fun Wasm.Memory.Pack8 () Term)
(declare-fun Wasm.Memory.Pack8@tok () Term)
(declare-fun Wasm.Memory.Pack16 () Term)
(declare-fun Wasm.Memory.Pack16@tok () Term)
(declare-fun Wasm.Memory.Pack32 () Term)
(declare-fun Wasm.Memory.Pack32@tok () Term)
(define-fun is-Wasm.Memory.pack_size ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 113) (= __@x0 Wasm.Memory.pack_size)))
(define-fun is-Wasm.Memory.Pack8 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 119) (= __@x0 Wasm.Memory.Pack8)))
(define-fun is-Wasm.Memory.Pack16 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 121) (= __@x0 Wasm.Memory.Pack16)))
(define-fun is-Wasm.Memory.Pack32 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 123) (= __@x0 Wasm.Memory.Pack32)))
(declare-fun Wasm.Memory.uu___is_Pack8 (Term) Term)
(declare-fun Tm_arrow_3813e674833de8ca4460d4381bc9339a () Term)
(declare-fun Wasm.Memory.uu___is_Pack8@tok () Term)
(declare-fun Wasm.Memory.uu___is_Pack16 (Term) Term)
(declare-fun Wasm.Memory.uu___is_Pack16@tok () Term)
(declare-fun Wasm.Memory.uu___is_Pack32 (Term) Term)
(declare-fun Wasm.Memory.uu___is_Pack32@tok () Term)
(declare-fun Wasm.Memory.extension () Term)
(declare-fun Wasm.Memory.SX () Term)
(declare-fun Wasm.Memory.SX@tok () Term)
(declare-fun Wasm.Memory.ZX () Term)
(declare-fun Wasm.Memory.ZX@tok () Term)
(define-fun is-Wasm.Memory.extension ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 130) (= __@x0 Wasm.Memory.extension)))
(define-fun is-Wasm.Memory.SX ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 136) (= __@x0 Wasm.Memory.SX)))
(define-fun is-Wasm.Memory.ZX ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 138) (= __@x0 Wasm.Memory.ZX)))
(declare-fun Wasm.Memory.uu___is_SX (Term) Term)
(declare-fun Tm_arrow_a7ae7b81c5e114ccb103ae3fd7a43ed3 () Term)
(declare-fun Wasm.Memory.uu___is_SX@tok () Term)
(declare-fun Wasm.Memory.uu___is_ZX (Term) Term)
(declare-fun Wasm.Memory.uu___is_ZX@tok () Term)
(declare-fun Wasm.Memory.t_byte () Term)
(declare-fun Wasm.Memory.memory_ () Term)
(declare-fun Wasm.Memory.memory () Term)
(declare-fun Wasm.Memory.Mkmemory (Term Term Term) Term)
(declare-fun Wasm.Memory.Mkmemory_content (Term) Term)
(declare-fun Wasm.Memory.Mkmemory_mem_sz (Term) Term)
(declare-fun Wasm.Memory.Mkmemory_mem_max (Term) Term)
(declare-fun Wasm.Memory.Mkmemory@tok () Term)
(declare-fun Tm_arrow_025bbcbf5f42d645f56e371c1d0db265 () Term)
(define-fun is-Wasm.Memory.memory ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 143) (= __@x0 Wasm.Memory.memory)))
(define-fun is-Wasm.Memory.Mkmemory ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 149) (= __@x0 (Wasm.Memory.Mkmemory (Wasm.Memory.Mkmemory_content __@x0) (Wasm.Memory.Mkmemory_mem_sz __@x0) (Wasm.Memory.Mkmemory_mem_max __@x0)))))
(declare-fun Wasm.Memory.__proj__Mkmemory__item__content (Term) Term)
(declare-fun Tm_arrow_6457133d731d3cd77383af1055ef6d40 () Term)
(declare-fun Wasm.Memory.__proj__Mkmemory__item__content@tok () Term)
(declare-fun Wasm.Memory.__proj__Mkmemory__item__mem_sz (Term) Term)
(declare-fun Tm_arrow_8049dd709b347f5233d61418fe696a7d () Term)
(declare-fun Wasm.Memory.__proj__Mkmemory__item__mem_sz@tok () Term)
(declare-fun Wasm.Memory.__proj__Mkmemory__item__mem_max (Term) Term)
(declare-fun Tm_arrow_e539d63a855647c4f2743167425598d7 () Term)
(declare-fun Wasm.Memory.__proj__Mkmemory__item__mem_max@tok () Term)
(declare-fun Wasm.Memory.t () Term)
(declare-fun Wasm.Memory.e_Type (Term) Term)
(declare-fun Wasm.Memory.e_Type@tok () Term)
(declare-fun Wasm.Memory.e_Bounds (Term) Term)
(declare-fun Wasm.Memory.e_Bounds@tok () Term)
(declare-fun Wasm.Memory.e_SizeOverflow (Term) Term)
(declare-fun Wasm.Memory.e_SizeOverflow@tok () Term)
(declare-fun Wasm.Memory.e_SizeLimit (Term) Term)
(declare-fun Wasm.Memory.e_SizeLimit@tok () Term)
(declare-fun Wasm.Memory.e_OutOfMemory (Term) Term)
(declare-fun Wasm.Memory.e_OutOfMemory@tok () Term)
(declare-fun Wasm.Memory.page_size (Dummy_sort) Term)
(declare-fun Wasm.Memory.packed_size (Term) Term)
(declare-fun Tm_arrow_b74473121fc149f342a2fcdc56831772 () Term)
(declare-fun Wasm.Memory.packed_size@tok () Term)
(declare-fun Wasm.Memory.within_limits (Term Term) Term)
(declare-fun Tm_arrow_6ded08eb869461e518e9a307c598efb1 () Term)
(declare-fun Wasm.Memory.within_limits@tok () Term)
(declare-fun Wasm.Memory.create (Term) Term)
(declare-fun Tm_arrow_ca3b9699aadd6bd300d1c387fa8f367e () Term)
(declare-fun Wasm.Memory.create@tok () Term)
(declare-fun Wasm.Memory.alloc (Term) Term)
(declare-fun Tm_arrow_a495ab98e67e8833d88144bc1fe81294 () Term)
(declare-fun Wasm.Memory.alloc@tok () Term)
(declare-fun Wasm.Memory.content (Term) Term)
(declare-fun Wasm.Memory.content@tok () Term)
(declare-fun Wasm.Memory.bound (Term) Term)
(declare-fun Wasm.Memory.bound@tok () Term)
(declare-fun Wasm.Memory.size (Term) Term)
(declare-fun Tm_arrow_80c2836396daed8705a7638d19140f1f () Term)
(declare-fun Wasm.Memory.size@tok () Term)
(declare-fun Wasm.Memory.type_of (Term) Term)
(declare-fun Tm_arrow_7ef314cd75e2c7fa2aabb83411d3f812 () Term)
(declare-fun Wasm.Memory.type_of@tok () Term)
(declare-fun Wasm.Memory.grow (Term Term) Term)
(declare-fun Tm_arrow_c3b2a206a7de09b584198f8d9d952350 () Term)
(declare-fun Wasm.Memory.grow@tok () Term)
(declare-fun Wasm.Memory.load_byte (Term Term) Term)
(declare-fun Tm_arrow_d7e4ffd8fa067315aebd4b3cba41e494 () Term)
(declare-fun Wasm.Memory.load_byte@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp Wasm.Memory.op_String_Access@tok)) :named kick_partial_app_ed2b89b8daf4fc7b195770f60ec8bc36))
(declare-fun Wasm.Memory.store_byte (Term Term Term) Term)
(declare-fun Tm_arrow_5b41b46cac1d960401a71da87988e074 () Term)
(declare-fun Wasm.Memory.store_byte@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp Wasm.Memory.op_String_Assignment@tok)) :named kick_partial_app_f06f4c717101dbd9b03f4d1024975b3e))
(declare-fun Wasm.Memory.load_bytes_loop__.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun Wasm.Memory.load_bytes_loop__.fuel_instrumented_token () Term)
(declare-fun Wasm.Memory.load_bytes_loop__ (Term Term Term Term) Term)
(declare-fun Wasm.Memory.load_bytes_loop__@tok () Term)
(declare-fun Tm_refine_84f1dfc988442ca4731a99869093028a (Term Term) Term)
(declare-fun Tm_arrow_357e3c958dfca7c2d994d9601e22bc36 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (Wasm.Memory.load_bytes_loop__.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (Wasm.Memory.load_bytes_loop__.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((Wasm.Memory.load_bytes_loop__.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_Wasm.Memory.load_bytes_loop__.fuel_instrumented)) :named fuel_irrelevance_Wasm.Memory.load_bytes_loop__.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (Wasm.Memory.load_bytes_loop__ @x0 @x1 @x2 @x3) (Wasm.Memory.load_bytes_loop__.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((Wasm.Memory.load_bytes_loop__ @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_Wasm.Memory.load_bytes_loop__.fuel_instrumented)) :named fuel_correspondence_Wasm.Memory.load_bytes_loop__.fuel_instrumented))
(declare-fun Wasm.Memory.load_bytes (Term Term Term) Term)
(declare-fun Tm_refine_4642d25c4a363eae0ccb0af35a69d10d (Term) Term)
(declare-fun Tm_arrow_d6c9e9faf91dcb64821b563ed2fa83d2 () Term)
(declare-fun Wasm.Memory.load_bytes@tok () Term)
(declare-fun Wasm.Memory.store_bytes_loop__.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun Wasm.Memory.store_bytes_loop__.fuel_instrumented_token () Term)
(declare-fun Wasm.Memory.store_bytes_loop__ (Term Term Term) Term)
(declare-fun Wasm.Memory.store_bytes_loop__@tok () Term)
(declare-fun Tm_arrow_d18deb0ac103df3b21e9c16a2d63a541 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (Wasm.Memory.store_bytes_loop__.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (Wasm.Memory.store_bytes_loop__.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((Wasm.Memory.store_bytes_loop__.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_Wasm.Memory.store_bytes_loop__.fuel_instrumented)) :named fuel_irrelevance_Wasm.Memory.store_bytes_loop__.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (Wasm.Memory.store_bytes_loop__ @x0 @x1 @x2) (Wasm.Memory.store_bytes_loop__.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((Wasm.Memory.store_bytes_loop__ @x0 @x1 @x2)) :qid @fuel_correspondence_Wasm.Memory.store_bytes_loop__.fuel_instrumented)) :named fuel_correspondence_Wasm.Memory.store_bytes_loop__.fuel_instrumented))
(declare-fun Wasm.Memory.store_bytes (Term Term Term) Term)
(declare-fun Tm_arrow_c647405a644132c95e0b7cd9917f7627 () Term)
(declare-fun Wasm.Memory.store_bytes@tok () Term)
(declare-fun Wasm.Memory.effective_address (Term Term) Term)
(declare-fun Tm_arrow_4d04ed5259b1d54f931d4f06b47f14b2 () Term)
(declare-fun Wasm.Memory.effective_address@tok () Term)
(declare-fun Wasm.Memory.load_value (Term Term Term Term) Term)
(declare-fun Tm_arrow_2f23825f9247e94132881d4c79ab8250 () Term)
(declare-fun Wasm.Memory.load_value@tok () Term)
(declare-fun Wasm.Memory.store_value (Term Term Term Term) Term)
(declare-fun Tm_arrow_03ad96385fdf2db692bee341f276c52f () Term)
(declare-fun Wasm.Memory.store_value@tok () Term)
(declare-fun Wasm.Memory.extend (Term Term Term) Term)
(declare-fun Tm_arrow_ac91aca041899f06ae22bf7d8c793f4e () Term)
(declare-fun Wasm.Memory.extend@tok () Term)
(declare-fun Wasm.Memory.pad_zeros__.fuel_instrumented (Fuel Term Term) Term)
(declare-fun Wasm.Memory.pad_zeros__.fuel_instrumented_token () Term)
(declare-fun Wasm.Memory.pad_zeros__ (Term Term) Term)
(declare-fun Wasm.Memory.pad_zeros__@tok () Term)
(declare-fun Tm_refine_5e605bf4ab6a98f479bfa0864c34216f (Term Term) Term)
(declare-fun Tm_arrow_ffa2530691bc191cf73f05b57eab23b2 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (Wasm.Memory.pad_zeros__.fuel_instrumented (SFuel @u0) @x1 @x2) (Wasm.Memory.pad_zeros__.fuel_instrumented ZFuel @x1 @x2)) :pattern ((Wasm.Memory.pad_zeros__.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_Wasm.Memory.pad_zeros__.fuel_instrumented)) :named fuel_irrelevance_Wasm.Memory.pad_zeros__.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (Wasm.Memory.pad_zeros__ @x0 @x1) (Wasm.Memory.pad_zeros__.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((Wasm.Memory.pad_zeros__ @x0 @x1)) :qid @fuel_correspondence_Wasm.Memory.pad_zeros__.fuel_instrumented)) :named fuel_correspondence_Wasm.Memory.pad_zeros__.fuel_instrumented))
(declare-fun Wasm.Memory.load_packed (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_eeab30c7ac88cc8c94191a1b0e9ffb1f () Term)
(declare-fun Wasm.Memory.load_packed@tok () Term)
(declare-fun Wasm.Memory.store_packed (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_ec3be5821f459566b80c29059ad2837e () Term)
(declare-fun Wasm.Memory.store_packed@tok () Term)
(declare-fun Wasm.Global.global () Term)
(declare-fun Wasm.Global.Mkglobal (Term Term) Term)
(declare-fun Wasm.Global.Mkglobal_content (Term) Term)
(declare-fun Wasm.Global.Mkglobal_mut (Term) Term)
(declare-fun Wasm.Global.Mkglobal@tok () Term)
(declare-fun Tm_arrow_f4f17f3e4b9fedaa6f42e2af145d969e () Term)
(define-fun is-Wasm.Global.global ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 101) (= __@x0 Wasm.Global.global)))
(define-fun is-Wasm.Global.Mkglobal ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 107) (= __@x0 (Wasm.Global.Mkglobal (Wasm.Global.Mkglobal_content __@x0) (Wasm.Global.Mkglobal_mut __@x0)))))
(declare-fun Wasm.Global.__proj__Mkglobal__item__content (Term) Term)
(declare-fun Tm_arrow_4fba5f4f2e7726efd6a5425c8080c30a () Term)
(declare-fun Wasm.Global.__proj__Mkglobal__item__content@tok () Term)
(declare-fun Wasm.Global.__proj__Mkglobal__item__mut (Term) Term)
(declare-fun Tm_arrow_75234e1134aca8045207b3715f9514bf () Term)
(declare-fun Wasm.Global.__proj__Mkglobal__item__mut@tok () Term)
(declare-fun Wasm.Global.t () Term)
(declare-fun Wasm.Global.e_Type (Term) Term)
(declare-fun Wasm.Global.e_Type@tok () Term)
(declare-fun Wasm.Global.e_NotMutable (Term) Term)
(declare-fun Wasm.Global.e_NotMutable@tok () Term)
(declare-fun Wasm.Global.alloc (Term Term) Term)
(declare-fun Tm_arrow_47bda171a542213180c405e91f8f3863 () Term)
(declare-fun Wasm.Global.alloc@tok () Term)
(declare-fun Wasm.Global.type_of (Term) Term)
(declare-fun Tm_arrow_853643b978508ea506bdbc32a9434a6c () Term)
(declare-fun Wasm.Global.type_of@tok () Term)
(declare-fun Wasm.Global.load (Term) Term)
(declare-fun Wasm.Global.load@tok () Term)
(declare-fun Wasm.Global.store (Term Term) Term)
(declare-fun Tm_arrow_44c213595e6ee22d150246968e62f200 () Term)
(declare-fun Wasm.Global.store@tok () Term)
(declare-fun Wasm.Ast.FloatOp.unop () Term)
(declare-fun Wasm.Ast.FloatOp.Neg () Term)
(declare-fun Wasm.Ast.FloatOp.Neg@tok () Term)
(declare-fun Wasm.Ast.FloatOp.Abs () Term)
(declare-fun Wasm.Ast.FloatOp.Abs@tok () Term)
(declare-fun Wasm.Ast.FloatOp.Ceil () Term)
(declare-fun Wasm.Ast.FloatOp.Ceil@tok () Term)
(declare-fun Wasm.Ast.FloatOp.Floor () Term)
(declare-fun Wasm.Ast.FloatOp.Floor@tok () Term)
(declare-fun Wasm.Ast.FloatOp.Trunc () Term)
(declare-fun Wasm.Ast.FloatOp.Trunc@tok () Term)
(declare-fun Wasm.Ast.FloatOp.Nearest () Term)
(declare-fun Wasm.Ast.FloatOp.Nearest@tok () Term)
(declare-fun Wasm.Ast.FloatOp.Sqrt () Term)
(declare-fun Wasm.Ast.FloatOp.Sqrt@tok () Term)
(define-fun is-Wasm.Ast.FloatOp.unop ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 101) (= __@x0 Wasm.Ast.FloatOp.unop)))
(define-fun is-Wasm.Ast.FloatOp.Neg ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 107) (= __@x0 Wasm.Ast.FloatOp.Neg)))
(define-fun is-Wasm.Ast.FloatOp.Abs ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 109) (= __@x0 Wasm.Ast.FloatOp.Abs)))
(define-fun is-Wasm.Ast.FloatOp.Ceil ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 111) (= __@x0 Wasm.Ast.FloatOp.Ceil)))
(define-fun is-Wasm.Ast.FloatOp.Floor ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 113) (= __@x0 Wasm.Ast.FloatOp.Floor)))
(define-fun is-Wasm.Ast.FloatOp.Trunc ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 115) (= __@x0 Wasm.Ast.FloatOp.Trunc)))
(define-fun is-Wasm.Ast.FloatOp.Nearest ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 117) (= __@x0 Wasm.Ast.FloatOp.Nearest)))
(define-fun is-Wasm.Ast.FloatOp.Sqrt ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 119) (= __@x0 Wasm.Ast.FloatOp.Sqrt)))
(declare-fun Wasm.Ast.FloatOp.uu___is_Neg (Term) Term)
(declare-fun Tm_arrow_754733bcaee3d6a12b3dbbf4ebb83d82 () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Neg@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Abs (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Abs@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Ceil (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Ceil@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Floor (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Floor@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Trunc (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Trunc@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Nearest (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Nearest@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Sqrt (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Sqrt@tok () Term)
(declare-fun Wasm.Ast.FloatOp.binop () Term)
(declare-fun Wasm.Ast.FloatOp.Add () Term)
(declare-fun Wasm.Ast.FloatOp.Add@tok () Term)
(declare-fun Wasm.Ast.FloatOp.Sub () Term)
(declare-fun Wasm.Ast.FloatOp.Sub@tok () Term)
(declare-fun Wasm.Ast.FloatOp.Mul () Term)
(declare-fun Wasm.Ast.FloatOp.Mul@tok () Term)
(declare-fun Wasm.Ast.FloatOp.Div () Term)
(declare-fun Wasm.Ast.FloatOp.Div@tok () Term)
(declare-fun Wasm.Ast.FloatOp.Min () Term)
(declare-fun Wasm.Ast.FloatOp.Min@tok () Term)
(declare-fun Wasm.Ast.FloatOp.Max () Term)
(declare-fun Wasm.Ast.FloatOp.Max@tok () Term)
(declare-fun Wasm.Ast.FloatOp.CopySign () Term)
(declare-fun Wasm.Ast.FloatOp.CopySign@tok () Term)
(define-fun is-Wasm.Ast.FloatOp.binop ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 134) (= __@x0 Wasm.Ast.FloatOp.binop)))
(define-fun is-Wasm.Ast.FloatOp.Add ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 140) (= __@x0 Wasm.Ast.FloatOp.Add)))
(define-fun is-Wasm.Ast.FloatOp.Sub ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 142) (= __@x0 Wasm.Ast.FloatOp.Sub)))
(define-fun is-Wasm.Ast.FloatOp.Mul ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 144) (= __@x0 Wasm.Ast.FloatOp.Mul)))
(define-fun is-Wasm.Ast.FloatOp.Div ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 146) (= __@x0 Wasm.Ast.FloatOp.Div)))
(define-fun is-Wasm.Ast.FloatOp.Min ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 148) (= __@x0 Wasm.Ast.FloatOp.Min)))
(define-fun is-Wasm.Ast.FloatOp.Max ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 150) (= __@x0 Wasm.Ast.FloatOp.Max)))
(define-fun is-Wasm.Ast.FloatOp.CopySign ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 152) (= __@x0 Wasm.Ast.FloatOp.CopySign)))
(declare-fun Wasm.Ast.FloatOp.uu___is_Add (Term) Term)
(declare-fun Tm_arrow_068e5e1e875de5093dc83f3803860e7c () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Add@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Sub (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Sub@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Mul (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Mul@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Div (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Div@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Min (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Min@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Max (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Max@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_CopySign (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_CopySign@tok () Term)
(declare-fun Wasm.Ast.FloatOp.testop () Term)
(declare-fun Wasm.Ast.FloatOp.NoSuch () Term)
(declare-fun Wasm.Ast.FloatOp.NoSuch@tok () Term)
(define-fun is-Wasm.Ast.FloatOp.testop ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 167) (= __@x0 Wasm.Ast.FloatOp.testop)))
(define-fun is-Wasm.Ast.FloatOp.NoSuch ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 173) (= __@x0 Wasm.Ast.FloatOp.NoSuch)))
(declare-fun Wasm.Ast.FloatOp.uu___is_NoSuch (Term) Term)
(declare-fun Tm_arrow_91e76b529888d7d9c62b9a605f880219 () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_NoSuch@tok () Term)
(declare-fun Wasm.Ast.FloatOp.relop () Term)
(declare-fun Wasm.Ast.FloatOp.Eq () Term)
(declare-fun Wasm.Ast.FloatOp.Eq@tok () Term)
(declare-fun Wasm.Ast.FloatOp.Ne () Term)
(declare-fun Wasm.Ast.FloatOp.Ne@tok () Term)
(declare-fun Wasm.Ast.FloatOp.Lt () Term)
(declare-fun Wasm.Ast.FloatOp.Lt@tok () Term)
(declare-fun Wasm.Ast.FloatOp.Gt () Term)
(declare-fun Wasm.Ast.FloatOp.Gt@tok () Term)
(declare-fun Wasm.Ast.FloatOp.Le () Term)
(declare-fun Wasm.Ast.FloatOp.Le@tok () Term)
(declare-fun Wasm.Ast.FloatOp.Ge () Term)
(declare-fun Wasm.Ast.FloatOp.Ge@tok () Term)
(define-fun is-Wasm.Ast.FloatOp.relop ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 176) (= __@x0 Wasm.Ast.FloatOp.relop)))
(define-fun is-Wasm.Ast.FloatOp.Eq ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 182) (= __@x0 Wasm.Ast.FloatOp.Eq)))
(define-fun is-Wasm.Ast.FloatOp.Ne ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 184) (= __@x0 Wasm.Ast.FloatOp.Ne)))
(define-fun is-Wasm.Ast.FloatOp.Lt ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 186) (= __@x0 Wasm.Ast.FloatOp.Lt)))
(define-fun is-Wasm.Ast.FloatOp.Gt ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 188) (= __@x0 Wasm.Ast.FloatOp.Gt)))
(define-fun is-Wasm.Ast.FloatOp.Le ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 190) (= __@x0 Wasm.Ast.FloatOp.Le)))
(define-fun is-Wasm.Ast.FloatOp.Ge ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 192) (= __@x0 Wasm.Ast.FloatOp.Ge)))
(declare-fun Wasm.Ast.FloatOp.uu___is_Eq (Term) Term)
(declare-fun Tm_arrow_b78ebbf02c136a875d2e95eacf77ff16 () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Eq@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Ne (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Ne@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Lt (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Lt@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Gt (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Gt@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Le (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Le@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Ge (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_Ge@tok () Term)
(declare-fun Wasm.Ast.FloatOp.cvtop () Term)
(declare-fun Wasm.Ast.FloatOp.ConvertSI32 () Term)
(declare-fun Wasm.Ast.FloatOp.ConvertSI32@tok () Term)
(declare-fun Wasm.Ast.FloatOp.ConvertUI32 () Term)
(declare-fun Wasm.Ast.FloatOp.ConvertUI32@tok () Term)
(declare-fun Wasm.Ast.FloatOp.ConvertSI64 () Term)
(declare-fun Wasm.Ast.FloatOp.ConvertSI64@tok () Term)
(declare-fun Wasm.Ast.FloatOp.ConvertUI64 () Term)
(declare-fun Wasm.Ast.FloatOp.ConvertUI64@tok () Term)
(declare-fun Wasm.Ast.FloatOp.PromoteF32 () Term)
(declare-fun Wasm.Ast.FloatOp.PromoteF32@tok () Term)
(declare-fun Wasm.Ast.FloatOp.DemoteF64 () Term)
(declare-fun Wasm.Ast.FloatOp.DemoteF64@tok () Term)
(declare-fun Wasm.Ast.FloatOp.ReinterpretInt () Term)
(declare-fun Wasm.Ast.FloatOp.ReinterpretInt@tok () Term)
(define-fun is-Wasm.Ast.FloatOp.cvtop ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 205) (= __@x0 Wasm.Ast.FloatOp.cvtop)))
(define-fun is-Wasm.Ast.FloatOp.ConvertSI32 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 211) (= __@x0 Wasm.Ast.FloatOp.ConvertSI32)))
(define-fun is-Wasm.Ast.FloatOp.ConvertUI32 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 213) (= __@x0 Wasm.Ast.FloatOp.ConvertUI32)))
(define-fun is-Wasm.Ast.FloatOp.ConvertSI64 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 215) (= __@x0 Wasm.Ast.FloatOp.ConvertSI64)))
(define-fun is-Wasm.Ast.FloatOp.ConvertUI64 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 217) (= __@x0 Wasm.Ast.FloatOp.ConvertUI64)))
(define-fun is-Wasm.Ast.FloatOp.PromoteF32 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 219) (= __@x0 Wasm.Ast.FloatOp.PromoteF32)))
(define-fun is-Wasm.Ast.FloatOp.DemoteF64 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 221) (= __@x0 Wasm.Ast.FloatOp.DemoteF64)))
(define-fun is-Wasm.Ast.FloatOp.ReinterpretInt ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 223) (= __@x0 Wasm.Ast.FloatOp.ReinterpretInt)))
(declare-fun Wasm.Ast.FloatOp.uu___is_ConvertSI32 (Term) Term)
(declare-fun Tm_arrow_a73084bdbf26353e65637b09711b3a3a () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_ConvertSI32@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_ConvertUI32 (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_ConvertUI32@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_ConvertSI64 (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_ConvertSI64@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_ConvertUI64 (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_ConvertUI64@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_PromoteF32 (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_PromoteF32@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_DemoteF64 (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_DemoteF64@tok () Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_ReinterpretInt (Term) Term)
(declare-fun Wasm.Ast.FloatOp.uu___is_ReinterpretInt@tok () Term)
(declare-fun Wasm.Ast.IntOp.unop () Term)
(declare-fun Wasm.Ast.IntOp.Clz () Term)
(declare-fun Wasm.Ast.IntOp.Clz@tok () Term)
(declare-fun Wasm.Ast.IntOp.Ctz () Term)
(declare-fun Wasm.Ast.IntOp.Ctz@tok () Term)
(declare-fun Wasm.Ast.IntOp.Popcnt () Term)
(declare-fun Wasm.Ast.IntOp.Popcnt@tok () Term)
(define-fun is-Wasm.Ast.IntOp.unop ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 101) (= __@x0 Wasm.Ast.IntOp.unop)))
(define-fun is-Wasm.Ast.IntOp.Clz ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 107) (= __@x0 Wasm.Ast.IntOp.Clz)))
(define-fun is-Wasm.Ast.IntOp.Ctz ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 109) (= __@x0 Wasm.Ast.IntOp.Ctz)))
(define-fun is-Wasm.Ast.IntOp.Popcnt ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 111) (= __@x0 Wasm.Ast.IntOp.Popcnt)))
(declare-fun Wasm.Ast.IntOp.uu___is_Clz (Term) Term)
(declare-fun Tm_arrow_d0689b44c23edd72fd629b9358deaf01 () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Clz@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Ctz (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Ctz@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Popcnt (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Popcnt@tok () Term)
(declare-fun Wasm.Ast.IntOp.binop () Term)
(declare-fun Wasm.Ast.IntOp.Add () Term)
(declare-fun Wasm.Ast.IntOp.Add@tok () Term)
(declare-fun Wasm.Ast.IntOp.Sub () Term)
(declare-fun Wasm.Ast.IntOp.Sub@tok () Term)
(declare-fun Wasm.Ast.IntOp.Mul () Term)
(declare-fun Wasm.Ast.IntOp.Mul@tok () Term)
(declare-fun Wasm.Ast.IntOp.DivS () Term)
(declare-fun Wasm.Ast.IntOp.DivS@tok () Term)
(declare-fun Wasm.Ast.IntOp.DivU () Term)
(declare-fun Wasm.Ast.IntOp.DivU@tok () Term)
(declare-fun Wasm.Ast.IntOp.RemS () Term)
(declare-fun Wasm.Ast.IntOp.RemS@tok () Term)
(declare-fun Wasm.Ast.IntOp.RemU () Term)
(declare-fun Wasm.Ast.IntOp.RemU@tok () Term)
(declare-fun Wasm.Ast.IntOp.And () Term)
(declare-fun Wasm.Ast.IntOp.And@tok () Term)
(declare-fun Wasm.Ast.IntOp.Or () Term)
(declare-fun Wasm.Ast.IntOp.Or@tok () Term)
(declare-fun Wasm.Ast.IntOp.Xor () Term)
(declare-fun Wasm.Ast.IntOp.Xor@tok () Term)
(declare-fun Wasm.Ast.IntOp.Shl () Term)
(declare-fun Wasm.Ast.IntOp.Shl@tok () Term)
(declare-fun Wasm.Ast.IntOp.ShrS () Term)
(declare-fun Wasm.Ast.IntOp.ShrS@tok () Term)
(declare-fun Wasm.Ast.IntOp.ShrU () Term)
(declare-fun Wasm.Ast.IntOp.ShrU@tok () Term)
(declare-fun Wasm.Ast.IntOp.Rotl () Term)
(declare-fun Wasm.Ast.IntOp.Rotl@tok () Term)
(declare-fun Wasm.Ast.IntOp.Rotr () Term)
(declare-fun Wasm.Ast.IntOp.Rotr@tok () Term)
(define-fun is-Wasm.Ast.IntOp.binop ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 118) (= __@x0 Wasm.Ast.IntOp.binop)))
(define-fun is-Wasm.Ast.IntOp.Add ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 124) (= __@x0 Wasm.Ast.IntOp.Add)))
(define-fun is-Wasm.Ast.IntOp.Sub ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 126) (= __@x0 Wasm.Ast.IntOp.Sub)))
(define-fun is-Wasm.Ast.IntOp.Mul ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 128) (= __@x0 Wasm.Ast.IntOp.Mul)))
(define-fun is-Wasm.Ast.IntOp.DivS ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 130) (= __@x0 Wasm.Ast.IntOp.DivS)))
(define-fun is-Wasm.Ast.IntOp.DivU ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 132) (= __@x0 Wasm.Ast.IntOp.DivU)))
(define-fun is-Wasm.Ast.IntOp.RemS ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 134) (= __@x0 Wasm.Ast.IntOp.RemS)))
(define-fun is-Wasm.Ast.IntOp.RemU ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 136) (= __@x0 Wasm.Ast.IntOp.RemU)))
(define-fun is-Wasm.Ast.IntOp.And ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 138) (= __@x0 Wasm.Ast.IntOp.And)))
(define-fun is-Wasm.Ast.IntOp.Or ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 140) (= __@x0 Wasm.Ast.IntOp.Or)))
(define-fun is-Wasm.Ast.IntOp.Xor ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 142) (= __@x0 Wasm.Ast.IntOp.Xor)))
(define-fun is-Wasm.Ast.IntOp.Shl ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 144) (= __@x0 Wasm.Ast.IntOp.Shl)))
(define-fun is-Wasm.Ast.IntOp.ShrS ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 146) (= __@x0 Wasm.Ast.IntOp.ShrS)))
(define-fun is-Wasm.Ast.IntOp.ShrU ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 148) (= __@x0 Wasm.Ast.IntOp.ShrU)))
(define-fun is-Wasm.Ast.IntOp.Rotl ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 150) (= __@x0 Wasm.Ast.IntOp.Rotl)))
(define-fun is-Wasm.Ast.IntOp.Rotr ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 152) (= __@x0 Wasm.Ast.IntOp.Rotr)))
(declare-fun Wasm.Ast.IntOp.uu___is_Add (Term) Term)
(declare-fun Tm_arrow_82d454da1e4f495ad6bd50a036f0fe62 () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Add@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Sub (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Sub@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Mul (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Mul@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_DivS (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_DivS@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_DivU (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_DivU@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_RemS (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_RemS@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_RemU (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_RemU@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_And (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_And@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Or (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Or@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Xor (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Xor@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Shl (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Shl@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_ShrS (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_ShrS@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_ShrU (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_ShrU@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Rotl (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Rotl@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Rotr (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Rotr@tok () Term)
(declare-fun Wasm.Ast.IntOp.testop () Term)
(declare-fun Wasm.Ast.IntOp.Eqz () Term)
(declare-fun Wasm.Ast.IntOp.Eqz@tok () Term)
(define-fun is-Wasm.Ast.IntOp.testop ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 183) (= __@x0 Wasm.Ast.IntOp.testop)))
(define-fun is-Wasm.Ast.IntOp.Eqz ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 189) (= __@x0 Wasm.Ast.IntOp.Eqz)))
(declare-fun Wasm.Ast.IntOp.uu___is_Eqz (Term) Term)
(declare-fun Tm_arrow_077f0139eccb23150a0dbf58123d1483 () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Eqz@tok () Term)
(declare-fun Wasm.Ast.IntOp.relop () Term)
(declare-fun Wasm.Ast.IntOp.Eq () Term)
(declare-fun Wasm.Ast.IntOp.Eq@tok () Term)
(declare-fun Wasm.Ast.IntOp.Ne () Term)
(declare-fun Wasm.Ast.IntOp.Ne@tok () Term)
(declare-fun Wasm.Ast.IntOp.LtS () Term)
(declare-fun Wasm.Ast.IntOp.LtS@tok () Term)
(declare-fun Wasm.Ast.IntOp.LtU () Term)
(declare-fun Wasm.Ast.IntOp.LtU@tok () Term)
(declare-fun Wasm.Ast.IntOp.GtS () Term)
(declare-fun Wasm.Ast.IntOp.GtS@tok () Term)
(declare-fun Wasm.Ast.IntOp.GtU () Term)
(declare-fun Wasm.Ast.IntOp.GtU@tok () Term)
(declare-fun Wasm.Ast.IntOp.LeS () Term)
(declare-fun Wasm.Ast.IntOp.LeS@tok () Term)
(declare-fun Wasm.Ast.IntOp.LeU () Term)
(declare-fun Wasm.Ast.IntOp.LeU@tok () Term)
(declare-fun Wasm.Ast.IntOp.GeS () Term)
(declare-fun Wasm.Ast.IntOp.GeS@tok () Term)
(declare-fun Wasm.Ast.IntOp.GeU () Term)
(declare-fun Wasm.Ast.IntOp.GeU@tok () Term)
(define-fun is-Wasm.Ast.IntOp.relop ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 192) (= __@x0 Wasm.Ast.IntOp.relop)))
(define-fun is-Wasm.Ast.IntOp.Eq ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 198) (= __@x0 Wasm.Ast.IntOp.Eq)))
(define-fun is-Wasm.Ast.IntOp.Ne ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 200) (= __@x0 Wasm.Ast.IntOp.Ne)))
(define-fun is-Wasm.Ast.IntOp.LtS ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 202) (= __@x0 Wasm.Ast.IntOp.LtS)))
(define-fun is-Wasm.Ast.IntOp.LtU ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 204) (= __@x0 Wasm.Ast.IntOp.LtU)))
(define-fun is-Wasm.Ast.IntOp.GtS ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 206) (= __@x0 Wasm.Ast.IntOp.GtS)))
(define-fun is-Wasm.Ast.IntOp.GtU ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 208) (= __@x0 Wasm.Ast.IntOp.GtU)))
(define-fun is-Wasm.Ast.IntOp.LeS ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 210) (= __@x0 Wasm.Ast.IntOp.LeS)))
(define-fun is-Wasm.Ast.IntOp.LeU ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 212) (= __@x0 Wasm.Ast.IntOp.LeU)))
(define-fun is-Wasm.Ast.IntOp.GeS ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 214) (= __@x0 Wasm.Ast.IntOp.GeS)))
(define-fun is-Wasm.Ast.IntOp.GeU ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 216) (= __@x0 Wasm.Ast.IntOp.GeU)))
(declare-fun Wasm.Ast.IntOp.uu___is_Eq (Term) Term)
(declare-fun Tm_arrow_82b4546fd41acbc8ddb1db9e64845da4 () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Eq@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Ne (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_Ne@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_LtS (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_LtS@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_LtU (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_LtU@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_GtS (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_GtS@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_GtU (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_GtU@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_LeS (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_LeS@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_LeU (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_LeU@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_GeS (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_GeS@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_GeU (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_GeU@tok () Term)
(declare-fun Wasm.Ast.IntOp.cvtop () Term)
(declare-fun Wasm.Ast.IntOp.ExtendSI32 () Term)
(declare-fun Wasm.Ast.IntOp.ExtendSI32@tok () Term)
(declare-fun Wasm.Ast.IntOp.ExtendUI32 () Term)
(declare-fun Wasm.Ast.IntOp.ExtendUI32@tok () Term)
(declare-fun Wasm.Ast.IntOp.WrapI64 () Term)
(declare-fun Wasm.Ast.IntOp.WrapI64@tok () Term)
(declare-fun Wasm.Ast.IntOp.TruncSF32 () Term)
(declare-fun Wasm.Ast.IntOp.TruncSF32@tok () Term)
(declare-fun Wasm.Ast.IntOp.TruncUF32 () Term)
(declare-fun Wasm.Ast.IntOp.TruncUF32@tok () Term)
(declare-fun Wasm.Ast.IntOp.TruncSF64 () Term)
(declare-fun Wasm.Ast.IntOp.TruncSF64@tok () Term)
(declare-fun Wasm.Ast.IntOp.TruncUF64 () Term)
(declare-fun Wasm.Ast.IntOp.TruncUF64@tok () Term)
(declare-fun Wasm.Ast.IntOp.ReinterpretFloat () Term)
(declare-fun Wasm.Ast.IntOp.ReinterpretFloat@tok () Term)
(define-fun is-Wasm.Ast.IntOp.cvtop ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 237) (= __@x0 Wasm.Ast.IntOp.cvtop)))
(define-fun is-Wasm.Ast.IntOp.ExtendSI32 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 243) (= __@x0 Wasm.Ast.IntOp.ExtendSI32)))
(define-fun is-Wasm.Ast.IntOp.ExtendUI32 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 245) (= __@x0 Wasm.Ast.IntOp.ExtendUI32)))
(define-fun is-Wasm.Ast.IntOp.WrapI64 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 247) (= __@x0 Wasm.Ast.IntOp.WrapI64)))
(define-fun is-Wasm.Ast.IntOp.TruncSF32 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 249) (= __@x0 Wasm.Ast.IntOp.TruncSF32)))
(define-fun is-Wasm.Ast.IntOp.TruncUF32 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 251) (= __@x0 Wasm.Ast.IntOp.TruncUF32)))
(define-fun is-Wasm.Ast.IntOp.TruncSF64 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 253) (= __@x0 Wasm.Ast.IntOp.TruncSF64)))
(define-fun is-Wasm.Ast.IntOp.TruncUF64 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 255) (= __@x0 Wasm.Ast.IntOp.TruncUF64)))
(define-fun is-Wasm.Ast.IntOp.ReinterpretFloat ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 257) (= __@x0 Wasm.Ast.IntOp.ReinterpretFloat)))
(declare-fun Wasm.Ast.IntOp.uu___is_ExtendSI32 (Term) Term)
(declare-fun Tm_arrow_ccdefadc79d3d02f67f5d3d49546551a () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_ExtendSI32@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_ExtendUI32 (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_ExtendUI32@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_WrapI64 (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_WrapI64@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_TruncSF32 (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_TruncSF32@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_TruncUF32 (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_TruncUF32@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_TruncSF64 (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_TruncSF64@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_TruncUF64 (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_TruncUF64@tok () Term)
(declare-fun Wasm.Ast.IntOp.uu___is_ReinterpretFloat (Term) Term)
(declare-fun Wasm.Ast.IntOp.uu___is_ReinterpretFloat@tok () Term)
(declare-fun Wasm.Source.pos () Term)
(declare-fun Wasm.Source.Mkpos (Term Term Term) Term)
(declare-fun Wasm.Source.Mkpos_file (Term) Term)
(declare-fun Wasm.Source.Mkpos_line (Term) Term)
(declare-fun Wasm.Source.Mkpos_column (Term) Term)
(declare-fun Wasm.Source.Mkpos@tok () Term)
(declare-fun Tm_arrow_0f69e41740f9254321edfc2b59a6ebd3 () Term)
(define-fun is-Wasm.Source.pos ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 101) (= __@x0 Wasm.Source.pos)))
(define-fun is-Wasm.Source.Mkpos ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 107) (= __@x0 (Wasm.Source.Mkpos (Wasm.Source.Mkpos_file __@x0) (Wasm.Source.Mkpos_line __@x0) (Wasm.Source.Mkpos_column __@x0)))))
(declare-fun Wasm.Source.__proj__Mkpos__item__file (Term) Term)
(declare-fun Tm_arrow_e52ab157ec37f68fc9b044ed4b14d94f () Term)
(declare-fun Wasm.Source.__proj__Mkpos__item__file@tok () Term)
(declare-fun Wasm.Source.__proj__Mkpos__item__line (Term) Term)
(declare-fun Tm_arrow_ff56469fcba2a5a681b3c88c18730266 () Term)
(declare-fun Wasm.Source.__proj__Mkpos__item__line@tok () Term)
(declare-fun Wasm.Source.__proj__Mkpos__item__column (Term) Term)
(declare-fun Wasm.Source.__proj__Mkpos__item__column@tok () Term)
(declare-fun Wasm.Source.region () Term)
(declare-fun Wasm.Source.Mkregion (Term Term) Term)
(declare-fun Wasm.Source.Mkregion_left (Term) Term)
(declare-fun Wasm.Source.Mkregion_right (Term) Term)
(declare-fun Wasm.Source.Mkregion@tok () Term)
(declare-fun Tm_arrow_20ed0f3992881a508dff2d9b94c62f22 () Term)
(define-fun is-Wasm.Source.region ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 117) (= __@x0 Wasm.Source.region)))
(define-fun is-Wasm.Source.Mkregion ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 123) (= __@x0 (Wasm.Source.Mkregion (Wasm.Source.Mkregion_left __@x0) (Wasm.Source.Mkregion_right __@x0)))))
(declare-fun Wasm.Source.__proj__Mkregion__item__left (Term) Term)
(declare-fun Tm_arrow_b0d033fd4973fed082983112f79ea917 () Term)
(declare-fun Wasm.Source.__proj__Mkregion__item__left@tok () Term)
(declare-fun Wasm.Source.__proj__Mkregion__item__right (Term) Term)
(declare-fun Wasm.Source.__proj__Mkregion__item__right@tok () Term)
(declare-fun Wasm.Source.phrase (Term) Term)
(declare-fun Wasm.Source.phrase@x0 (Term) Term)
(declare-fun Wasm.Source.phrase@tok () Term)
(declare-fun Wasm.Source.Mkphrase (Term Term Term) Term)
(declare-fun Wasm.Source.Mkphrase__a (Term) Term)
(declare-fun Wasm.Source.Mkphrase_at (Term) Term)
(declare-fun Wasm.Source.Mkphrase_it (Term) Term)
(declare-fun Wasm.Source.Mkphrase@tok () Term)
(declare-fun Tm_arrow_70d68140cf0b68368f9b8ee825b7bd79 () Term)
(define-fun is-Wasm.Source.phrase ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 131) (exists ((@x0 Term)) (! (= __@x0 (Wasm.Source.phrase @x0)) :qid is-Wasm.Source.phrase))))
(define-fun is-Wasm.Source.Mkphrase ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 138) (= __@x0 (Wasm.Source.Mkphrase (Wasm.Source.Mkphrase__a __@x0) (Wasm.Source.Mkphrase_at __@x0) (Wasm.Source.Mkphrase_it __@x0)))))
(declare-fun Wasm.Source.__proj__Mkphrase__item__at (Term Term) Term)
(declare-fun Tm_arrow_972625316ffe45f46278b7b2103cd8b3 () Term)
(declare-fun Wasm.Source.__proj__Mkphrase__item__at@tok () Term)
(declare-fun Wasm.Source.__proj__Mkphrase__item__it (Term Term) Term)
(declare-fun Tm_arrow_f982b7264865265ab27910e2870a5f88 () Term)
(declare-fun Wasm.Source.__proj__Mkphrase__item__it@tok () Term)
(declare-fun Wasm.Source.no_pos (Dummy_sort) Term)
(declare-fun Wasm.Source.no_region (Dummy_sort) Term)
(declare-fun Wasm.Source.string_of_pos (Term) Term)
(declare-fun Wasm.Source.string_of_pos@tok () Term)
(declare-fun Wasm.Source.string_of_region (Term) Term)
(declare-fun Tm_arrow_e99a4e78bbacb183f645d1b506040cff () Term)
(declare-fun Wasm.Source.string_of_region@tok () Term)
(declare-fun Wasm.Source.op_At_At (Term Term Term) Term)
(declare-fun Tm_arrow_30ff9dbf07762ed8643f06ffc0358076 () Term)
(declare-fun Wasm.Source.op_At_At@tok () Term)
(declare-fun Wasm.Ast.unop () Term)
(declare-fun Wasm.Ast.binop () Term)
(declare-fun Wasm.Ast.testop () Term)
(declare-fun Wasm.Ast.relop () Term)
(declare-fun Wasm.Ast.cvtop () Term)
(declare-fun Wasm.Ast.memop (Term) Term)
(declare-fun Wasm.Ast.memop@x0 (Term) Term)
(declare-fun Wasm.Ast.memop@tok () Term)
(declare-fun Wasm.Ast.Mkmemop (Term Term Term Term Term) Term)
(declare-fun Wasm.Ast.Mkmemop__a (Term) Term)
(declare-fun Wasm.Ast.Mkmemop_ty (Term) Term)
(declare-fun Wasm.Ast.Mkmemop_align (Term) Term)
(declare-fun Wasm.Ast.Mkmemop_offset (Term) Term)
(declare-fun Wasm.Ast.Mkmemop_sz (Term) Term)
(declare-fun Wasm.Ast.Mkmemop@tok () Term)
(declare-fun Tm_arrow_23d87e4a499d666725bac5e5e7c0b7bd () Term)
(define-fun is-Wasm.Ast.memop ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 101) (exists ((@x0 Term)) (! (= __@x0 (Wasm.Ast.memop @x0)) :qid is-Wasm.Ast.memop))))
(define-fun is-Wasm.Ast.Mkmemop ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 108) (= __@x0 (Wasm.Ast.Mkmemop (Wasm.Ast.Mkmemop__a __@x0) (Wasm.Ast.Mkmemop_ty __@x0) (Wasm.Ast.Mkmemop_align __@x0) (Wasm.Ast.Mkmemop_offset __@x0) (Wasm.Ast.Mkmemop_sz __@x0)))))
(declare-fun Wasm.Ast.__proj__Mkmemop__item__ty (Term Term) Term)
(declare-fun Tm_arrow_33b46d2b7e5544c452e52f0b71e20896 () Term)
(declare-fun Wasm.Ast.__proj__Mkmemop__item__ty@tok () Term)
(declare-fun Wasm.Ast.__proj__Mkmemop__item__align (Term Term) Term)
(declare-fun Tm_arrow_8eee17166a23c269b8d87e02cdf6990e () Term)
(declare-fun Wasm.Ast.__proj__Mkmemop__item__align@tok () Term)
(declare-fun Wasm.Ast.__proj__Mkmemop__item__offset (Term Term) Term)
(declare-fun Tm_arrow_8510a54b829b5b35181c81a1a35ac8e0 () Term)
(declare-fun Wasm.Ast.__proj__Mkmemop__item__offset@tok () Term)
(declare-fun Wasm.Ast.__proj__Mkmemop__item__sz (Term Term) Term)
(declare-fun Tm_arrow_2fb2adf9a91598f36a295cf12461b29e () Term)
(declare-fun Wasm.Ast.__proj__Mkmemop__item__sz@tok () Term)
(declare-fun Wasm.Ast.loadop () Term)
(declare-fun Wasm.Ast.storeop () Term)
(declare-fun Wasm.Ast.var () Term)
(declare-fun Wasm.Ast.literal () Term)
(declare-fun Wasm.Ast.name () Term)
(declare-fun Wasm.Ast.instr_ () Term)
(declare-fun Wasm.Ast.Unreachable () Term)
(declare-fun Wasm.Ast.Unreachable@tok () Term)
(declare-fun Wasm.Ast.Nop () Term)
(declare-fun Wasm.Ast.Nop@tok () Term)
(declare-fun Wasm.Ast.Drop () Term)
(declare-fun Wasm.Ast.Drop@tok () Term)
(declare-fun Wasm.Ast.Select () Term)
(declare-fun Wasm.Ast.Select@tok () Term)
(declare-fun Wasm.Ast.Block (Term) Term)
(declare-fun Wasm.Ast.Block__0 (Term) Term)
(declare-fun Wasm.Ast.Block@tok () Term)
(declare-fun Wasm.Ast.Loop (Term) Term)
(declare-fun Wasm.Ast.Loop__0 (Term) Term)
(declare-fun Wasm.Ast.Loop@tok () Term)
(declare-fun Wasm.Ast.If (Term) Term)
(declare-fun Wasm.Ast.If__0 (Term) Term)
(declare-fun Wasm.Ast.If@tok () Term)
(declare-fun Wasm.Ast.Br (Term) Term)
(declare-fun Wasm.Ast.Br__0 (Term) Term)
(declare-fun Wasm.Ast.Br@tok () Term)
(declare-fun Wasm.Ast.BrIf (Term) Term)
(declare-fun Wasm.Ast.BrIf__0 (Term) Term)
(declare-fun Wasm.Ast.BrIf@tok () Term)
(declare-fun Wasm.Ast.BrTable (Term) Term)
(declare-fun Wasm.Ast.BrTable__0 (Term) Term)
(declare-fun Wasm.Ast.BrTable@tok () Term)
(declare-fun Wasm.Ast.Return () Term)
(declare-fun Wasm.Ast.Return@tok () Term)
(declare-fun Wasm.Ast.Call (Term) Term)
(declare-fun Wasm.Ast.Call__0 (Term) Term)
(declare-fun Wasm.Ast.Call@tok () Term)
(declare-fun Wasm.Ast.CallIndirect (Term) Term)
(declare-fun Wasm.Ast.CallIndirect__0 (Term) Term)
(declare-fun Wasm.Ast.CallIndirect@tok () Term)
(declare-fun Wasm.Ast.LocalGet (Term) Term)
(declare-fun Wasm.Ast.LocalGet__0 (Term) Term)
(declare-fun Wasm.Ast.LocalGet@tok () Term)
(declare-fun Wasm.Ast.LocalSet (Term) Term)
(declare-fun Wasm.Ast.LocalSet__0 (Term) Term)
(declare-fun Wasm.Ast.LocalSet@tok () Term)
(declare-fun Wasm.Ast.LocalTee (Term) Term)
(declare-fun Wasm.Ast.LocalTee__0 (Term) Term)
(declare-fun Wasm.Ast.LocalTee@tok () Term)
(declare-fun Wasm.Ast.GlobalGet (Term) Term)
(declare-fun Wasm.Ast.GlobalGet__0 (Term) Term)
(declare-fun Wasm.Ast.GlobalGet@tok () Term)
(declare-fun Wasm.Ast.GlobalSet (Term) Term)
(declare-fun Wasm.Ast.GlobalSet__0 (Term) Term)
(declare-fun Wasm.Ast.GlobalSet@tok () Term)
(declare-fun Wasm.Ast.Load (Term) Term)
(declare-fun Wasm.Ast.Load__0 (Term) Term)
(declare-fun Wasm.Ast.Load@tok () Term)
(declare-fun Wasm.Ast.Store (Term) Term)
(declare-fun Wasm.Ast.Store__0 (Term) Term)
(declare-fun Wasm.Ast.Store@tok () Term)
(declare-fun Wasm.Ast.MemorySize () Term)
(declare-fun Wasm.Ast.MemorySize@tok () Term)
(declare-fun Wasm.Ast.MemoryGrow () Term)
(declare-fun Wasm.Ast.MemoryGrow@tok () Term)
(declare-fun Wasm.Ast.Const (Term) Term)
(declare-fun Wasm.Ast.Const__0 (Term) Term)
(declare-fun Wasm.Ast.Const@tok () Term)
(declare-fun Wasm.Ast.Test (Term) Term)
(declare-fun Wasm.Ast.Test__0 (Term) Term)
(declare-fun Wasm.Ast.Test@tok () Term)
(declare-fun Wasm.Ast.Compare (Term) Term)
(declare-fun Wasm.Ast.Compare__0 (Term) Term)
(declare-fun Wasm.Ast.Compare@tok () Term)
(declare-fun Wasm.Ast.Unary (Term) Term)
(declare-fun Wasm.Ast.Unary__0 (Term) Term)
(declare-fun Wasm.Ast.Unary@tok () Term)
(declare-fun Wasm.Ast.Binary (Term) Term)
(declare-fun Wasm.Ast.Binary__0 (Term) Term)
(declare-fun Wasm.Ast.Binary@tok () Term)
(declare-fun Wasm.Ast.Convert (Term) Term)
(declare-fun Wasm.Ast.Convert__0 (Term) Term)
(declare-fun Wasm.Ast.Convert@tok () Term)
(declare-fun Tm_arrow_71d5a2f5b94753c7c571400f7383ddbb () Term)
(declare-fun Tm_arrow_13f970f93dd4ea45632bd28c43cd6415 () Term)
(declare-fun Tm_arrow_02f19b1387bfb65708cad34c5ab745b0 () Term)
(declare-fun Tm_arrow_2d7f9b49f6be2117db341f9f7e2ec4a8 () Term)
(declare-fun Tm_arrow_1f2ed834c430db641cee2fedd65b4b5f () Term)
(declare-fun Tm_arrow_cdea8fe548214afd4c3a0b938b2a6ee2 () Term)
(declare-fun Tm_arrow_64fe670075bf3f1ff1ebe7d2de4f6910 () Term)
(declare-fun Tm_arrow_edeb336107bdb568a7b9e7708f688d2a () Term)
(declare-fun Tm_arrow_10497bc4f939cfe2bb709a65f2b4f5d2 () Term)
(declare-fun Tm_arrow_11821967ccfc588ed140925fc2afe6e1 () Term)
(declare-fun Tm_arrow_d2c3aa3bf2bbaf7766f7f6c0365bf93e () Term)
(declare-fun Tm_arrow_8f9bf6d43e42094f161c5dad7c446493 () Term)
(define-fun is-Wasm.Ast.instr_ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 120) (= __@x0 Wasm.Ast.instr_)))
(define-fun is-Wasm.Ast.Unreachable ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 126) (= __@x0 Wasm.Ast.Unreachable)))
(define-fun is-Wasm.Ast.Nop ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 128) (= __@x0 Wasm.Ast.Nop)))
(define-fun is-Wasm.Ast.Drop ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 130) (= __@x0 Wasm.Ast.Drop)))
(define-fun is-Wasm.Ast.Select ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 132) (= __@x0 Wasm.Ast.Select)))
(define-fun is-Wasm.Ast.Block ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 134) (= __@x0 (Wasm.Ast.Block (Wasm.Ast.Block__0 __@x0)))))
(define-fun is-Wasm.Ast.Loop ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 139) (= __@x0 (Wasm.Ast.Loop (Wasm.Ast.Loop__0 __@x0)))))
(define-fun is-Wasm.Ast.If ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 144) (= __@x0 (Wasm.Ast.If (Wasm.Ast.If__0 __@x0)))))
(define-fun is-Wasm.Ast.Br ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 149) (= __@x0 (Wasm.Ast.Br (Wasm.Ast.Br__0 __@x0)))))
(define-fun is-Wasm.Ast.BrIf ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 154) (= __@x0 (Wasm.Ast.BrIf (Wasm.Ast.BrIf__0 __@x0)))))
(define-fun is-Wasm.Ast.BrTable ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 159) (= __@x0 (Wasm.Ast.BrTable (Wasm.Ast.BrTable__0 __@x0)))))
(define-fun is-Wasm.Ast.Return ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 164) (= __@x0 Wasm.Ast.Return)))
(define-fun is-Wasm.Ast.Call ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 166) (= __@x0 (Wasm.Ast.Call (Wasm.Ast.Call__0 __@x0)))))
(define-fun is-Wasm.Ast.CallIndirect ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 171) (= __@x0 (Wasm.Ast.CallIndirect (Wasm.Ast.CallIndirect__0 __@x0)))))
(define-fun is-Wasm.Ast.LocalGet ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 176) (= __@x0 (Wasm.Ast.LocalGet (Wasm.Ast.LocalGet__0 __@x0)))))
(define-fun is-Wasm.Ast.LocalSet ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 181) (= __@x0 (Wasm.Ast.LocalSet (Wasm.Ast.LocalSet__0 __@x0)))))
(define-fun is-Wasm.Ast.LocalTee ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 186) (= __@x0 (Wasm.Ast.LocalTee (Wasm.Ast.LocalTee__0 __@x0)))))
(define-fun is-Wasm.Ast.GlobalGet ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 191) (= __@x0 (Wasm.Ast.GlobalGet (Wasm.Ast.GlobalGet__0 __@x0)))))
(define-fun is-Wasm.Ast.GlobalSet ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 196) (= __@x0 (Wasm.Ast.GlobalSet (Wasm.Ast.GlobalSet__0 __@x0)))))
(define-fun is-Wasm.Ast.Load ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 201) (= __@x0 (Wasm.Ast.Load (Wasm.Ast.Load__0 __@x0)))))
(define-fun is-Wasm.Ast.Store ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 206) (= __@x0 (Wasm.Ast.Store (Wasm.Ast.Store__0 __@x0)))))
(define-fun is-Wasm.Ast.MemorySize ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 211) (= __@x0 Wasm.Ast.MemorySize)))
(define-fun is-Wasm.Ast.MemoryGrow ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 213) (= __@x0 Wasm.Ast.MemoryGrow)))
(define-fun is-Wasm.Ast.Const ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 215) (= __@x0 (Wasm.Ast.Const (Wasm.Ast.Const__0 __@x0)))))
(define-fun is-Wasm.Ast.Test ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 220) (= __@x0 (Wasm.Ast.Test (Wasm.Ast.Test__0 __@x0)))))
(define-fun is-Wasm.Ast.Compare ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 225) (= __@x0 (Wasm.Ast.Compare (Wasm.Ast.Compare__0 __@x0)))))
(define-fun is-Wasm.Ast.Unary ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 230) (= __@x0 (Wasm.Ast.Unary (Wasm.Ast.Unary__0 __@x0)))))
(define-fun is-Wasm.Ast.Binary ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 235) (= __@x0 (Wasm.Ast.Binary (Wasm.Ast.Binary__0 __@x0)))))
(define-fun is-Wasm.Ast.Convert ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 240) (= __@x0 (Wasm.Ast.Convert (Wasm.Ast.Convert__0 __@x0)))))
(declare-fun Wasm.Ast.uu___is_Unreachable (Term) Term)
(declare-fun Tm_arrow_38f88737e902384551ee4af7fceece69 () Term)
(declare-fun Wasm.Ast.uu___is_Unreachable@tok () Term)
(declare-fun Wasm.Ast.uu___is_Nop (Term) Term)
(declare-fun Wasm.Ast.uu___is_Nop@tok () Term)
(declare-fun Wasm.Ast.uu___is_Drop (Term) Term)
(declare-fun Wasm.Ast.uu___is_Drop@tok () Term)
(declare-fun Wasm.Ast.uu___is_Select (Term) Term)
(declare-fun Wasm.Ast.uu___is_Select@tok () Term)
(declare-fun Wasm.Ast.uu___is_Block (Term) Term)
(declare-fun Wasm.Ast.uu___is_Block@tok () Term)
(declare-fun Tm_refine_4114828a93ff2c565b2b64b615e79539 () Term)
(declare-fun Wasm.Ast.__proj__Block__item___0 (Term) Term)
(declare-fun Tm_arrow_c4e8b0ed665ac76ccfd81541152e3ac8 () Term)
(declare-fun Wasm.Ast.__proj__Block__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_Loop (Term) Term)
(declare-fun Wasm.Ast.uu___is_Loop@tok () Term)
(declare-fun Tm_refine_62c6684a8f959fbbe3cbe5316fd9944f () Term)
(declare-fun Wasm.Ast.__proj__Loop__item___0 (Term) Term)
(declare-fun Tm_arrow_4aba8de7672b220075817eb9d5a44feb () Term)
(declare-fun Wasm.Ast.__proj__Loop__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_If (Term) Term)
(declare-fun Wasm.Ast.uu___is_If@tok () Term)
(declare-fun Tm_refine_cf1e4105f3bd3ce63f04a0880f5a0230 () Term)
(declare-fun Wasm.Ast.__proj__If__item___0 (Term) Term)
(declare-fun Tm_arrow_b41f44655a42c11ef2dfe1e48fa457ab () Term)
(declare-fun Wasm.Ast.__proj__If__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_Br (Term) Term)
(declare-fun Wasm.Ast.uu___is_Br@tok () Term)
(declare-fun Tm_refine_eeef0ab37f63323881114054ce0a195a () Term)
(declare-fun Wasm.Ast.__proj__Br__item___0 (Term) Term)
(declare-fun Tm_arrow_73b98756f9f407c13e86cb3630894270 () Term)
(declare-fun Wasm.Ast.__proj__Br__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_BrIf (Term) Term)
(declare-fun Wasm.Ast.uu___is_BrIf@tok () Term)
(declare-fun Tm_refine_5c4d5a90efb6b6e0454788aa9fdd6063 () Term)
(declare-fun Wasm.Ast.__proj__BrIf__item___0 (Term) Term)
(declare-fun Tm_arrow_c60ad5ba2e79f6737dec47daeaa63545 () Term)
(declare-fun Wasm.Ast.__proj__BrIf__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_BrTable (Term) Term)
(declare-fun Wasm.Ast.uu___is_BrTable@tok () Term)
(declare-fun Tm_refine_93af686bf03ef3cd2a69453c8c5dc0d9 () Term)
(declare-fun Wasm.Ast.__proj__BrTable__item___0 (Term) Term)
(declare-fun Tm_arrow_031a4ff430ef3fc3318defa0f58810b4 () Term)
(declare-fun Wasm.Ast.__proj__BrTable__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_Return (Term) Term)
(declare-fun Wasm.Ast.uu___is_Return@tok () Term)
(declare-fun Wasm.Ast.uu___is_Call (Term) Term)
(declare-fun Wasm.Ast.uu___is_Call@tok () Term)
(declare-fun Tm_refine_06352f7ee6b645af9658756dbb342cb4 () Term)
(declare-fun Wasm.Ast.__proj__Call__item___0 (Term) Term)
(declare-fun Tm_arrow_4f29d387fe63204d20730385319326c7 () Term)
(declare-fun Wasm.Ast.__proj__Call__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_CallIndirect (Term) Term)
(declare-fun Wasm.Ast.uu___is_CallIndirect@tok () Term)
(declare-fun Tm_refine_4a61b131b735e62eecceab70a7ead6c2 () Term)
(declare-fun Wasm.Ast.__proj__CallIndirect__item___0 (Term) Term)
(declare-fun Tm_arrow_465a01793fee8eba32b237266f40a9eb () Term)
(declare-fun Wasm.Ast.__proj__CallIndirect__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_LocalGet (Term) Term)
(declare-fun Wasm.Ast.uu___is_LocalGet@tok () Term)
(declare-fun Tm_refine_12b378fa861c68e919208429c25f705a () Term)
(declare-fun Wasm.Ast.__proj__LocalGet__item___0 (Term) Term)
(declare-fun Tm_arrow_fb7e507ba21c64016ee7346db092d9a8 () Term)
(declare-fun Wasm.Ast.__proj__LocalGet__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_LocalSet (Term) Term)
(declare-fun Wasm.Ast.uu___is_LocalSet@tok () Term)
(declare-fun Tm_refine_b4d104c70d9c4c051c5e5ef35ee85cde () Term)
(declare-fun Wasm.Ast.__proj__LocalSet__item___0 (Term) Term)
(declare-fun Tm_arrow_07b486d7ca608fef29e7533092396da2 () Term)
(declare-fun Wasm.Ast.__proj__LocalSet__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_LocalTee (Term) Term)
(declare-fun Wasm.Ast.uu___is_LocalTee@tok () Term)
(declare-fun Tm_refine_aba1d399e51e4a0b46733cf49ba67bdd () Term)
(declare-fun Wasm.Ast.__proj__LocalTee__item___0 (Term) Term)
(declare-fun Tm_arrow_df437e416b7a0eb123aa9aee0c298c8c () Term)
(declare-fun Wasm.Ast.__proj__LocalTee__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_GlobalGet (Term) Term)
(declare-fun Wasm.Ast.uu___is_GlobalGet@tok () Term)
(declare-fun Tm_refine_0971c1194b7d8acbcf3c27994a41ff21 () Term)
(declare-fun Wasm.Ast.__proj__GlobalGet__item___0 (Term) Term)
(declare-fun Tm_arrow_94d234b80eb75b33a731184c3f9413d8 () Term)
(declare-fun Wasm.Ast.__proj__GlobalGet__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_GlobalSet (Term) Term)
(declare-fun Wasm.Ast.uu___is_GlobalSet@tok () Term)
(declare-fun Tm_refine_077393739e7ac6bfc32b0f25ac6162f8 () Term)
(declare-fun Wasm.Ast.__proj__GlobalSet__item___0 (Term) Term)
(declare-fun Tm_arrow_687bb9279e5c3399ec3d84949dd7b942 () Term)
(declare-fun Wasm.Ast.__proj__GlobalSet__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_Load (Term) Term)
(declare-fun Wasm.Ast.uu___is_Load@tok () Term)
(declare-fun Tm_refine_050590d3753966ad3150ec622b42f80a () Term)
(declare-fun Wasm.Ast.__proj__Load__item___0 (Term) Term)
(declare-fun Tm_arrow_0c2b902b2671df68940d6ccfd8e1891e () Term)
(declare-fun Wasm.Ast.__proj__Load__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_Store (Term) Term)
(declare-fun Wasm.Ast.uu___is_Store@tok () Term)
(declare-fun Tm_refine_cf4ea3d653b9c03c90ee026bd2b64eda () Term)
(declare-fun Wasm.Ast.__proj__Store__item___0 (Term) Term)
(declare-fun Tm_arrow_794abf28c64579dfa5be95863462c58b () Term)
(declare-fun Wasm.Ast.__proj__Store__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_MemorySize (Term) Term)
(declare-fun Wasm.Ast.uu___is_MemorySize@tok () Term)
(declare-fun Wasm.Ast.uu___is_MemoryGrow (Term) Term)
(declare-fun Wasm.Ast.uu___is_MemoryGrow@tok () Term)
(declare-fun Wasm.Ast.uu___is_Const (Term) Term)
(declare-fun Wasm.Ast.uu___is_Const@tok () Term)
(declare-fun Tm_refine_d82d0e02e735eb9ebab10b81238a2603 () Term)
(declare-fun Wasm.Ast.__proj__Const__item___0 (Term) Term)
(declare-fun Tm_arrow_a00a2d67961c777d8221e2570c5f9df8 () Term)
(declare-fun Wasm.Ast.__proj__Const__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_Test (Term) Term)
(declare-fun Wasm.Ast.uu___is_Test@tok () Term)
(declare-fun Tm_refine_167700306c85e5a5aa14ed889336e9ea () Term)
(declare-fun Wasm.Ast.__proj__Test__item___0 (Term) Term)
(declare-fun Tm_arrow_7a06cc9007a48a6f2d389d0d7c138760 () Term)
(declare-fun Wasm.Ast.__proj__Test__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_Compare (Term) Term)
(declare-fun Wasm.Ast.uu___is_Compare@tok () Term)
(declare-fun Tm_refine_0ef7e58b828ca754b2e6a14569e95e48 () Term)
(declare-fun Wasm.Ast.__proj__Compare__item___0 (Term) Term)
(declare-fun Tm_arrow_c0405da1b07c7d3b0abf6622e36c6ef9 () Term)
(declare-fun Wasm.Ast.__proj__Compare__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_Unary (Term) Term)
(declare-fun Wasm.Ast.uu___is_Unary@tok () Term)
(declare-fun Tm_refine_f8ad8b03ea6ed7029a6819614f0e3065 () Term)
(declare-fun Wasm.Ast.__proj__Unary__item___0 (Term) Term)
(declare-fun Tm_arrow_3f725e6cb7d78112181b9c78dbe7d88e () Term)
(declare-fun Wasm.Ast.__proj__Unary__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_Binary (Term) Term)
(declare-fun Wasm.Ast.uu___is_Binary@tok () Term)
(declare-fun Tm_refine_0d6a4f4bada7533fe4cb5ce4ed8a2311 () Term)
(declare-fun Wasm.Ast.__proj__Binary__item___0 (Term) Term)
(declare-fun Tm_arrow_89e94f6d6c0ef6832eb422088134172d () Term)
(declare-fun Wasm.Ast.__proj__Binary__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_Convert (Term) Term)
(declare-fun Wasm.Ast.uu___is_Convert@tok () Term)
(declare-fun Tm_refine_ece95d249b95dbcd16a3b1557c5bf54a () Term)
(declare-fun Wasm.Ast.__proj__Convert__item___0 (Term) Term)
(declare-fun Tm_arrow_a9485ab1ea48728f645a2d4c35a2d971 () Term)
(declare-fun Wasm.Ast.__proj__Convert__item___0@tok () Term)
(declare-fun Wasm.Ast.instr () Term)
(declare-fun Wasm.Ast.const () Term)
(declare-fun Wasm.Ast.global_ () Term)
(declare-fun Wasm.Ast.Mkglobal_ (Term Term) Term)
(declare-fun Wasm.Ast.Mkglobal__gtype (Term) Term)
(declare-fun Wasm.Ast.Mkglobal__value (Term) Term)
(declare-fun Wasm.Ast.Mkglobal_@tok () Term)
(declare-fun Tm_arrow_28c70d12925d324a4a2906ae704867ae () Term)
(define-fun is-Wasm.Ast.global_ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 384) (= __@x0 Wasm.Ast.global_)))
(define-fun is-Wasm.Ast.Mkglobal_ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 390) (= __@x0 (Wasm.Ast.Mkglobal_ (Wasm.Ast.Mkglobal__gtype __@x0) (Wasm.Ast.Mkglobal__value __@x0)))))
(declare-fun Wasm.Ast.__proj__Mkglobal___item__gtype (Term) Term)
(declare-fun Tm_arrow_c18b8b1e3ef898cf77b720288dd0583b () Term)
(declare-fun Wasm.Ast.__proj__Mkglobal___item__gtype@tok () Term)
(declare-fun Wasm.Ast.__proj__Mkglobal___item__value (Term) Term)
(declare-fun Tm_arrow_f0d4a8f72ef65900976e085c678cc2f0 () Term)
(declare-fun Wasm.Ast.__proj__Mkglobal___item__value@tok () Term)
(declare-fun Wasm.Ast.global () Term)
(declare-fun Wasm.Ast.func_ () Term)
(declare-fun Wasm.Ast.Mkfunc_ (Term Term Term) Term)
(declare-fun Wasm.Ast.Mkfunc__ftype (Term) Term)
(declare-fun Wasm.Ast.Mkfunc__flocals (Term) Term)
(declare-fun Wasm.Ast.Mkfunc__body (Term) Term)
(declare-fun Wasm.Ast.Mkfunc_@tok () Term)
(declare-fun Tm_arrow_f83141ff2045d40b8bdf37a002a1cd33 () Term)
(define-fun is-Wasm.Ast.func_ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 398) (= __@x0 Wasm.Ast.func_)))
(define-fun is-Wasm.Ast.Mkfunc_ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 404) (= __@x0 (Wasm.Ast.Mkfunc_ (Wasm.Ast.Mkfunc__ftype __@x0) (Wasm.Ast.Mkfunc__flocals __@x0) (Wasm.Ast.Mkfunc__body __@x0)))))
(declare-fun Wasm.Ast.__proj__Mkfunc___item__ftype (Term) Term)
(declare-fun Tm_arrow_626f5e3a6903515fe40c32bd8b8f73cb () Term)
(declare-fun Wasm.Ast.__proj__Mkfunc___item__ftype@tok () Term)
(declare-fun Wasm.Ast.__proj__Mkfunc___item__flocals (Term) Term)
(declare-fun Tm_arrow_a3b01f32f4321aa4711fac34044ea558 () Term)
(declare-fun Wasm.Ast.__proj__Mkfunc___item__flocals@tok () Term)
(declare-fun Wasm.Ast.__proj__Mkfunc___item__body (Term) Term)
(declare-fun Tm_arrow_607bb1a47fef58837e3ba6975704f5cc () Term)
(declare-fun Wasm.Ast.__proj__Mkfunc___item__body@tok () Term)
(declare-fun Wasm.Ast.func () Term)
(declare-fun Wasm.Ast.table_ () Term)
(declare-fun Wasm.Ast.Mktable_ (Term) Term)
(declare-fun Wasm.Ast.Mktable__ttype (Term) Term)
(declare-fun Wasm.Ast.Mktable_@tok () Term)
(declare-fun Tm_arrow_c74c08a0c024e30d465fdc4fbf8914ca () Term)
(define-fun is-Wasm.Ast.table_ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 414) (= __@x0 Wasm.Ast.table_)))
(define-fun is-Wasm.Ast.Mktable_ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 420) (= __@x0 (Wasm.Ast.Mktable_ (Wasm.Ast.Mktable__ttype __@x0)))))
(declare-fun Wasm.Ast.__proj__Mktable___item__ttype (Term) Term)
(declare-fun Tm_arrow_4387d6d5ff718d1540b2903da837b21f () Term)
(declare-fun Wasm.Ast.__proj__Mktable___item__ttype@tok () Term)
(declare-fun Wasm.Ast.table () Term)
(declare-fun Wasm.Ast.memory_ () Term)
(declare-fun Wasm.Ast.Mkmemory_ (Term) Term)
(declare-fun Wasm.Ast.Mkmemory__mtype (Term) Term)
(declare-fun Wasm.Ast.Mkmemory_@tok () Term)
(declare-fun Tm_arrow_10c089c44a9f2b07c37027756bcd8eac () Term)
(define-fun is-Wasm.Ast.memory_ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 426) (= __@x0 Wasm.Ast.memory_)))
(define-fun is-Wasm.Ast.Mkmemory_ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 432) (= __@x0 (Wasm.Ast.Mkmemory_ (Wasm.Ast.Mkmemory__mtype __@x0)))))
(declare-fun Wasm.Ast.__proj__Mkmemory___item__mtype (Term) Term)
(declare-fun Tm_arrow_626bb8aab019003245c3bdcb70c3c752 () Term)
(declare-fun Wasm.Ast.__proj__Mkmemory___item__mtype@tok () Term)
(declare-fun Wasm.Ast.memory () Term)
(declare-fun Wasm.Ast.segment_ (Term) Term)
(declare-fun Wasm.Ast.segment_@x0 (Term) Term)
(declare-fun Wasm.Ast.segment_@tok () Term)
(declare-fun Wasm.Ast.Mksegment_ (Term Term Term Term) Term)
(declare-fun Wasm.Ast.Mksegment__data (Term) Term)
(declare-fun Wasm.Ast.Mksegment__index (Term) Term)
(declare-fun Wasm.Ast.Mksegment__seg_offset (Term) Term)
(declare-fun Wasm.Ast.Mksegment__init (Term) Term)
(declare-fun Wasm.Ast.Mksegment_@tok () Term)
(declare-fun Tm_arrow_6beec2d5d0083ce091fdc5966f02211b () Term)
(define-fun is-Wasm.Ast.segment_ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 438) (exists ((@x0 Term)) (! (= __@x0 (Wasm.Ast.segment_ @x0)) :qid is-Wasm.Ast.segment_))))
(define-fun is-Wasm.Ast.Mksegment_ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 445) (= __@x0 (Wasm.Ast.Mksegment_ (Wasm.Ast.Mksegment__data __@x0) (Wasm.Ast.Mksegment__index __@x0) (Wasm.Ast.Mksegment__seg_offset __@x0) (Wasm.Ast.Mksegment__init __@x0)))))
(declare-fun Wasm.Ast.__proj__Mksegment___item__index (Term Term) Term)
(declare-fun Tm_arrow_4e39cb5363c100ac061af95bcd51d557 () Term)
(declare-fun Wasm.Ast.__proj__Mksegment___item__index@tok () Term)
(declare-fun Wasm.Ast.__proj__Mksegment___item__seg_offset (Term Term) Term)
(declare-fun Tm_arrow_f698ee7baf3cc4af77d10d1937c090a5 () Term)
(declare-fun Wasm.Ast.__proj__Mksegment___item__seg_offset@tok () Term)
(declare-fun Wasm.Ast.__proj__Mksegment___item__init (Term Term) Term)
(declare-fun Tm_arrow_e666d15914b55486cb07ce777828a09e () Term)
(declare-fun Wasm.Ast.__proj__Mksegment___item__init@tok () Term)
(declare-fun Wasm.Ast.segment (Term) Term)
(declare-fun Wasm.Ast.segment@tok () Term)
(declare-fun Wasm.Ast.table_segment () Term)
(declare-fun Wasm.Ast.memory_segment () Term)
(declare-fun Wasm.Ast.type_ () Term)
(declare-fun Wasm.Ast.export_desc_ () Term)
(declare-fun Wasm.Ast.FuncExport (Term) Term)
(declare-fun Wasm.Ast.FuncExport__0 (Term) Term)
(declare-fun Wasm.Ast.FuncExport@tok () Term)
(declare-fun Wasm.Ast.TableExport (Term) Term)
(declare-fun Wasm.Ast.TableExport__0 (Term) Term)
(declare-fun Wasm.Ast.TableExport@tok () Term)
(declare-fun Wasm.Ast.MemoryExport (Term) Term)
(declare-fun Wasm.Ast.MemoryExport__0 (Term) Term)
(declare-fun Wasm.Ast.MemoryExport@tok () Term)
(declare-fun Wasm.Ast.GlobalExport (Term) Term)
(declare-fun Wasm.Ast.GlobalExport__0 (Term) Term)
(declare-fun Wasm.Ast.GlobalExport@tok () Term)
(declare-fun Tm_arrow_f61ad59cfae057d01dacfce9aa4e34b2 () Term)
(define-fun is-Wasm.Ast.export_desc_ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 457) (= __@x0 Wasm.Ast.export_desc_)))
(define-fun is-Wasm.Ast.FuncExport ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 463) (= __@x0 (Wasm.Ast.FuncExport (Wasm.Ast.FuncExport__0 __@x0)))))
(define-fun is-Wasm.Ast.TableExport ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 468) (= __@x0 (Wasm.Ast.TableExport (Wasm.Ast.TableExport__0 __@x0)))))
(define-fun is-Wasm.Ast.MemoryExport ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 473) (= __@x0 (Wasm.Ast.MemoryExport (Wasm.Ast.MemoryExport__0 __@x0)))))
(define-fun is-Wasm.Ast.GlobalExport ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 478) (= __@x0 (Wasm.Ast.GlobalExport (Wasm.Ast.GlobalExport__0 __@x0)))))
(declare-fun Wasm.Ast.uu___is_FuncExport (Term) Term)
(declare-fun Tm_arrow_2d606d150aff93baf568066e85a51cc5 () Term)
(declare-fun Wasm.Ast.uu___is_FuncExport@tok () Term)
(declare-fun Tm_refine_2e514abe73eba8fd7acecd5b1032127b () Term)
(declare-fun Wasm.Ast.__proj__FuncExport__item___0 (Term) Term)
(declare-fun Tm_arrow_0bf0ad91ed4bd4f6a5974c696a85f4e7 () Term)
(declare-fun Wasm.Ast.__proj__FuncExport__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_TableExport (Term) Term)
(declare-fun Wasm.Ast.uu___is_TableExport@tok () Term)
(declare-fun Tm_refine_a75a6d4f11b233ea29e8c13f3ec6511f () Term)
(declare-fun Wasm.Ast.__proj__TableExport__item___0 (Term) Term)
(declare-fun Tm_arrow_977ae98c8e57cfe981e5b34923337299 () Term)
(declare-fun Wasm.Ast.__proj__TableExport__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_MemoryExport (Term) Term)
(declare-fun Wasm.Ast.uu___is_MemoryExport@tok () Term)
(declare-fun Tm_refine_c56f47cc96a9b472408bc0e12db89379 () Term)
(declare-fun Wasm.Ast.__proj__MemoryExport__item___0 (Term) Term)
(declare-fun Tm_arrow_461c1ae1dc5762e983ec80fa2d614359 () Term)
(declare-fun Wasm.Ast.__proj__MemoryExport__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_GlobalExport (Term) Term)
(declare-fun Wasm.Ast.uu___is_GlobalExport@tok () Term)
(declare-fun Tm_refine_85f11657a108d858bf9cad85749b98dd () Term)
(declare-fun Wasm.Ast.__proj__GlobalExport__item___0 (Term) Term)
(declare-fun Tm_arrow_dcec5229149a99226865cfec1ca56e1c () Term)
(declare-fun Wasm.Ast.__proj__GlobalExport__item___0@tok () Term)
(declare-fun Wasm.Ast.export_desc () Term)
(declare-fun Wasm.Ast.export_ () Term)
(declare-fun Wasm.Ast.Mkexport_ (Term Term) Term)
(declare-fun Wasm.Ast.Mkexport__name (Term) Term)
(declare-fun Wasm.Ast.Mkexport__edesc (Term) Term)
(declare-fun Wasm.Ast.Mkexport_@tok () Term)
(declare-fun Tm_arrow_e3898518c55b3baa4d2a6c2d0ab4b285 () Term)
(define-fun is-Wasm.Ast.export_ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 506) (= __@x0 Wasm.Ast.export_)))
(define-fun is-Wasm.Ast.Mkexport_ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 512) (= __@x0 (Wasm.Ast.Mkexport_ (Wasm.Ast.Mkexport__name __@x0) (Wasm.Ast.Mkexport__edesc __@x0)))))
(declare-fun Wasm.Ast.__proj__Mkexport___item__name (Term) Term)
(declare-fun Tm_arrow_3ac73e35c820ceb24bdcb279c0d75125 () Term)
(declare-fun Wasm.Ast.__proj__Mkexport___item__name@tok () Term)
(declare-fun Wasm.Ast.__proj__Mkexport___item__edesc (Term) Term)
(declare-fun Tm_arrow_43ad25a0f89cae6a351cb3cefe5ce1a0 () Term)
(declare-fun Wasm.Ast.__proj__Mkexport___item__edesc@tok () Term)
(declare-fun Wasm.Ast.export () Term)
(declare-fun Wasm.Ast.import_desc_ () Term)
(declare-fun Wasm.Ast.FuncImport (Term) Term)
(declare-fun Wasm.Ast.FuncImport__0 (Term) Term)
(declare-fun Wasm.Ast.FuncImport@tok () Term)
(declare-fun Wasm.Ast.TableImport (Term) Term)
(declare-fun Wasm.Ast.TableImport__0 (Term) Term)
(declare-fun Wasm.Ast.TableImport@tok () Term)
(declare-fun Wasm.Ast.MemoryImport (Term) Term)
(declare-fun Wasm.Ast.MemoryImport__0 (Term) Term)
(declare-fun Wasm.Ast.MemoryImport@tok () Term)
(declare-fun Wasm.Ast.GlobalImport (Term) Term)
(declare-fun Wasm.Ast.GlobalImport__0 (Term) Term)
(declare-fun Wasm.Ast.GlobalImport@tok () Term)
(declare-fun Tm_arrow_ba57a5ffba1f2884deea9c268d5ed428 () Term)
(declare-fun Tm_arrow_a97fe1a540a96a6a5abf651fbb34c899 () Term)
(declare-fun Tm_arrow_0c9613064f31f84f055a0b556ab3dad4 () Term)
(declare-fun Tm_arrow_1cbd3a07f282657fd05f56920e97b37b () Term)
(define-fun is-Wasm.Ast.import_desc_ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 520) (= __@x0 Wasm.Ast.import_desc_)))
(define-fun is-Wasm.Ast.FuncImport ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 526) (= __@x0 (Wasm.Ast.FuncImport (Wasm.Ast.FuncImport__0 __@x0)))))
(define-fun is-Wasm.Ast.TableImport ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 531) (= __@x0 (Wasm.Ast.TableImport (Wasm.Ast.TableImport__0 __@x0)))))
(define-fun is-Wasm.Ast.MemoryImport ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 536) (= __@x0 (Wasm.Ast.MemoryImport (Wasm.Ast.MemoryImport__0 __@x0)))))
(define-fun is-Wasm.Ast.GlobalImport ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 541) (= __@x0 (Wasm.Ast.GlobalImport (Wasm.Ast.GlobalImport__0 __@x0)))))
(declare-fun Wasm.Ast.uu___is_FuncImport (Term) Term)
(declare-fun Tm_arrow_14d8551dddb7771868bf4d350b463c16 () Term)
(declare-fun Wasm.Ast.uu___is_FuncImport@tok () Term)
(declare-fun Tm_refine_1adc979f3e9d33690ff31154e0698fb1 () Term)
(declare-fun Wasm.Ast.__proj__FuncImport__item___0 (Term) Term)
(declare-fun Tm_arrow_c835e99667f18a2c93246ed7de662045 () Term)
(declare-fun Wasm.Ast.__proj__FuncImport__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_TableImport (Term) Term)
(declare-fun Wasm.Ast.uu___is_TableImport@tok () Term)
(declare-fun Tm_refine_09d13d6898a82ba5162180035f949611 () Term)
(declare-fun Wasm.Ast.__proj__TableImport__item___0 (Term) Term)
(declare-fun Tm_arrow_0065992b43a685b435c870dded6f2904 () Term)
(declare-fun Wasm.Ast.__proj__TableImport__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_MemoryImport (Term) Term)
(declare-fun Wasm.Ast.uu___is_MemoryImport@tok () Term)
(declare-fun Tm_refine_73af94f9c5c737d35b31d40239bbb68f () Term)
(declare-fun Wasm.Ast.__proj__MemoryImport__item___0 (Term) Term)
(declare-fun Tm_arrow_110619b0d07be73f0b09251ee861b611 () Term)
(declare-fun Wasm.Ast.__proj__MemoryImport__item___0@tok () Term)
(declare-fun Wasm.Ast.uu___is_GlobalImport (Term) Term)
(declare-fun Wasm.Ast.uu___is_GlobalImport@tok () Term)
(declare-fun Tm_refine_545b14629c1823c1f4e1c3d3d3bfaec8 () Term)
(declare-fun Wasm.Ast.__proj__GlobalImport__item___0 (Term) Term)
(declare-fun Tm_arrow_770972f9755d1166fdb366161369c2df () Term)
(declare-fun Wasm.Ast.__proj__GlobalImport__item___0@tok () Term)
(declare-fun Wasm.Ast.import_desc () Term)
(declare-fun Wasm.Ast.import_ () Term)
(declare-fun Wasm.Ast.Mkimport_ (Term Term Term) Term)
(declare-fun Wasm.Ast.Mkimport__module_name (Term) Term)
(declare-fun Wasm.Ast.Mkimport__item_name (Term) Term)
(declare-fun Wasm.Ast.Mkimport__idesc (Term) Term)
(declare-fun Wasm.Ast.Mkimport_@tok () Term)
(declare-fun Tm_arrow_13c33b734ab3eb5318c7e34979cda1bf () Term)
(define-fun is-Wasm.Ast.import_ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 569) (= __@x0 Wasm.Ast.import_)))
(define-fun is-Wasm.Ast.Mkimport_ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 575) (= __@x0 (Wasm.Ast.Mkimport_ (Wasm.Ast.Mkimport__module_name __@x0) (Wasm.Ast.Mkimport__item_name __@x0) (Wasm.Ast.Mkimport__idesc __@x0)))))
(declare-fun Wasm.Ast.__proj__Mkimport___item__module_name (Term) Term)
(declare-fun Tm_arrow_86b45f67798f9076ee7c082acebabd1a () Term)
(declare-fun Wasm.Ast.__proj__Mkimport___item__module_name@tok () Term)
(declare-fun Wasm.Ast.__proj__Mkimport___item__item_name (Term) Term)
(declare-fun Wasm.Ast.__proj__Mkimport___item__item_name@tok () Term)
(declare-fun Wasm.Ast.__proj__Mkimport___item__idesc (Term) Term)
(declare-fun Tm_arrow_c3d27202ba487447068bc8a929f09f50 () Term)
(declare-fun Wasm.Ast.__proj__Mkimport___item__idesc@tok () Term)
(declare-fun Wasm.Ast.import () Term)
(declare-fun Wasm.Ast.module__ () Term)
(declare-fun Wasm.Ast.Mkmodule__ (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Wasm.Ast.Mkmodule___types (Term) Term)
(declare-fun Wasm.Ast.Mkmodule___globals (Term) Term)
(declare-fun Wasm.Ast.Mkmodule___tables (Term) Term)
(declare-fun Wasm.Ast.Mkmodule___memories (Term) Term)
(declare-fun Wasm.Ast.Mkmodule___funcs (Term) Term)
(declare-fun Wasm.Ast.Mkmodule___start (Term) Term)
(declare-fun Wasm.Ast.Mkmodule___elems (Term) Term)
(declare-fun Wasm.Ast.Mkmodule___data (Term) Term)
(declare-fun Wasm.Ast.Mkmodule___imports (Term) Term)
(declare-fun Wasm.Ast.Mkmodule___exports (Term) Term)
(declare-fun Wasm.Ast.Mkmodule__@tok () Term)
(declare-fun Tm_arrow_e8f7e6ab46adb26983c56186f266e31b () Term)
(define-fun is-Wasm.Ast.module__ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 585) (= __@x0 Wasm.Ast.module__)))
(define-fun is-Wasm.Ast.Mkmodule__ ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 591) (= __@x0 (Wasm.Ast.Mkmodule__ (Wasm.Ast.Mkmodule___types __@x0) (Wasm.Ast.Mkmodule___globals __@x0) (Wasm.Ast.Mkmodule___tables __@x0) (Wasm.Ast.Mkmodule___memories __@x0) (Wasm.Ast.Mkmodule___funcs __@x0) (Wasm.Ast.Mkmodule___start __@x0) (Wasm.Ast.Mkmodule___elems __@x0) (Wasm.Ast.Mkmodule___data __@x0) (Wasm.Ast.Mkmodule___imports __@x0) (Wasm.Ast.Mkmodule___exports __@x0)))))
(declare-fun Wasm.Ast.__proj__Mkmodule____item__types (Term) Term)
(declare-fun Tm_arrow_a4811a3f8fc177523deeafbbf78f8c9d () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__types@tok () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__globals (Term) Term)
(declare-fun Tm_arrow_8800e55a3dfccfb5ea01cba5f2447978 () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__globals@tok () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__tables (Term) Term)
(declare-fun Tm_arrow_c1429e43a13df48dce72acacf67594dc () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__tables@tok () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__memories (Term) Term)
(declare-fun Tm_arrow_9609d8a33ac0eaf5c64c8416f3551a09 () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__memories@tok () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__funcs (Term) Term)
(declare-fun Tm_arrow_4be2cc8c4a4c3285c19a5277d18c7846 () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__funcs@tok () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__start (Term) Term)
(declare-fun Tm_arrow_1cdaf52966bf333a4cee65b8090fb05e () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__start@tok () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__elems (Term) Term)
(declare-fun Tm_arrow_688ffc9afc1d051548d233bf2ccddd8f () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__elems@tok () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__data (Term) Term)
(declare-fun Tm_arrow_6c725497ffd20a730bfb1bd5bd153e6b () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__data@tok () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__imports (Term) Term)
(declare-fun Tm_arrow_87fee4b00478e1522873d76375e130d5 () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__imports@tok () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__exports (Term) Term)
(declare-fun Tm_arrow_79be651e14075ce87cf9a38582c8a4a7 () Term)
(declare-fun Wasm.Ast.__proj__Mkmodule____item__exports@tok () Term)
(declare-fun Wasm.Ast.module_ () Term)
(declare-fun Wasm.Ast.empty_module (Dummy_sort) Term)
(declare-fun Wasm.Ast.__errfail (Term) Term)
(declare-fun Wasm.Ast.__errfail@tok () Term)
(declare-fun Wasm.Ast.func_type_for (Term Term) Term)
(declare-fun Tm_arrow_6c7ec9810b5f04fe90230dc1d3c7a02c () Term)
(declare-fun Wasm.Ast.func_type_for@tok () Term)
(declare-fun Wasm.Ast.import_type (Term Term) Term)
(declare-fun Tm_arrow_e1c0921001f4c38d0b7676566d2197b4 () Term)
(declare-fun Wasm.Ast.import_type@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp Wasm.Types.ExternFuncType@tok)) :named kick_partial_app_a2d64be92310ac14357fce9d83869148))
(declare-fun Wasm.Ast.export_type (Term Term) Term)
(declare-fun Tm_arrow_1db8d1b75e23453b2ab9ec299afea159 () Term)
(declare-fun Wasm.Ast.export_type@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp Wasm.Ast.import_type@tok)) :named kick_partial_app_117eb1e8c10cc82b96b34a31f90a7099))
(declare-fun Tm_arrow_2d6b851157d92dad761eecc8be871386 () Term)
(declare-fun Tm_abs_168767cf55e4cdff37f7402d7d2ec74a () Term)
(declare-fun Tm_arrow_0df72dc7834477b43202a11a1daefeb0 () Term)
(declare-fun Tm_abs_715a6b94c88846f67591f0756f864923 () Term)
(declare-fun Tm_arrow_46235f6906137c3c23b020b67096a610 () Term)
(declare-fun Tm_abs_3f4f247d89ef50f95f479f37bfefa547 () Term)
(declare-fun Tm_arrow_73e7a8472abc7ab887166de5afc8d837 () Term)
(declare-fun Tm_abs_5185853f5ad210fc58c5790c4454fbf6 (Term) Term)
(declare-fun Wasm.Ast.string_of_name (Term) Term)
(declare-fun Wasm.Ast.string_of_name@tok () Term)
(declare-fun Wasm.Func.func (Term) Term)
(declare-fun Wasm.Func.func@x0 (Term) Term)
(declare-fun Wasm.Func.func@tok () Term)
(declare-fun Wasm.Func.AstFunc (Term Term) Term)
(declare-fun Wasm.Func.AstFunc_inst (Term) Term)
(declare-fun Wasm.Func.AstFunc__0 (Term) Term)
(declare-fun Wasm.Func.AstFunc@tok () Term)
(declare-fun Wasm.Func.HostFunc (Term Term) Term)
(declare-fun Wasm.Func.HostFunc_inst (Term) Term)
(declare-fun Wasm.Func.HostFunc__0 (Term) Term)
(declare-fun Wasm.Func.HostFunc@tok () Term)
(declare-fun Tm_arrow_92bf005344787a494c5bfa005e049988 () Term)
(declare-fun Tm_arrow_597bfd8fc1e9535fa3e10f7e744b4537 () Term)
(declare-fun Tm_arrow_3a243a8d53da2c08f690ba97f2be4f5c () Term)
(define-fun is-Wasm.Func.func ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 101) (exists ((@x0 Term)) (! (= __@x0 (Wasm.Func.func @x0)) :qid is-Wasm.Func.func))))
(define-fun is-Wasm.Func.AstFunc ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 108) (= __@x0 (Wasm.Func.AstFunc (Wasm.Func.AstFunc_inst __@x0) (Wasm.Func.AstFunc__0 __@x0)))))
(define-fun is-Wasm.Func.HostFunc ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 115) (= __@x0 (Wasm.Func.HostFunc (Wasm.Func.HostFunc_inst __@x0) (Wasm.Func.HostFunc__0 __@x0)))))
(declare-fun Wasm.Func.uu___is_AstFunc (Term Term) Term)
(declare-fun Tm_arrow_8cf6d54ddfb110840c2a6a815a17fc6f () Term)
(declare-fun Wasm.Func.uu___is_AstFunc@tok () Term)
(declare-fun Tm_refine_4aa0b4feed1eb296afb4967c937da118 (Term) Term)
(declare-fun Wasm.Func.__proj__AstFunc__item___0 (Term Term) Term)
(declare-fun Tm_arrow_d6db34a2e1ec60bb65994bb7887fffe9 () Term)
(declare-fun Wasm.Func.__proj__AstFunc__item___0@tok () Term)
(declare-fun Wasm.Func.uu___is_HostFunc (Term Term) Term)
(declare-fun Wasm.Func.uu___is_HostFunc@tok () Term)
(declare-fun Tm_refine_131dd52315f8591da2c7b37eb3405108 (Term) Term)
(declare-fun Wasm.Func.__proj__HostFunc__item___0 (Term Term) Term)
(declare-fun Tm_arrow_51f9b185d57e36f9b272cbe5e686848d () Term)
(declare-fun Wasm.Func.__proj__HostFunc__item___0@tok () Term)
(declare-fun Wasm.Func.t (Term) Term)
(declare-fun Wasm.Func.t@tok () Term)
(declare-fun Wasm.Func.alloc (Term Term Term Term) Term)
(declare-fun Tm_arrow_9d68636469b1d63003f5b321248a5489 () Term)
(declare-fun Wasm.Func.alloc@tok () Term)
(declare-fun Wasm.Func.alloc_host (Term Term Term) Term)
(declare-fun Tm_arrow_dafa41e928cf96a39c65159d3f9f6c48 () Term)
(declare-fun Wasm.Func.alloc_host@tok () Term)
(declare-fun Wasm.Func.type_of (Term Term) Term)
(declare-fun Tm_arrow_31db673c80902f2b8adfdec80d34d3c3 () Term)
(declare-fun Wasm.Func.type_of@tok () Term)
(push)
(declare-fun Wasm.Instance.op_String_Access (Term Term) Term)
(declare-fun Wasm.Instance.op_String_Access@tok () Term)
(declare-fun Wasm.Instance.op_String_Assignment (Term Term) Term)
(declare-fun Wasm.Instance.op_String_Assignment@tok () Term)
(declare-fun Wasm.Instance.func_inst () Term)
(declare-fun Wasm.Instance.memory_inst () Term)
(declare-fun Wasm.Instance.global_inst () Term)
(declare-fun Wasm.Instance.tb_size_ (Dummy_sort) Term)
(declare-fun Wasm.Instance.tb_index (Dummy_sort) Term)
(declare-fun Wasm.Instance.module_inst () Term)
(declare-fun Wasm.Instance.extern () Term)
(declare-fun Wasm.Instance.tb_elem () Term)
(declare-fun Wasm.Instance.tb_table () Term)
(declare-fun Wasm.Instance.Mkmodule_inst (Term Term Term Term Term Term) Term)
(declare-fun Wasm.Instance.Mkmodule_inst_types_ (Term) Term)
(declare-fun Wasm.Instance.Mkmodule_inst_funcs_ (Term) Term)
(declare-fun Wasm.Instance.Mkmodule_inst_tables_ (Term) Term)
(declare-fun Wasm.Instance.Mkmodule_inst_memories_ (Term) Term)
(declare-fun Wasm.Instance.Mkmodule_inst_globals_ (Term) Term)
(declare-fun Wasm.Instance.Mkmodule_inst_exports_ (Term) Term)
(declare-fun Wasm.Instance.Mkmodule_inst@tok () Term)
(declare-fun Wasm.Instance.ExternFunc (Term) Term)
(declare-fun Wasm.Instance.ExternFunc__0 (Term) Term)
(declare-fun Wasm.Instance.ExternFunc@tok () Term)
(declare-fun Wasm.Instance.ExternTable (Term) Term)
(declare-fun Wasm.Instance.ExternTable__0 (Term) Term)
(declare-fun Wasm.Instance.ExternTable@tok () Term)
(declare-fun Wasm.Instance.ExternMemory (Term) Term)
(declare-fun Wasm.Instance.ExternMemory__0 (Term) Term)
(declare-fun Wasm.Instance.ExternMemory@tok () Term)
(declare-fun Wasm.Instance.ExternGlobal (Term) Term)
(declare-fun Wasm.Instance.ExternGlobal__0 (Term) Term)
(declare-fun Wasm.Instance.ExternGlobal@tok () Term)
(declare-fun Wasm.Instance.Uninitialized () Term)
(declare-fun Wasm.Instance.Uninitialized@tok () Term)
(declare-fun Wasm.Instance.FuncElem (Term) Term)
(declare-fun Wasm.Instance.FuncElem__0 (Term) Term)
(declare-fun Wasm.Instance.FuncElem@tok () Term)
(declare-fun Wasm.Instance.Mktb_table (Term Term Term Term) Term)
(declare-fun Wasm.Instance.Mktb_table_table_content (Term) Term)
(declare-fun Wasm.Instance.Mktb_table_table_sz (Term) Term)
(declare-fun Wasm.Instance.Mktb_table_table_max (Term) Term)
(declare-fun Wasm.Instance.Mktb_table_elem_type (Term) Term)
(declare-fun Wasm.Instance.Mktb_table@tok () Term)
(declare-fun Tm_arrow_4ca15ccf1adced416b64538186a708cf () Term)
(declare-fun Tm_arrow_5409a5deac74f1b42e7cba681d0f5abd () Term)
(declare-fun Tm_arrow_e6144afe74602dfac46451e8bc923b4c () Term)
(declare-fun Tm_arrow_7cd39da75887531cea0e7789a3595ef3 () Term)
(declare-fun Tm_arrow_ebeb1f4b213263f338e5140043f5c0cd () Term)
(declare-fun Tm_arrow_cb704b7c1ed4660341fa94c7ae133ea8 () Term)
(declare-fun Tm_arrow_498e4e37e50498c93798f333bf06b6db () Term)
(define-fun is-Wasm.Instance.module_inst ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 116) (= __@x0 Wasm.Instance.module_inst)))
(define-fun is-Wasm.Instance.extern ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 121) (= __@x0 Wasm.Instance.extern)))
(define-fun is-Wasm.Instance.tb_elem ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 126) (= __@x0 Wasm.Instance.tb_elem)))
(define-fun is-Wasm.Instance.tb_table ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 131) (= __@x0 Wasm.Instance.tb_table)))
(define-fun is-Wasm.Instance.Mkmodule_inst ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 137) (= __@x0 (Wasm.Instance.Mkmodule_inst (Wasm.Instance.Mkmodule_inst_types_ __@x0) (Wasm.Instance.Mkmodule_inst_funcs_ __@x0) (Wasm.Instance.Mkmodule_inst_tables_ __@x0) (Wasm.Instance.Mkmodule_inst_memories_ __@x0) (Wasm.Instance.Mkmodule_inst_globals_ __@x0) (Wasm.Instance.Mkmodule_inst_exports_ __@x0)))))
(define-fun is-Wasm.Instance.ExternFunc ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 142) (= __@x0 (Wasm.Instance.ExternFunc (Wasm.Instance.ExternFunc__0 __@x0)))))
(define-fun is-Wasm.Instance.ExternTable ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 147) (= __@x0 (Wasm.Instance.ExternTable (Wasm.Instance.ExternTable__0 __@x0)))))
(define-fun is-Wasm.Instance.ExternMemory ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 152) (= __@x0 (Wasm.Instance.ExternMemory (Wasm.Instance.ExternMemory__0 __@x0)))))
(define-fun is-Wasm.Instance.ExternGlobal ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 157) (= __@x0 (Wasm.Instance.ExternGlobal (Wasm.Instance.ExternGlobal__0 __@x0)))))
(define-fun is-Wasm.Instance.Uninitialized ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 162) (= __@x0 Wasm.Instance.Uninitialized)))
(define-fun is-Wasm.Instance.FuncElem ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 164) (= __@x0 (Wasm.Instance.FuncElem (Wasm.Instance.FuncElem__0 __@x0)))))
(define-fun is-Wasm.Instance.Mktb_table ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 169) (= __@x0 (Wasm.Instance.Mktb_table (Wasm.Instance.Mktb_table_table_content __@x0) (Wasm.Instance.Mktb_table_table_sz __@x0) (Wasm.Instance.Mktb_table_table_max __@x0) (Wasm.Instance.Mktb_table_elem_type __@x0)))))
(assert (! (forall ((@u0 Fuel) (@x1 Term)) (! (=> (HasTypeFuel (SFuel @u0) @x1 Wasm.Instance.extern) (or (is-Wasm.Instance.ExternFunc @x1) (is-Wasm.Instance.ExternTable @x1) (is-Wasm.Instance.ExternMemory @x1) (is-Wasm.Instance.ExternGlobal @x1))) :pattern ((HasTypeFuel (SFuel @u0) @x1 Wasm.Instance.extern)) :qid fuel_guarded_inversion_Wasm.Instance.extern)) :named fuel_guarded_inversion_Wasm.Instance.extern))
(declare-fun Wasm.Instance.__proj__Mkmodule_inst__item__types_ (Term) Term)
(declare-fun Tm_arrow_8527d3e0054ae2733cccf2f4ee8fbca7 () Term)
(declare-fun Wasm.Instance.__proj__Mkmodule_inst__item__types_@tok () Term)
(declare-fun Wasm.Instance.__proj__Mkmodule_inst__item__funcs_ (Term) Term)
(declare-fun Tm_arrow_33baca02068dd937c27f5495123620e2 () Term)
(declare-fun Wasm.Instance.__proj__Mkmodule_inst__item__funcs_@tok () Term)
(declare-fun Wasm.Instance.__proj__Mkmodule_inst__item__tables_ (Term) Term)
(declare-fun Tm_arrow_b0e0b7e35e0a41c4c984dea682e52b7e () Term)
(declare-fun Wasm.Instance.__proj__Mkmodule_inst__item__tables_@tok () Term)
(declare-fun Wasm.Instance.__proj__Mkmodule_inst__item__memories_ (Term) Term)
(declare-fun Tm_arrow_a85933629e40d21a148cddda00263b09 () Term)
(declare-fun Wasm.Instance.__proj__Mkmodule_inst__item__memories_@tok () Term)
(declare-fun Wasm.Instance.__proj__Mkmodule_inst__item__globals_ (Term) Term)
(declare-fun Tm_arrow_72ceeece57983bf82706ab84259d53a4 () Term)
(declare-fun Wasm.Instance.__proj__Mkmodule_inst__item__globals_@tok () Term)
(declare-fun Wasm.Instance.__proj__Mkmodule_inst__item__exports_ (Term) Term)
(declare-fun Tm_arrow_010959c15b78785d8a8fec9723a19abf () Term)
(declare-fun Wasm.Instance.__proj__Mkmodule_inst__item__exports_@tok () Term)
(declare-fun Wasm.Instance.uu___is_ExternFunc (Term) Term)
(declare-fun Tm_arrow_af476c948e1e93dccbb7656c7f73febf () Term)
(declare-fun Wasm.Instance.uu___is_ExternFunc@tok () Term)
(assert (! (forall ((@x0 Term)) (! (= (Wasm.Instance.uu___is_ExternFunc @x0) (BoxBool (is-Wasm.Instance.ExternFunc @x0))) :pattern ((Wasm.Instance.uu___is_ExternFunc @x0)) :qid disc_equation_Wasm.Instance.ExternFunc)) :named disc_equation_Wasm.Instance.ExternFunc))
(declare-fun Tm_refine_0e1ff1fdac93b4916bd0dd45cc2c1123 () Term)
(declare-fun Wasm.Instance.__proj__ExternFunc__item___0 (Term) Term)
(declare-fun Tm_arrow_32f3590da25addeb3a34da28ef6cc0ff () Term)
(declare-fun Wasm.Instance.__proj__ExternFunc__item___0@tok () Term)
(declare-fun Wasm.Instance.uu___is_ExternTable (Term) Term)
(declare-fun Wasm.Instance.uu___is_ExternTable@tok () Term)
(assert (! (forall ((@x0 Term)) (! (= (Wasm.Instance.uu___is_ExternTable @x0) (BoxBool (is-Wasm.Instance.ExternTable @x0))) :pattern ((Wasm.Instance.uu___is_ExternTable @x0)) :qid disc_equation_Wasm.Instance.ExternTable)) :named disc_equation_Wasm.Instance.ExternTable))
(declare-fun Tm_refine_044f4342703cefd619d2f452e610d13b () Term)
(declare-fun Wasm.Instance.__proj__ExternTable__item___0 (Term) Term)
(declare-fun Tm_arrow_b78145a5a667d5c35dc89df9867e1c2e () Term)
(declare-fun Wasm.Instance.__proj__ExternTable__item___0@tok () Term)
(declare-fun Wasm.Instance.uu___is_ExternMemory (Term) Term)
(declare-fun Wasm.Instance.uu___is_ExternMemory@tok () Term)
(assert (! (forall ((@x0 Term)) (! (= (Wasm.Instance.uu___is_ExternMemory @x0) (BoxBool (is-Wasm.Instance.ExternMemory @x0))) :pattern ((Wasm.Instance.uu___is_ExternMemory @x0)) :qid disc_equation_Wasm.Instance.ExternMemory)) :named disc_equation_Wasm.Instance.ExternMemory))
(declare-fun Tm_refine_a5320323b6624a81bfe287f3547b9d09 () Term)
(declare-fun Wasm.Instance.__proj__ExternMemory__item___0 (Term) Term)
(declare-fun Tm_arrow_c570f16b10c4cab0fd575ecf0d16c88e () Term)
(declare-fun Wasm.Instance.__proj__ExternMemory__item___0@tok () Term)
(declare-fun Wasm.Instance.uu___is_ExternGlobal (Term) Term)
(declare-fun Wasm.Instance.uu___is_ExternGlobal@tok () Term)
(assert (! (forall ((@x0 Term)) (! (= (Wasm.Instance.uu___is_ExternGlobal @x0) (BoxBool (is-Wasm.Instance.ExternGlobal @x0))) :pattern ((Wasm.Instance.uu___is_ExternGlobal @x0)) :qid disc_equation_Wasm.Instance.ExternGlobal)) :named disc_equation_Wasm.Instance.ExternGlobal))
(declare-fun Tm_refine_767c237787fb24afc17d416b09137cbc () Term)
(declare-fun Wasm.Instance.__proj__ExternGlobal__item___0 (Term) Term)
(declare-fun Tm_arrow_18ba41a3ab4382a63880cadabecd4a28 () Term)
(declare-fun Wasm.Instance.__proj__ExternGlobal__item___0@tok () Term)
(declare-fun Wasm.Instance.uu___is_Uninitialized (Term) Term)
(declare-fun Tm_arrow_cf164db42112131bec6750f58342c560 () Term)
(declare-fun Wasm.Instance.uu___is_Uninitialized@tok () Term)
(declare-fun Wasm.Instance.uu___is_FuncElem (Term) Term)
(declare-fun Wasm.Instance.uu___is_FuncElem@tok () Term)
(declare-fun Tm_refine_d912f0d72de7aa840493c76fb471e952 () Term)
(declare-fun Wasm.Instance.__proj__FuncElem__item___0 (Term) Term)
(declare-fun Tm_arrow_4da298aab3f133e7f4401bbb9a13a870 () Term)
(declare-fun Wasm.Instance.__proj__FuncElem__item___0@tok () Term)
(declare-fun Wasm.Instance.__proj__Mktb_table__item__table_content (Term) Term)
(declare-fun Tm_arrow_c8aba3151f747c775af2554fbdd343c7 () Term)
(declare-fun Wasm.Instance.__proj__Mktb_table__item__table_content@tok () Term)
(declare-fun Wasm.Instance.__proj__Mktb_table__item__table_sz (Term) Term)
(declare-fun Tm_arrow_3bc45d038bfd303754fb57e5f245ffbe () Term)
(declare-fun Wasm.Instance.__proj__Mktb_table__item__table_sz@tok () Term)
(declare-fun Wasm.Instance.__proj__Mktb_table__item__table_max (Term) Term)
(declare-fun Tm_arrow_8233c8490565b1615779a37a097a187b () Term)
(declare-fun Wasm.Instance.__proj__Mktb_table__item__table_max@tok () Term)
(declare-fun Wasm.Instance.__proj__Mktb_table__item__elem_type (Term) Term)
(declare-fun Tm_arrow_5ab0bf9c147e7d30fccb997bf0b0044c () Term)
(declare-fun Wasm.Instance.__proj__Mktb_table__item__elem_type@tok () Term)
(declare-fun Wasm.Instance.tb_t () Term)
(declare-fun Wasm.Instance.table_inst () Term)
(declare-fun Wasm.Instance.export_inst () Term)
(declare-fun Wasm.Instance.tb_table_ () Term)
(declare-fun Wasm.Instance.e_Bounds (Term) Term)
(declare-fun Wasm.Instance.e_Bounds@tok () Term)
(declare-fun Wasm.Instance.e_SizeOverflow (Term) Term)
(declare-fun Wasm.Instance.e_SizeOverflow@tok () Term)
(declare-fun Wasm.Instance.e_SizeLimit (Term) Term)
(declare-fun Wasm.Instance.e_SizeLimit@tok () Term)
(declare-fun Wasm.Instance.e_Out_of_memory (Term) Term)
(declare-fun Wasm.Instance.e_Out_of_memory@tok () Term)
(declare-fun Wasm.Instance.__errfail (Term) Term)
(declare-fun Wasm.Instance.__errfail@tok () Term)
(declare-fun Wasm.Instance.within_limits (Term Term) Term)
(declare-fun Wasm.Instance.within_limits@tok () Term)
(declare-fun Wasm.Instance.create (Term) Term)
(declare-fun Tm_arrow_5a382debf8ed9874da20f4710f35cb8a () Term)
(declare-fun Wasm.Instance.create@tok () Term)
(declare-fun Wasm.Instance.tb_alloc (Term) Term)
(declare-fun Tm_arrow_9d971b72d1dcf0986bc913f8d9009216 () Term)
(declare-fun Wasm.Instance.tb_alloc@tok () Term)
(declare-fun Wasm.Instance.tb_size (Term) Term)
(declare-fun Wasm.Instance.tb_size@tok () Term)
(declare-fun Wasm.Instance.tb_type_of (Term) Term)
(declare-fun Tm_arrow_d45cef5d8b336f4fcb420f550b06cc7d () Term)
(declare-fun Wasm.Instance.tb_type_of@tok () Term)
(declare-fun Wasm.Instance.tb_grow (Term Term) Term)
(declare-fun Tm_arrow_b36f82fe7e72411765207acb82d9ecc1 () Term)
(declare-fun Wasm.Instance.tb_grow@tok () Term)
(declare-fun Wasm.Instance.tb_load (Term Term) Term)
(declare-fun Tm_arrow_9213d988d4b6d4c25efa501e48b4ce48 () Term)
(declare-fun Wasm.Instance.tb_load@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp Wasm.Instance.op_String_Access@tok)) :named kick_partial_app_b2560696c9be0c765a931caac1071744))
(declare-fun Wasm.Instance.tb_store (Term Term Term) Term)
(declare-fun Tm_arrow_dfec48e6bfac835f150cbdf6e11cd1ce () Term)
(declare-fun Wasm.Instance.tb_store@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp Wasm.Instance.op_String_Assignment@tok)) :named kick_partial_app_bddfee2debdf5f97ef081be861cc1375))
(declare-fun Wasm.Instance.tb_blit (Term Term Term) Term)
(declare-fun Tm_arrow_c3d2e0ac2b9bc063726bcde9bdce28cd () Term)
(declare-fun Wasm.Instance.tb_blit@tok () Term)
(declare-fun Wasm.Instance.empty_module_inst (Dummy_sort) Term)
(push)
(declare-fun label_19 () Bool)
(push)
(assert (! (= MaxFuel (SFuel ZFuel)) :named MaxFuel_assumption))
(assert (! (= MaxIFuel (SFuel ZFuel)) :named MaxIFuel_assumption))
(assert (! (not (forall ((@x0 Term)) (! (=> (and (HasType @x0 Wasm.Instance.extern) (not (BoxBool_proj_0 (Wasm.Instance.uu___is_ExternFunc @x0)) ) (not (BoxBool_proj_0 (Wasm.Instance.uu___is_ExternTable @x0)) ) (not (BoxBool_proj_0 (Wasm.Instance.uu___is_ExternMemory @x0)) ) (not (BoxBool_proj_0 (Wasm.Instance.uu___is_ExternGlobal @x0)) ) ) label_19) :qid @query))) :named query))
(check-sat)
