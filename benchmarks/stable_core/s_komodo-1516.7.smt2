(set-option :auto-config false)
(set-option :produce-unsat-cores false)
(set-option :smt.mbqi.max_iterations 10000000)
(set-option :smt.relevancy 0)
(declare-fun c0 () Bool)
(declare-fun c1 () Bool)
(define-fun e2 () Bool (not c1))
(define-fun e3 () Bool (and c0 e2))
(declare-fun c4 () Bool)
(define-fun e5 () Bool (and e3 c4))
(define-fun e6 () Bool (not e5))
(define-fun e7 () Bool (not c4))
(declare-fun c8 () (_ BitVec 64))
(define-fun e9 () (_ BitVec 64) (_ bv512 64))
(define-fun e10 () Bool (bvult c8 e9))
(declare-fun c11 () (_ BitVec 64))
(define-fun e12 () (_ BitVec 64) (_ bv1024 64))
(define-fun e13 () Bool (bvult c11 e12))
(define-fun e14 () (_ BitVec 64) (_ bv4 64))
(declare-fun c15 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e16 () (_ BitVec 64) (c15 c11))
(define-fun e17 () Bool (= e14 e16))
(define-fun e18 () Bool (and e13 e17))
(define-fun e19 () (_ BitVec 64) (_ bv0 64))
(declare-fun c20 ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(define-fun e21 () (_ BitVec 64) (c20 c11 c8))
(define-fun e22 () Bool (= e19 e21))
(declare-fun c23 () (_ BitVec 64))
(define-fun e24 () Bool (bvult c23 e12))
(define-fun e25 () (_ BitVec 64) (c15 c23))
(define-fun e26 () Bool (= e19 e25))
(define-fun e27 () Bool (and e24 e26))
(declare-fun c28 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e29 () (_ BitVec 64) (c28 c11))
(define-fun e30 () (_ BitVec 64) (_ bv2 64))
(define-fun e31 () (_ BitVec 64) (c20 e29 e30))
(define-fun e32 () Bool (= e19 e31))
(define-fun e33 () Bool (and e7 e10 e18 e22 e27 e32))
(define-fun e34 () Bool (not e10))
(define-fun e35 () Bool (not e18))
(define-fun e36 () Bool (not e22))
(define-fun e37 () Bool (not e24))
(define-fun e38 () Bool (not e27))
(define-fun e39 () Bool (not e32))
(define-fun e40 () Bool (and e27 e39))
(define-fun e41 () Bool (or e38 e40))
(define-fun e42 () Bool (and e24 e41))
(define-fun e43 () Bool (or e37 e42))
(define-fun e44 () Bool (and e22 e43))
(define-fun e45 () Bool (or e36 e44))
(define-fun e46 () Bool (and e18 e45))
(define-fun e47 () Bool (or e35 e46))
(define-fun e48 () Bool (and e10 e47))
(define-fun e49 () Bool (or e34 e48))
(define-fun e50 () Bool (and e7 e49))
(define-fun e51 () Bool (or c4 e50))
(define-fun e52 () Bool (or e33 e51))
(define-fun e53 () Bool (or e52 e6))
(define-fun e54 () Bool (not e33))
(define-fun e55 () Bool (or e54 e6))
(declare-fun c56 () Bool)
(define-fun e57 () Bool (not c56))
(declare-fun c58 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e59 () (_ BitVec 64) (c58 c11))
(define-fun e60 () Bool (= e14 e59))
(define-fun e61 () Bool (and e13 e60))
(declare-fun c62 ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(define-fun e63 () (_ BitVec 64) (c62 c11 c8))
(define-fun e64 () Bool (= e19 e63))
(define-fun e65 () (_ BitVec 64) (c58 c23))
(define-fun e66 () Bool (= e19 e65))
(define-fun e67 () Bool (and e24 e66))
(declare-fun c68 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e69 () (_ BitVec 64) (c68 c11))
(define-fun e70 () (_ BitVec 64) (c62 e69 e30))
(define-fun e71 () Bool (= e19 e70))
(define-fun e72 () Bool (and e10 e57 e61 e64 e67 e71))
(define-fun e73 () Bool (not e61))
(define-fun e74 () Bool (not e64))
(define-fun e75 () Bool (not e67))
(define-fun e76 () Bool (not e71))
(define-fun e77 () Bool (and e67 e76))
(define-fun e78 () Bool (or e75 e77))
(define-fun e79 () Bool (and e24 e78))
(define-fun e80 () Bool (or e37 e79))
(define-fun e81 () Bool (and e64 e80))
(define-fun e82 () Bool (or e74 e81))
(define-fun e83 () Bool (and e61 e82))
(define-fun e84 () Bool (or e73 e83))
(define-fun e85 () Bool (and e10 e84))
(define-fun e86 () Bool (or e34 e85))
(define-fun e87 () Bool (and e57 e86))
(define-fun e88 () Bool (or c56 e87))
(define-fun e89 () Bool (or e72 e88))
(define-fun e90 () Bool (or e89 e6))
(define-fun e91 () Bool (and e53 e55 e90))
(define-fun e92 () Bool (or e6 e91))
(define-fun e93 () Bool (not e92))
(assert e93)
(check-sat)
