(set-option :auto-config false)
(set-option :produce-unsat-cores false)
(set-option :smt.mbqi.max_iterations 10000000)
(set-option :smt.relevancy 0)
(declare-fun c1 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e2 ((c0 (_ BitVec 64))) (_ BitVec 64) (c1 c0))
(define-fun e3 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv1024 64))
(define-fun e4 ((c0 (_ BitVec 64))) Bool (bvult (e2 c0) (e3 c0)))
(define-fun e5 ((c0 (_ BitVec 64))) Bool (bvult c0 (e3 c0)))
(define-fun e6 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv0 64))
(declare-fun c7 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e8 ((c0 (_ BitVec 64))) (_ BitVec 64) (c7 c0))
(define-fun e9 ((c0 (_ BitVec 64))) Bool (= (e6 c0) (e8 c0)))
(define-fun e10 ((c0 (_ BitVec 64))) Bool (not (e9 c0)))
(define-fun e11 ((c0 (_ BitVec 64))) Bool (and (e5 c0) (e10 c0)))
(define-fun e12 ((c0 (_ BitVec 64))) Bool (not (e11 c0)))
(define-fun e13 ((c0 (_ BitVec 64))) Bool (or (e4 c0) (e12 c0)))
(define-fun e14 () Bool (forall ((c0 (_ BitVec 64))) (e13 c0)))
(declare-fun c15 ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(define-fun e16 ((c0 (_ BitVec 64))) (_ BitVec 64) (c15 (e6 c0) c0))
(define-fun e17 ((c0 (_ BitVec 64))) Bool (bvult (e16 c0) (e3 c0)))
(define-fun e18 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv1 64))
(define-fun e19 ((c0 (_ BitVec 64))) Bool (= (e18 c0) (e8 c0)))
(define-fun e20 ((c0 (_ BitVec 64))) Bool (and (e5 c0) (e19 c0)))
(define-fun e21 ((c0 (_ BitVec 64))) Bool (not (e20 c0)))
(define-fun e22 ((c0 (_ BitVec 64))) Bool (or (e17 c0) (e21 c0)))
(define-fun e23 () Bool (forall ((c0 (_ BitVec 64))) (e22 c0)))
(define-fun e24 ((c0 (_ BitVec 64))) Bool (= c0 (e2 c0)))
(define-fun e25 ((c0 (_ BitVec 64))) Bool (or (e21 c0) (e24 c0)))
(define-fun e26 () Bool (forall ((c0 (_ BitVec 64))) (e25 c0)))
(define-fun e27 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv9223372023968964300 64))
(define-fun e28 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv40 64))
(define-fun e29 ((c0 (_ BitVec 64))) (_ BitVec 64) (c15 (e28 c0) c0))
(define-fun e30 ((c0 (_ BitVec 64))) (_ BitVec 64) (bvand (e27 c0) (e29 c0)))
(define-fun e31 ((c0 (_ BitVec 64))) Bool (= (e6 c0) (e30 c0)))
(define-fun e32 ((c0 (_ BitVec 64))) (_ BitVec 64) (bvneg (_ bv820 64)))
(define-fun e33 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv42 64))
(define-fun e34 ((c0 (_ BitVec 64))) (_ BitVec 64) (c15 (e33 c0) c0))
(define-fun e35 ((c0 (_ BitVec 64))) (_ BitVec 64) (bvand (e32 c0) (e34 c0)))
(define-fun e36 ((c0 (_ BitVec 64))) Bool (= (e6 c0) (e35 c0)))
(define-fun e37 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv37 64))
(define-fun e38 ((c0 (_ BitVec 64))) (_ BitVec 64) (c15 (e37 c0) c0))
(define-fun e39 ((c0 (_ BitVec 64))) (_ BitVec 64) (bvand (e32 c0) (e38 c0)))
(define-fun e40 ((c0 (_ BitVec 64))) Bool (= (e6 c0) (e39 c0)))
(define-fun e41 ((c0 (_ BitVec 64))) Bool (and (e31 c0) (e36 c0) (e40 c0)))
(define-fun e42 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv2 64))
(define-fun e43 ((c0 (_ BitVec 64))) Bool (= (e42 c0) (e8 c0)))
(define-fun e44 ((c0 (_ BitVec 64))) Bool (and (e5 c0) (e43 c0)))
(define-fun e45 ((c0 (_ BitVec 64))) Bool (not (e44 c0)))
(define-fun e46 ((c0 (_ BitVec 64))) Bool (or (e41 c0) (e45 c0)))
(define-fun e47 () Bool (forall ((c0 (_ BitVec 64))) (e46 c0)))
(declare-fun c48 () (_ BitVec 64))
(define-fun e49 () (_ BitVec 64) (_ bv1024 64))
(define-fun e50 () Bool (bvult c48 e49))
(define-fun e51 () (_ BitVec 8) (_ bv0 8))
(declare-fun c52 () (_ BitVec 8))
(define-fun e53 () Bool (= e51 c52))
(define-fun e54 () (_ BitVec 64) (_ bv2 64))
(define-fun e55 () (_ BitVec 64) (c7 c48))
(define-fun e56 () Bool (= e54 e55))
(define-fun e57 () Bool (and e50 e56))
(define-fun e58 () Bool (or e53 e57))
(define-fun e59 () (_ BitVec 64) (_ bv0 64))
(define-fun e60 () (_ BitVec 64) (_ bv9223372023968964300 64))
(declare-fun c61 () (_ BitVec 64))
(define-fun e62 () (_ BitVec 64) (bvand e60 c61))
(define-fun e63 () Bool (= e59 e62))
(define-fun e64 () (_ BitVec 64) (bvneg (_ bv820 64)))
(declare-fun c65 () (_ BitVec 64))
(define-fun e66 () (_ BitVec 64) (bvand e64 c65))
(define-fun e67 () Bool (= e59 e66))
(declare-fun c68 () (_ BitVec 64))
(define-fun e69 () (_ BitVec 64) (bvand e64 c68))
(define-fun e70 () Bool (= e59 e69))
(define-fun e71 () Bool (and e14 e23 e26 e47 e50 e58 e63 e67 e70))
(define-fun e72 () Bool (not e71))
(declare-fun c73 () Bool)
(define-fun e74 () Bool (not c73))
(declare-fun c75 () (_ BitVec 64))
(define-fun e76 () Bool (bvult c75 e49))
(declare-fun c77 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e78 () (_ BitVec 64) (c77 c75))
(define-fun e79 () Bool (= e59 e78))
(define-fun e80 () Bool (and e76 e79))
(define-fun e81 () Bool (not e80))
(define-fun e82 () (_ BitVec 64) (_ bv1 64))
(define-fun e83 () Bool (= e82 e78))
(define-fun e84 () Bool (and e76 e83))
(declare-fun c85 ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(define-fun e86 () (_ BitVec 64) (c85 c75 e82))
(define-fun e87 () Bool (= e82 e86))
(define-fun e88 () Bool (not e87))
(define-fun e89 () Bool (and e84 e88))
(define-fun e90 () Bool (not e89))
(define-fun e91 () (_ BitVec 64) (c85 c75 e54))
(define-fun e92 () Bool (= e54 e91))
(define-fun e93 () Bool (not e92))
(define-fun e94 () Bool (and e84 e93))
(define-fun e95 () Bool (not e94))
(define-fun e96 () Bool (not e84))
(declare-fun c97 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e98 () (_ BitVec 64) (c97 c75))
(define-fun e99 () (_ BitVec 64) (c85 e98 e54))
(define-fun e100 () Bool (= e54 e99))
(define-fun e101 () Bool (not e100))
(define-fun e102 () Bool (and e96 e101))
(define-fun e103 () Bool (not e102))
(define-fun e104 () Bool (and e74 e76 e81 e90 e95 e103))
(define-fun e105 () Bool (not e76))
(define-fun e106 () Bool (and e95 e96 e101))
(define-fun e107 () Bool (or e94 e106))
(define-fun e108 () Bool (and e90 e107))
(define-fun e109 () Bool (or e89 e108))
(define-fun e110 () Bool (and e81 e109))
(define-fun e111 () Bool (or e80 e110))
(define-fun e112 () Bool (and e76 e111))
(define-fun e113 () Bool (or e105 e112))
(define-fun e114 () Bool (and e74 e113))
(define-fun e115 () Bool (or c73 e114))
(define-fun e116 () Bool (or e104 e115))
(define-fun e117 () (_ BitVec 64) (_ bv16 64))
(define-fun e118 () (_ BitVec 64) (bvmul e117 c75))
(define-fun e119 () (_ BitVec 64) (bvudiv e118 e117))
(define-fun e120 () (_ BitVec 64) (c7 e119))
(define-fun e121 () Bool (= e59 e120))
(define-fun e122 () Bool (not e121))
(define-fun e123 () Bool (= e82 e120))
(define-fun e124 () Bool (not e123))
(define-fun e125 () (_ BitVec 64) (_ bv8 64))
(define-fun e126 () (_ BitVec 64) (bvadd e125 e118))
(define-fun e127 () (_ BitVec 64) (bvudiv e126 e117))
(define-fun e128 () (_ BitVec 64) (c1 e127))
(define-fun e129 () Bool (bvult e128 e49))
(define-fun e130 () (_ BitVec 64) (_ bv4096 64))
(define-fun e131 () (_ BitVec 64) (bvmul e130 e128))
(define-fun e132 () (_ BitVec 64) (bvadd e117 e131))
(define-fun e133 () (_ BitVec 64) (bvurem e132 e130))
(define-fun e134 () (_ BitVec 64) (bvudiv e133 e125))
(define-fun e135 () (_ BitVec 64) (bvudiv e132 e130))
(define-fun e136 () (_ BitVec 64) (c15 e134 e135))
(define-fun e137 () Bool (= e54 e136))
(define-fun e138 () Bool (and e53 e76 e122 e124 e129 e137))
(define-fun e139 () Bool (not e53))
(define-fun e140 () (_ BitVec 64) (bvmul e130 c75))
(define-fun e141 () (_ BitVec 64) (bvadd e125 e140))
(define-fun e142 () (_ BitVec 64) (bvurem e141 e130))
(define-fun e143 () (_ BitVec 64) (bvudiv e142 e125))
(define-fun e144 () (_ BitVec 64) (bvudiv e141 e130))
(define-fun e145 () (_ BitVec 64) (c15 e143 e144))
(define-fun e146 () Bool (= e82 e145))
(define-fun e147 () Bool (not e146))
(define-fun e148 () (_ BitVec 64) (bvadd e117 e140))
(define-fun e149 () (_ BitVec 64) (bvurem e148 e130))
(define-fun e150 () (_ BitVec 64) (bvudiv e149 e125))
(define-fun e151 () (_ BitVec 64) (bvudiv e148 e130))
(define-fun e152 () (_ BitVec 64) (c15 e150 e151))
(define-fun e153 () Bool (= e54 e152))
(define-fun e154 () Bool (not e153))
(define-fun e155 () Bool (and e146 e154))
(define-fun e156 () Bool (or e147 e155))
(define-fun e157 () Bool (and e123 e156))
(define-fun e158 () Bool (or e124 e157))
(define-fun e159 () Bool (and e123 e158))
(define-fun e160 () Bool (not e137))
(define-fun e161 () Bool (and e124 e129 e160))
(define-fun e162 () Bool (or e159 e161))
(define-fun e163 () Bool (and e122 e162))
(define-fun e164 () Bool (or e121 e163))
(define-fun e165 () Bool (and e76 e164))
(define-fun e166 () Bool (or e105 e165))
(define-fun e167 () Bool (and e53 e166))
(define-fun e168 () Bool (or e139 e167))
(define-fun e169 () Bool (and e53 e76 e122 e123 e146 e153))
(define-fun e170 () Bool (or e138 e168 e169))
(define-fun e171 () Bool (and e116 e170))
(define-fun e172 () Bool (or e72 e171))
(define-fun e173 () Bool (not e172))
(assert e173)
(check-sat)
