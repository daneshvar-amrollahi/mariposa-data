(set-option :global-decls false)
(set-option :smt.mbqi false)
(set-option :auto_config false)
(set-option :model true)
(set-option :smt.case_split 3)
(set-option :smt.relevancy 2)
(declare-sort FString 0)
(declare-fun FString_constr_id (FString) Int)
(declare-sort Term 0)
(declare-fun Term_constr_id (Term) Int)
(declare-sort Dummy_sort 0)
(declare-fun Dummy_value () Dummy_sort)
(declare-sort Fuel 0)
(declare-fun ZFuel () Fuel)
(declare-fun SFuel (Fuel) Fuel)
(declare-fun MaxIFuel () Fuel)
(declare-fun MaxIFuel () Fuel)
(declare-fun MaxFuel () Fuel)
(declare-fun PreType (Term) Term)
(declare-fun Valid (Term) Bool)
(declare-fun HasTypeFuel (Fuel Term Term) Bool)
(define-fun HasTypeZ ((x Term) (t Term)) Bool (HasTypeFuel ZFuel x t))
(define-fun HasType ((x Term) (t Term)) Bool (HasTypeFuel MaxIFuel x t))
(declare-fun IsTotFun (Term) Bool)
(assert (forall ((f Fuel) (x Term) (t Term)) (! (= (HasTypeFuel (SFuel f) x t) (HasTypeZ x t)) :pattern ((HasTypeFuel (SFuel f) x t)))))
(declare-fun NoHoist (Term Bool) Bool)
(assert (forall ((dummy Term) (b Bool)) (! (= (NoHoist dummy b) b) :pattern ((NoHoist dummy b)))))
(define-fun  IsTyped ((x Term)) Bool (exists ((t Term)) (HasTypeZ x t)))
(declare-fun ApplyTF (Term Fuel) Term)
(declare-fun ApplyTT (Term Term) Term)
(declare-fun Rank (Term) Int)
(declare-fun Closure (Term) Term)
(declare-fun ConsTerm (Term Term) Term)
(declare-fun ConsFuel (Fuel Term) Term)
(declare-fun Tm_uvar (Int) Term)
(define-fun Reify ((x Term)) Term x)
(declare-fun Prims.precedes (Term Term Term Term) Term)
(declare-fun Range_const (Int) Term)
(declare-fun _mul (Int Int) Int)
(declare-fun _div (Int Int) Int)
(declare-fun _mod (Int Int) Int)
(declare-fun __uu__PartialApp () Term)
(assert (forall ((x Int) (y Int)) (! (= (_mul x y) (* x y)) :pattern ((_mul x y)))))
(assert (forall ((x Int) (y Int)) (! (= (_div x y) (div x y)) :pattern ((_div x y)))))
(assert (forall ((x Int) (y Int)) (! (= (_mod x y) (mod x y)) :pattern ((_mod x y)))))
(declare-fun _rmul (Real Real) Real)
(declare-fun _rdiv (Real Real) Real)
(assert (forall ((x Real) (y Real)) (! (= (_rmul x y) (* x y)) :pattern ((_rmul x y)))))
(assert (forall ((x Real) (y Real)) (! (= (_rdiv x y) (/ x y)) :pattern ((_rdiv x y)))))
(declare-fun FString_const (Int) FString)
(assert (! (forall ((@u0 Int)) (! (= 0 (FString_constr_id (FString_const @u0))) :pattern ((FString_const @u0)) :qid constructor_distinct_FString_const)) :named constructor_distinct_FString_const))
(declare-fun FString_const_proj_0 (FString) Int)
(assert (! (forall ((@u0 Int)) (! (= (FString_const_proj_0 (FString_const @u0)) @u0) :pattern ((FString_const @u0)) :qid projection_inverse_FString_const_proj_0)) :named projection_inverse_FString_const_proj_0))
(define-fun is-FString_const ((__@u0 FString)) Bool (and (= (FString_constr_id __@u0) 0) (= __@u0 (FString_const (FString_const_proj_0 __@u0)))))
(declare-fun Tm_type () Term)
(assert (! (= 2 (Term_constr_id Tm_type)) :named constructor_distinct_Tm_type))
(define-fun is-Tm_type ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 2) (= __@x0 Tm_type)))
(declare-fun Tm_arrow (Int) Term)
(assert (! (forall ((@u0 Int)) (! (= 3 (Term_constr_id (Tm_arrow @u0))) :pattern ((Tm_arrow @u0)) :qid constructor_distinct_Tm_arrow)) :named constructor_distinct_Tm_arrow))
(declare-fun Tm_arrow_id (Term) Int)
(assert (! (forall ((@u0 Int)) (! (= (Tm_arrow_id (Tm_arrow @u0)) @u0) :pattern ((Tm_arrow @u0)) :qid projection_inverse_Tm_arrow_id)) :named projection_inverse_Tm_arrow_id))
(define-fun is-Tm_arrow ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 3) (= __@x0 (Tm_arrow (Tm_arrow_id __@x0)))))
(declare-fun Tm_unit () Term)
(assert (! (= 6 (Term_constr_id Tm_unit)) :named constructor_distinct_Tm_unit))
(define-fun is-Tm_unit ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 6) (= __@x0 Tm_unit)))
(declare-fun BoxInt (Int) Term)
(assert (! (forall ((@u0 Int)) (! (= 7 (Term_constr_id (BoxInt @u0))) :pattern ((BoxInt @u0)) :qid constructor_distinct_BoxInt)) :named constructor_distinct_BoxInt))
(declare-fun BoxInt_proj_0 (Term) Int)
(assert (! (forall ((@u0 Int)) (! (= (BoxInt_proj_0 (BoxInt @u0)) @u0) :pattern ((BoxInt @u0)) :qid projection_inverse_BoxInt_proj_0)) :named projection_inverse_BoxInt_proj_0))
(define-fun is-BoxInt ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 7) (= __@x0 (BoxInt (BoxInt_proj_0 __@x0)))))
(declare-fun BoxBool (Bool) Term)
(assert (! (forall ((@u0 Bool)) (! (= 8 (Term_constr_id (BoxBool @u0))) :pattern ((BoxBool @u0)) :qid constructor_distinct_BoxBool)) :named constructor_distinct_BoxBool))
(declare-fun BoxBool_proj_0 (Term) Bool)
(assert (! (forall ((@u0 Bool)) (! (= (BoxBool_proj_0 (BoxBool @u0)) @u0) :pattern ((BoxBool @u0)) :qid projection_inverse_BoxBool_proj_0)) :named projection_inverse_BoxBool_proj_0))
(define-fun is-BoxBool ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 8) (= __@x0 (BoxBool (BoxBool_proj_0 __@x0)))))
(declare-fun BoxString (FString) Term)
(assert (! (forall ((@u0 FString)) (! (= 9 (Term_constr_id (BoxString @u0))) :pattern ((BoxString @u0)) :qid constructor_distinct_BoxString)) :named constructor_distinct_BoxString))
(declare-fun BoxString_proj_0 (Term) FString)
(assert (! (forall ((@u0 FString)) (! (= (BoxString_proj_0 (BoxString @u0)) @u0) :pattern ((BoxString @u0)) :qid projection_inverse_BoxString_proj_0)) :named projection_inverse_BoxString_proj_0))
(define-fun is-BoxString ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 9) (= __@x0 (BoxString (BoxString_proj_0 __@x0)))))
(declare-fun BoxReal (Real) Term)
(assert (! (forall ((@u0 Real)) (! (= 10 (Term_constr_id (BoxReal @u0))) :pattern ((BoxReal @u0)) :qid constructor_distinct_BoxReal)) :named constructor_distinct_BoxReal))
(declare-fun BoxReal_proj_0 (Term) Real)
(assert (! (forall ((@u0 Real)) (! (= (BoxReal_proj_0 (BoxReal @u0)) @u0) :pattern ((BoxReal @u0)) :qid projection_inverse_BoxReal_proj_0)) :named projection_inverse_BoxReal_proj_0))
(define-fun is-BoxReal ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 10) (= __@x0 (BoxReal (BoxReal_proj_0 __@x0)))))
(declare-fun Prims.lex_t () Term)
(assert (forall ((t1 Term) (t2 Term) (e1 Term) (e2 Term)) (! (= (Valid (Prims.precedes t1 t2 e1 e2)) (Valid (Prims.precedes Prims.lex_t Prims.lex_t e1 e2))) :pattern ((Prims.precedes t1 t2 e1 e2)))))
(assert (forall ((t1 Term) (t2 Term)) (! (= (Valid (Prims.precedes Prims.lex_t Prims.lex_t t1 t2)) (< (Rank t1) (Rank t2))) :pattern ((Prims.precedes Prims.lex_t Prims.lex_t t1 t2)))))
(assert (forall ((e Term) (t Term)) (! (=> (HasType e t) (Valid t)) :pattern ((HasType e t) (Valid t)) :qid __prelude_valid_intro)))
(declare-fun Prims.attribute () Term)
(declare-fun Prims.cps () Term)
(declare-fun Prims.hasEq (Term) Term)
(declare-fun Tm_arrow_ef9cb512a25ee351fa5536d617490497 () Term)
(declare-fun Prims.hasEq@tok () Term)
(declare-fun Prims.eqtype () Term)
(declare-fun Tm_refine_414d0a9f578ab0048252f8c8f552b99f () Term)
(declare-fun Prims.bool () Term)
(declare-fun Prims.c_False () Term)
(define-fun is-Prims.c_False ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 111) (= __@x0 Prims.c_False)))
(declare-fun Prims.c_True () Term)
(declare-fun Prims.T () Term)
(declare-fun Prims.T@tok () Term)
(define-fun is-Prims.c_True ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 116) (= __@x0 Prims.c_True)))
(define-fun is-Prims.T ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 122) (= __@x0 Prims.T)))
(declare-fun Prims.uu___is_T (Term) Term)
(declare-fun Tm_arrow_1ca40bedfbd5ea31ac81af74c119a09e () Term)
(declare-fun Prims.uu___is_T@tok () Term)
(declare-fun Prims.unit () Term)
(declare-fun Prims.squash (Term) Term)
(declare-fun Prims.squash@tok () Term)
(declare-fun Tm_refine_2de20c066034c13bf76e9c0b94f4806c (Term) Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (HasTypeFuel @u0 @x1 (Tm_refine_2de20c066034c13bf76e9c0b94f4806c @x2)) (and (HasTypeFuel @u0 @x1 Prims.unit) (Valid @x2 ) )) :pattern ((HasTypeFuel @u0 @x1 (Tm_refine_2de20c066034c13bf76e9c0b94f4806c @x2))) :qid refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c)) :named refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c))
(assert (! (forall ((@x0 Term)) (! (= (Prims.squash @x0) (Tm_refine_2de20c066034c13bf76e9c0b94f4806c @x0)) :pattern ((Prims.squash @x0)) :qid equation_Prims.squash)) :named equation_Prims.squash))
(declare-fun Prims.auto_squash (Term) Term)
(declare-fun Prims.auto_squash@tok () Term)
(declare-fun Prims.logical () Term)
(declare-fun Prims.smt_theory_symbol () Term)
(declare-fun Prims.l_True () Term)
(declare-fun Prims.l_False () Term)
(declare-fun Prims.equals (Term Term Term) Term)
(declare-fun Prims.equals@x0 (Term) Term)
(declare-fun Prims.equals@x1 (Term) Term)
(declare-fun Prims.equals@x2 (Term) Term)
(declare-fun Prims.equals@tok () Term)
(declare-fun Prims.Refl (Term Term) Term)
(declare-fun Prims.Refl_a (Term) Term)
(declare-fun Prims.Refl_x (Term) Term)
(declare-fun Prims.Refl@tok () Term)
(declare-fun Tm_arrow_8e00c6263684633abbc1d1a87608e391 () Term)
(define-fun is-Prims.equals ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 134) (exists ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= __@x0 (Prims.equals @x0 @x1 @x2)) :qid is-Prims.equals))))
(define-fun is-Prims.Refl ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 141) (= __@x0 (Prims.Refl (Prims.Refl_a __@x0) (Prims.Refl_x __@x0)))))
(declare-fun Prims.uu___is_Refl (Term Term Term Term) Term)
(declare-fun Tm_arrow_2a4540f76c8969717ea911077d7b4d15 () Term)
(declare-fun Prims.uu___is_Refl@tok () Term)
(declare-fun Prims.eq2 (Term Term Term) Term)
(declare-fun Tm_arrow_1ec40cec1da281b45a559c74dd57f3b7 () Term)
(declare-fun Prims.eq2@tok () Term)
(declare-fun Prims.h_equals (Term Term Term Term) Term)
(declare-fun Prims.h_equals@x0 (Term) Term)
(declare-fun Prims.h_equals@x1 (Term) Term)
(declare-fun Prims.h_equals@x2 (Term) Term)
(declare-fun Prims.h_equals@x3 (Term) Term)
(declare-fun Prims.h_equals@tok () Term)
(declare-fun Prims.HRefl (Term Term) Term)
(declare-fun Prims.HRefl_a (Term) Term)
(declare-fun Prims.HRefl_x (Term) Term)
(declare-fun Prims.HRefl@tok () Term)
(declare-fun Tm_arrow_88c25e785888d4e0c2c73392ffd9505d () Term)
(define-fun is-Prims.h_equals ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 149) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= __@x0 (Prims.h_equals @x0 @x1 @x2 @x3)) :qid is-Prims.h_equals))))
(define-fun is-Prims.HRefl ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 156) (= __@x0 (Prims.HRefl (Prims.HRefl_a __@x0) (Prims.HRefl_x __@x0)))))
(declare-fun Prims.uu___is_HRefl (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_985220cbab27fbd2cc6dbc457b76b91a () Term)
(declare-fun Prims.uu___is_HRefl@tok () Term)
(declare-fun Prims.eq3 (Term Term Term Term) Term)
(declare-fun Tm_arrow_7fcb145b23c2ac843afd9b126c4f71a9 () Term)
(declare-fun Prims.eq3@tok () Term)
(declare-fun Prims.b2t (Term) Term)
(assert (! (forall ((@x0 Term)) (! (= (Valid (Prims.b2t @x0)) (BoxBool_proj_0 @x0)) :pattern ((Prims.b2t @x0)) :qid b2t_def)) :named b2t_def))
(declare-fun Prims.c_and (Term Term) Term)
(declare-fun Prims.c_and@x0 (Term) Term)
(declare-fun Prims.c_and@x1 (Term) Term)
(declare-fun Prims.c_and@tok () Term)
(declare-fun Prims.And (Term Term Term Term) Term)
(declare-fun Prims.And_p (Term) Term)
(declare-fun Prims.And_q (Term) Term)
(declare-fun Prims.And__0 (Term) Term)
(declare-fun Prims.And__1 (Term) Term)
(declare-fun Prims.And@tok () Term)
(declare-fun Tm_arrow_c964acbbcf3ac1f157b4be52412de0f2 () Term)
(define-fun is-Prims.c_and ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 164) (exists ((@x0 Term) (@x1 Term)) (! (= __@x0 (Prims.c_and @x0 @x1)) :qid is-Prims.c_and))))
(define-fun is-Prims.And ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 171) (= __@x0 (Prims.And (Prims.And_p __@x0) (Prims.And_q __@x0) (Prims.And__0 __@x0) (Prims.And__1 __@x0)))))
(declare-fun Prims.uu___is_And (Term Term Term) Term)
(declare-fun Tm_arrow_98dc03784ff39a101fb534007f473933 () Term)
(declare-fun Prims.uu___is_And@tok () Term)
(declare-fun Prims.__proj__And__item___0 (Term Term Term) Term)
(declare-fun Tm_arrow_62000c87a2ac04dc4129db0bf2e4a484 () Term)
(declare-fun Prims.__proj__And__item___0@tok () Term)
(declare-fun Prims.__proj__And__item___1 (Term Term Term) Term)
(declare-fun Tm_arrow_74ecbc1aa6be8c1f078b3f4a04e85892 () Term)
(declare-fun Prims.__proj__And__item___1@tok () Term)
(declare-fun Prims.l_and (Term Term) Term)
(declare-fun Tm_arrow_289ee2cc5874944bf725b9e3db8c0fd6 () Term)
(declare-fun Prims.l_and@tok () Term)
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (Prims.l_and @x0 @x1) (Prims.squash (Prims.c_and @x0 @x1))) :pattern ((Prims.l_and @x0 @x1)) :qid equation_Prims.l_and)) :named equation_Prims.l_and))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (and (Valid @x0) (Valid @x1)) (Valid (Prims.l_and @x0 @x1))) :pattern ((Prims.l_and @x0 @x1)) :qid l_and-interp)) :named l_and-interp))
(declare-fun Prims.c_or (Term Term) Term)
(declare-fun Prims.c_or@x0 (Term) Term)
(declare-fun Prims.c_or@x1 (Term) Term)
(declare-fun Prims.c_or@tok () Term)
(declare-fun Prims.Left (Term Term Term) Term)
(declare-fun Prims.Left_p (Term) Term)
(declare-fun Prims.Left_q (Term) Term)
(declare-fun Prims.Left__0 (Term) Term)
(declare-fun Prims.Left@tok () Term)
(declare-fun Prims.Right (Term Term Term) Term)
(declare-fun Prims.Right_p (Term) Term)
(declare-fun Prims.Right_q (Term) Term)
(declare-fun Prims.Right__0 (Term) Term)
(declare-fun Prims.Right@tok () Term)
(declare-fun Tm_arrow_fd80693647ee9c426b2ca647008a9d5a () Term)
(declare-fun Tm_arrow_e817f0b7fc30ff1a4a48917b36fbcdd7 () Term)
(define-fun is-Prims.c_or ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 183) (exists ((@x0 Term) (@x1 Term)) (! (= __@x0 (Prims.c_or @x0 @x1)) :qid is-Prims.c_or))))
(define-fun is-Prims.Left ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 190) (= __@x0 (Prims.Left (Prims.Left_p __@x0) (Prims.Left_q __@x0) (Prims.Left__0 __@x0)))))
(define-fun is-Prims.Right ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 195) (= __@x0 (Prims.Right (Prims.Right_p __@x0) (Prims.Right_q __@x0) (Prims.Right__0 __@x0)))))
(declare-fun Prims.uu___is_Left (Term Term Term) Term)
(declare-fun Tm_arrow_0f4b00d5a737ef6de69227e014837c34 () Term)
(declare-fun Prims.uu___is_Left@tok () Term)
(declare-fun Tm_refine_51387c0a7ef77e43ab89d4ae2b6b464d (Term Term) Term)
(declare-fun Prims.__proj__Left__item___0 (Term Term Term) Term)
(declare-fun Tm_arrow_e072c573e2fe374200b0390c4a6c5fa4 () Term)
(declare-fun Prims.__proj__Left__item___0@tok () Term)
(declare-fun Prims.uu___is_Right (Term Term Term) Term)
(declare-fun Prims.uu___is_Right@tok () Term)
(declare-fun Tm_refine_95f078f2b9cfbd740f9afd162814a526 (Term Term) Term)
(declare-fun Prims.__proj__Right__item___0 (Term Term Term) Term)
(declare-fun Tm_arrow_9ffbbc9e6859bf06a2b5db4593c4f0d9 () Term)
(declare-fun Prims.__proj__Right__item___0@tok () Term)
(declare-fun Prims.l_or (Term Term) Term)
(declare-fun Prims.l_or@tok () Term)
(declare-fun Prims.l_imp (Term Term) Term)
(declare-fun Prims.l_imp@tok () Term)
(declare-fun Tm_ghost_arrow_0283b8a2a36bbec52abac4e3d837674a (Term Term) Term)
(declare-fun Prims.l_iff (Term Term) Term)
(declare-fun Prims.l_iff@tok () Term)
(declare-fun Prims.l_not (Term) Term)
(declare-fun Tm_arrow_8178e3b6934aa50ea45bb0ccea2d9711 () Term)
(declare-fun Prims.l_not@tok () Term)
(declare-fun Prims.has_type (Term Term Term) Term)
(declare-fun Tm_arrow_b5d8ed0243b8c7c893f2b329de57c62b () Term)
(declare-fun Prims.has_type@tok () Term)
(declare-fun Tm_arrow_2eaa01e78f73e9bab5d0955fc1a662da (Term) Term)
(declare-fun Prims.l_Forall (Term Term) Term)
(declare-fun Tm_arrow_977ec6901669a051ac66211b8e72666a () Term)
(declare-fun Prims.l_Forall@tok () Term)
(declare-fun Tm_ghost_arrow_3aa447697277bb40c9738c9125c3e80f (Term Term) Term)
(declare-fun Prims.subtype_of (Term Term) Term)
(declare-fun Tm_arrow_28becc0427b69ebf63ea956148504d97 () Term)
(declare-fun Prims.subtype_of@tok () Term)
(declare-fun Tm_abs_2319c8dded71dc14c3f65c301c18a7ca (Term Term) Term)
(declare-fun Prims.prop () Term)
(declare-fun Tm_refine_73f210ca6e0061ed4a3150f69b8f33bf () Term)
(declare-fun Prims.range () Term)
(declare-fun Prims.string () Term)
(declare-fun Prims.pure_pre () Term)
(declare-fun Prims.pure_post_ (Term Term) Term)
(declare-fun Tm_arrow_e4cf09589736facd1137944a1f5a00a6 () Term)
(declare-fun Prims.pure_post_@tok () Term)
(declare-fun Tm_refine_8d65e998a07dd53ec478e27017d9dba5 (Term Term) Term)
(declare-fun Tm_arrow_92458cff82f9ffee1f6e26a1c0c579f3 (Term Term) Term)
(declare-fun Prims.pure_post (Term) Term)
(declare-fun Prims.pure_post@tok () Term)
(declare-fun Prims.pure_wp (Term) Term)
(declare-fun Prims.pure_wp@tok () Term)
(declare-fun Tm_arrow_e5c03abbf8b0946a9aa7ee31bb7999a4 (Term) Term)
(declare-fun Prims.guard_free (Term) Term)
(declare-fun Prims.guard_free@tok () Term)
(declare-fun Prims.pure_assert_wp (Term Term) Term)
(declare-fun Tm_arrow_ca3deb07e9f0f186aabfaffa00eb51fd () Term)
(declare-fun Prims.pure_assert_wp@tok () Term)
(declare-fun Prims.pure_assume_wp (Term Term) Term)
(declare-fun Prims.pure_assume_wp@tok () Term)
(declare-fun Prims.dtuple2 (Term Term) Term)
(declare-fun Prims.dtuple2@x0 (Term) Term)
(declare-fun Prims.dtuple2@x1 (Term) Term)
(declare-fun Prims.dtuple2@tok () Term)
(declare-fun Prims.Mkdtuple2 (Term Term Term Term) Term)
(declare-fun Prims.Mkdtuple2_a (Term) Term)
(declare-fun Prims.Mkdtuple2_b (Term) Term)
(declare-fun Prims.Mkdtuple2__1 (Term) Term)
(declare-fun Prims.Mkdtuple2__2 (Term) Term)
(declare-fun Prims.Mkdtuple2@tok () Term)
(declare-fun Tm_arrow_22a50f5c5c9bb74bac4384fb8999be8b () Term)
(define-fun is-Prims.dtuple2 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 264) (exists ((@x0 Term) (@x1 Term)) (! (= __@x0 (Prims.dtuple2 @x0 @x1)) :qid is-Prims.dtuple2))))
(define-fun is-Prims.Mkdtuple2 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 273) (= __@x0 (Prims.Mkdtuple2 (Prims.Mkdtuple2_a __@x0) (Prims.Mkdtuple2_b __@x0) (Prims.Mkdtuple2__1 __@x0) (Prims.Mkdtuple2__2 __@x0)))))
(declare-fun Prims.uu___is_Mkdtuple2 (Term Term Term) Term)
(declare-fun Tm_arrow_e6f9f7cb1936ec43b52469e706dcadcc () Term)
(declare-fun Prims.uu___is_Mkdtuple2@tok () Term)
(declare-fun Prims.__proj__Mkdtuple2__item___1 (Term Term Term) Term)
(declare-fun Tm_arrow_26c013ffba39d4f7eeb4bcc80d2d4e22 () Term)
(declare-fun Prims.__proj__Mkdtuple2__item___1@tok () Term)
(declare-fun Prims.__proj__Mkdtuple2__item___2 (Term Term Term) Term)
(declare-fun Tm_arrow_870cc7701a0d9a8a2d6fb92427a97d66 () Term)
(declare-fun Prims.__proj__Mkdtuple2__item___2@tok () Term)
(declare-fun Prims.l_Exists (Term Term) Term)
(declare-fun Prims.l_Exists@tok () Term)
(declare-fun Prims.int () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term)) (! (=> (HasTypeFuel @u0 @x1 Prims.int) (is-BoxInt @x1)) :pattern ((HasTypeFuel @u0 @x1 Prims.int)) :qid int_inversion)) :named int_inversion))
(declare-fun Prims.range_0 () Term)
(declare-fun Prims.mk_range (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_5f96b500c0940697aac1b5a6625b2368 () Term)
(declare-fun Prims.mk_range@tok () Term)
(declare-fun Prims.op_AmpAmp (Term Term) Term)
(declare-fun Prims.op_AmpAmp@tok () Term)
(declare-fun Prims.op_BarBar (Term Term) Term)
(declare-fun Prims.op_BarBar@tok () Term)
(declare-fun Prims.op_Negation (Term) Term)
(declare-fun Prims.op_Negation@tok () Term)
(declare-fun Prims.op_Multiply (Term Term) Term)
(declare-fun Prims.op_Multiply@tok () Term)
(declare-fun Prims.op_Subtraction (Term Term) Term)
(declare-fun Prims.op_Subtraction@tok () Term)
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (Prims.op_Subtraction @x0 @x1) (BoxInt (- (BoxInt_proj_0 @x0) (BoxInt_proj_0 @x1)))) :pattern ((Prims.op_Subtraction @x0 @x1)) :qid primitive_Prims.op_Subtraction)) :named primitive_Prims.op_Subtraction))
(declare-fun Prims.op_Addition (Term Term) Term)
(declare-fun Prims.op_Addition@tok () Term)
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (Prims.op_Addition @x0 @x1) (BoxInt (+ (BoxInt_proj_0 @x0) (BoxInt_proj_0 @x1)))) :pattern ((Prims.op_Addition @x0 @x1)) :qid primitive_Prims.op_Addition)) :named primitive_Prims.op_Addition))
(declare-fun Prims.op_Minus (Term) Term)
(declare-fun Prims.op_Minus@tok () Term)
(declare-fun Prims.op_LessThanOrEqual (Term Term) Term)
(declare-fun Prims.op_LessThanOrEqual@tok () Term)
(declare-fun Prims.op_GreaterThan (Term Term) Term)
(declare-fun Prims.op_GreaterThan@tok () Term)
(declare-fun Prims.op_GreaterThanOrEqual (Term Term) Term)
(declare-fun Prims.op_GreaterThanOrEqual@tok () Term)
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (Prims.op_GreaterThanOrEqual @x0 @x1) (BoxBool (>= (BoxInt_proj_0 @x0) (BoxInt_proj_0 @x1)))) :pattern ((Prims.op_GreaterThanOrEqual @x0 @x1)) :qid primitive_Prims.op_GreaterThanOrEqual)) :named primitive_Prims.op_GreaterThanOrEqual))
(declare-fun Prims.op_LessThan (Term Term) Term)
(declare-fun Prims.op_LessThan@tok () Term)
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (Prims.op_LessThan @x0 @x1) (BoxBool (< (BoxInt_proj_0 @x0) (BoxInt_proj_0 @x1)))) :pattern ((Prims.op_LessThan @x0 @x1)) :qid primitive_Prims.op_LessThan)) :named primitive_Prims.op_LessThan))
(declare-fun Prims.op_Equality (Term Term Term) Term)
(declare-fun Prims.op_Equality@tok () Term)
(declare-fun Prims.op_disEquality (Term Term Term) Term)
(declare-fun Prims.op_disEquality@tok () Term)
(declare-fun Prims.exn () Term)
(declare-fun Prims.array (Term) Term)
(declare-fun Prims.array@tok () Term)
(declare-fun Prims.deprecated (Term) Term)
(declare-fun Tm_arrow_2863eb88d7490a9c3cf347c16ca04740 () Term)
(declare-fun Prims.deprecated@tok () Term)
(declare-fun Prims.warn_on_use (Term) Term)
(declare-fun Prims.warn_on_use@tok () Term)
(declare-fun Prims.strcat (Term Term) Term)
(declare-fun Tm_arrow_b66cecec1d56111347abe61e89557dd1 () Term)
(declare-fun Prims.strcat@tok () Term)
(declare-fun Prims.list (Term) Term)
(declare-fun Prims.list@x0 (Term) Term)
(declare-fun Prims.list@tok () Term)
(declare-fun Prims.Nil (Term) Term)
(declare-fun Prims.Nil_a (Term) Term)
(declare-fun Prims.Nil@tok () Term)
(declare-fun Prims.Cons (Term Term Term) Term)
(declare-fun Prims.Cons_a (Term) Term)
(declare-fun Prims.Cons_hd (Term) Term)
(declare-fun Prims.Cons_tl (Term) Term)
(declare-fun Prims.Cons@tok () Term)
(declare-fun Tm_arrow_3864bd5fbb999b4fe4487408df9b3401 () Term)
(declare-fun Tm_arrow_02c072760cbad0f5a4706f6cffab6c94 () Term)
(define-fun is-Prims.list ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 332) (exists ((@x0 Term)) (! (= __@x0 (Prims.list @x0)) :qid is-Prims.list))))
(define-fun is-Prims.Nil ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 339) (= __@x0 (Prims.Nil (Prims.Nil_a __@x0)))))
(define-fun is-Prims.Cons ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 344) (= __@x0 (Prims.Cons (Prims.Cons_a __@x0) (Prims.Cons_hd __@x0) (Prims.Cons_tl __@x0)))))
(declare-fun Prims.uu___is_Nil (Term Term) Term)
(declare-fun Tm_arrow_606904b0fa72729a20285beb231f9f2e () Term)
(declare-fun Prims.uu___is_Nil@tok () Term)
(declare-fun Prims.uu___is_Cons (Term Term) Term)
(declare-fun Prims.uu___is_Cons@tok () Term)
(declare-fun Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32 (Term) Term)
(declare-fun Prims.__proj__Cons__item__hd (Term Term) Term)
(declare-fun Tm_arrow_27c3547831737e5a63950f3d18bf3d22 () Term)
(declare-fun Prims.__proj__Cons__item__hd@tok () Term)
(declare-fun Prims.__proj__Cons__item__tl (Term Term) Term)
(declare-fun Tm_arrow_4e740085106d54d8b48ffe3c6c20ef21 () Term)
(declare-fun Prims.__proj__Cons__item__tl@tok () Term)
(declare-fun Prims.returnM (Term Term) Term)
(declare-fun Tm_arrow_99724436653747ac6f5a6a00c64ff8bc () Term)
(declare-fun Prims.returnM@tok () Term)
(declare-fun Prims._assume (Term) Term)
(declare-fun Non_total_Tm_arrow_17922c7474b277539913d1f56365d3b9 () Term)
(declare-fun Prims._assume@tok () Term)
(declare-fun Prims.admit (Term Term) Term)
(declare-fun Prims.admit@tok () Term)
(declare-fun Prims.magic (Term Term) Term)
(declare-fun Tm_arrow_f5df98ce82fbcebbbdb844c958bee4fb () Term)
(declare-fun Prims.magic@tok () Term)
(declare-fun Prims.unsafe_coerce (Term Term Term) Term)
(declare-fun Tm_arrow_443ab41008720460b7a09e280558a60f () Term)
(declare-fun Prims.unsafe_coerce@tok () Term)
(declare-fun Prims.admitP (Term) Term)
(declare-fun Prims.admitP@tok () Term)
(declare-fun Prims._assert (Term) Term)
(declare-fun Non_total_Tm_arrow_1e42c129c62265872e42c56d034abab3 () Term)
(declare-fun Prims._assert@tok () Term)
(declare-fun Prims.cut (Term) Term)
(declare-fun Prims.cut@tok () Term)
(declare-fun Prims.nat () Term)
(declare-fun Tm_refine_542f9d4f129664613f2483a6c88bc7c2 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term)) (! (= (HasTypeFuel @u0 @x1 Tm_refine_542f9d4f129664613f2483a6c88bc7c2) (and (HasTypeFuel @u0 @x1 Prims.int) (>= (BoxInt_proj_0 @x1) (BoxInt_proj_0 (BoxInt 0))) )) :pattern ((HasTypeFuel @u0 @x1 Tm_refine_542f9d4f129664613f2483a6c88bc7c2)) :qid refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2)) :named refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2))
(assert (! (= Prims.nat Tm_refine_542f9d4f129664613f2483a6c88bc7c2) :named equation_Prims.nat))
(declare-fun Prims.pos () Term)
(declare-fun Tm_refine_774ba3f728d91ead8ef40be66c9802e5 () Term)
(declare-fun Prims.nonzero () Term)
(declare-fun Tm_refine_0766302b68bb44ab7aff8c4d8be0b46f () Term)
(declare-fun Prims.op_Modulus (Term Term) Term)
(declare-fun Prims.op_Modulus@tok () Term)
(declare-fun Prims.op_Division (Term Term) Term)
(declare-fun Prims.op_Division@tok () Term)
(declare-fun Prims.pow2.fuel_instrumented (Fuel Term) Term)
(declare-fun Prims.pow2.fuel_instrumented_token () Term)
(declare-fun Prims.pow2 (Term) Term)
(declare-fun Prims.pow2@tok () Term)
(declare-fun Tm_arrow_c331a0e032e021e1eaa359b3983de4f2 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term)) (! (= (Prims.pow2.fuel_instrumented (SFuel @u0) @x1) (Prims.pow2.fuel_instrumented ZFuel @x1)) :pattern ((Prims.pow2.fuel_instrumented (SFuel @u0) @x1)) :qid @fuel_irrelevance_Prims.pow2.fuel_instrumented)) :named fuel_irrelevance_Prims.pow2.fuel_instrumented))
(assert (! (forall ((@x0 Term)) (! (= (Prims.pow2 @x0) (Prims.pow2.fuel_instrumented MaxFuel @x0)) :pattern ((Prims.pow2 @x0)) :qid @fuel_correspondence_Prims.pow2.fuel_instrumented)) :named fuel_correspondence_Prims.pow2.fuel_instrumented))
(declare-fun Prims.min (Term Term) Term)
(declare-fun Tm_arrow_47fc285d7b44e13bcb7e420cbfc55623 () Term)
(declare-fun Prims.min@tok () Term)
(declare-fun Prims.abs (Term) Term)
(declare-fun Tm_arrow_35447810753695c4fe25c93af1251992 () Term)
(declare-fun Prims.abs@tok () Term)
(declare-fun Prims.string_of_bool (Term) Term)
(declare-fun Tm_arrow_e86b54405c2a58719f5e8112efd48c09 () Term)
(declare-fun Prims.string_of_bool@tok () Term)
(declare-fun Prims.string_of_int (Term) Term)
(declare-fun Tm_arrow_2bc066ec63734c94a3c008e1e72cae2b () Term)
(declare-fun Prims.string_of_int@tok () Term)
(declare-fun Prims.labeled (Term Term Term) Term)
(declare-fun Tm_arrow_04aa773f28f907e6a0b5741576bf5493 () Term)
(declare-fun Prims.labeled@tok () Term)
(declare-fun Prims.__cache_version_number__ () Term)
(declare-fun FStar.Pervasives.Native.option (Term) Term)
(declare-fun FStar.Pervasives.Native.option@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.option@tok () Term)
(declare-fun FStar.Pervasives.Native.None (Term) Term)
(declare-fun FStar.Pervasives.Native.None_a (Term) Term)
(declare-fun FStar.Pervasives.Native.None@tok () Term)
(declare-fun FStar.Pervasives.Native.Some (Term Term) Term)
(declare-fun FStar.Pervasives.Native.Some_a (Term) Term)
(declare-fun FStar.Pervasives.Native.Some_v (Term) Term)
(declare-fun FStar.Pervasives.Native.Some@tok () Term)
(declare-fun Tm_arrow_48b914114ec9f2f1caadf0f6848a9741 () Term)
(declare-fun Tm_arrow_b93a364b5144c2a5f3e9d1ea7b881752 () Term)
(define-fun is-FStar.Pervasives.Native.option ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 101) (exists ((@x0 Term)) (! (= __@x0 (FStar.Pervasives.Native.option @x0)) :qid is-FStar.Pervasives.Native.option))))
(define-fun is-FStar.Pervasives.Native.None ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 108) (= __@x0 (FStar.Pervasives.Native.None (FStar.Pervasives.Native.None_a __@x0)))))
(define-fun is-FStar.Pervasives.Native.Some ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 113) (= __@x0 (FStar.Pervasives.Native.Some (FStar.Pervasives.Native.Some_a __@x0) (FStar.Pervasives.Native.Some_v __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_None (Term Term) Term)
(declare-fun Tm_arrow_f1a97bcd6ba9b40d22609b756f183afa () Term)
(declare-fun FStar.Pervasives.Native.uu___is_None@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Some (Term Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_Some@tok () Term)
(declare-fun Tm_refine_4d5241eb6fe198666a8101195bbd4a2a (Term) Term)
(declare-fun FStar.Pervasives.Native.__proj__Some__item__v (Term Term) Term)
(declare-fun Tm_arrow_1b1398c011ff53e4194fc2ec00c7b411 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Some__item__v@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple2 (Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple2@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple2@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple2@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple2 (Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple2__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple2__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple2__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple2__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple2@tok () Term)
(declare-fun Tm_arrow_4054cc0a51327db54c2ed9ba3376a093 () Term)
(define-fun is-FStar.Pervasives.Native.tuple2 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 125) (exists ((@x0 Term) (@x1 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple2 @x0 @x1)) :qid is-FStar.Pervasives.Native.tuple2))))
(define-fun is-FStar.Pervasives.Native.Mktuple2 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 132) (= __@x0 (FStar.Pervasives.Native.Mktuple2 (FStar.Pervasives.Native.Mktuple2__a __@x0) (FStar.Pervasives.Native.Mktuple2__b __@x0) (FStar.Pervasives.Native.Mktuple2__1 __@x0) (FStar.Pervasives.Native.Mktuple2__2 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple2 (Term Term Term) Term)
(declare-fun Tm_arrow_eff71eeee4474e017e02350f86f54756 () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple2__item___1 (Term Term Term) Term)
(declare-fun Tm_arrow_b8cce376a4a678a51298a0f3945f25ce () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple2__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple2__item___2 (Term Term Term) Term)
(declare-fun Tm_arrow_d952d001575ecb20c572af535c88dd2d () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple2__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.fst (Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.fst@tok () Term)
(declare-fun FStar.Pervasives.Native.snd (Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.snd@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple3 (Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple3@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple3@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple3@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple3@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple3 (Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3@tok () Term)
(declare-fun Tm_arrow_1bedda193f13e939931cf5d46ad84216 () Term)
(define-fun is-FStar.Pervasives.Native.tuple3 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 146) (exists ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple3 @x0 @x1 @x2)) :qid is-FStar.Pervasives.Native.tuple3))))
(define-fun is-FStar.Pervasives.Native.Mktuple3 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 153) (= __@x0 (FStar.Pervasives.Native.Mktuple3 (FStar.Pervasives.Native.Mktuple3__a __@x0) (FStar.Pervasives.Native.Mktuple3__b __@x0) (FStar.Pervasives.Native.Mktuple3__c __@x0) (FStar.Pervasives.Native.Mktuple3__1 __@x0) (FStar.Pervasives.Native.Mktuple3__2 __@x0) (FStar.Pervasives.Native.Mktuple3__3 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple3 (Term Term Term Term) Term)
(declare-fun Tm_arrow_f03c6dc5b30146aaca49ed4bf6f332a7 () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple3__item___1 (Term Term Term Term) Term)
(declare-fun Tm_arrow_592c45439d32a71e1933eacb9776c9ed () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple3__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple3__item___2 (Term Term Term Term) Term)
(declare-fun Tm_arrow_9c9b0c5ac9b0fbfc367f406af296ecab () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple3__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple3__item___3 (Term Term Term Term) Term)
(declare-fun Tm_arrow_08246a62c9aeca08c44c602ad80e95a4 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple3__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple4 (Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple4@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple4@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple4@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple4@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple4@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple4 (Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4@tok () Term)
(declare-fun Tm_arrow_cbe72a10167439fe1ecfaf4fec8fd23f () Term)
(define-fun is-FStar.Pervasives.Native.tuple4 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 165) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple4 @x0 @x1 @x2 @x3)) :qid is-FStar.Pervasives.Native.tuple4))))
(define-fun is-FStar.Pervasives.Native.Mktuple4 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 172) (= __@x0 (FStar.Pervasives.Native.Mktuple4 (FStar.Pervasives.Native.Mktuple4__a __@x0) (FStar.Pervasives.Native.Mktuple4__b __@x0) (FStar.Pervasives.Native.Mktuple4__c __@x0) (FStar.Pervasives.Native.Mktuple4__d __@x0) (FStar.Pervasives.Native.Mktuple4__1 __@x0) (FStar.Pervasives.Native.Mktuple4__2 __@x0) (FStar.Pervasives.Native.Mktuple4__3 __@x0) (FStar.Pervasives.Native.Mktuple4__4 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple4 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_4319694c225efa92ce9fad6e9d81f761 () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___1 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_382d1e9129053162252ec57e86d46f82 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___2 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_fffd25e5325d259efa0675ef649c6864 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___3 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_57b4005e0833f7b396e349ed7cdd1bb2 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___4 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9e6c1a63d63f8735645b9898955a2dca () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple5 (Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple5@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple5@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple5@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple5@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple5@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple5@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple5 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5@tok () Term)
(declare-fun Tm_arrow_dd8a078a1b97a81b5089dc3637cc2887 () Term)
(define-fun is-FStar.Pervasives.Native.tuple5 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 186) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple5 @x0 @x1 @x2 @x3 @x4)) :qid is-FStar.Pervasives.Native.tuple5))))
(define-fun is-FStar.Pervasives.Native.Mktuple5 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 193) (= __@x0 (FStar.Pervasives.Native.Mktuple5 (FStar.Pervasives.Native.Mktuple5__a __@x0) (FStar.Pervasives.Native.Mktuple5__b __@x0) (FStar.Pervasives.Native.Mktuple5__c __@x0) (FStar.Pervasives.Native.Mktuple5__d __@x0) (FStar.Pervasives.Native.Mktuple5__e __@x0) (FStar.Pervasives.Native.Mktuple5__1 __@x0) (FStar.Pervasives.Native.Mktuple5__2 __@x0) (FStar.Pervasives.Native.Mktuple5__3 __@x0) (FStar.Pervasives.Native.Mktuple5__4 __@x0) (FStar.Pervasives.Native.Mktuple5__5 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple5 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_cfa2e2c8b8b41312889ff659c4faa5f9 () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___1 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_7519f72fe101267af170e00c6ce694af () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___2 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_3e46329f224aa70981a337f98afbaa87 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___3 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_55e6dc1b736536de45fedf844003f847 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___4 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_3a4e86c6aee1a39b4811bdbc12405398 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___5 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1a78355922fdaba3f3848932dfc0a089 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple6 (Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple6@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple6@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple6@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple6@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple6@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple6@x5 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple6@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple6 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6@tok () Term)
(declare-fun Tm_arrow_f277ffaa7e891207f9c6bff5b88ffd67 () Term)
(define-fun is-FStar.Pervasives.Native.tuple6 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 209) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple6 @x0 @x1 @x2 @x3 @x4 @x5)) :qid is-FStar.Pervasives.Native.tuple6))))
(define-fun is-FStar.Pervasives.Native.Mktuple6 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 216) (= __@x0 (FStar.Pervasives.Native.Mktuple6 (FStar.Pervasives.Native.Mktuple6__a __@x0) (FStar.Pervasives.Native.Mktuple6__b __@x0) (FStar.Pervasives.Native.Mktuple6__c __@x0) (FStar.Pervasives.Native.Mktuple6__d __@x0) (FStar.Pervasives.Native.Mktuple6__e __@x0) (FStar.Pervasives.Native.Mktuple6__f __@x0) (FStar.Pervasives.Native.Mktuple6__1 __@x0) (FStar.Pervasives.Native.Mktuple6__2 __@x0) (FStar.Pervasives.Native.Mktuple6__3 __@x0) (FStar.Pervasives.Native.Mktuple6__4 __@x0) (FStar.Pervasives.Native.Mktuple6__5 __@x0) (FStar.Pervasives.Native.Mktuple6__6 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple6 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_286587a1b9d299ba75a076f54a6dad5f () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___1 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_5b1e145eeceab869b8e427e6927dbd63 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___2 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_3207475e225d584881d3e0a297482887 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___3 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_43e491b3b537a523a4f10de18b1915f5 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___4 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_f5747d5b721642d7ecb757b043f20880 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___5 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_d6501381a0206e157ecc43950bb31fea () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___6 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9c342f41120d0c7aea115b09b58cefb2 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple7 (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple7@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple7@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple7@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple7@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple7@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple7@x5 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple7@x6 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple7@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple7 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__g (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__7 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7@tok () Term)
(declare-fun Tm_arrow_37ee9ec407a0f7bb69bf1b308f74a230 () Term)
(define-fun is-FStar.Pervasives.Native.tuple7 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 234) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple7 @x0 @x1 @x2 @x3 @x4 @x5 @x6)) :qid is-FStar.Pervasives.Native.tuple7))))
(define-fun is-FStar.Pervasives.Native.Mktuple7 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 241) (= __@x0 (FStar.Pervasives.Native.Mktuple7 (FStar.Pervasives.Native.Mktuple7__a __@x0) (FStar.Pervasives.Native.Mktuple7__b __@x0) (FStar.Pervasives.Native.Mktuple7__c __@x0) (FStar.Pervasives.Native.Mktuple7__d __@x0) (FStar.Pervasives.Native.Mktuple7__e __@x0) (FStar.Pervasives.Native.Mktuple7__f __@x0) (FStar.Pervasives.Native.Mktuple7__g __@x0) (FStar.Pervasives.Native.Mktuple7__1 __@x0) (FStar.Pervasives.Native.Mktuple7__2 __@x0) (FStar.Pervasives.Native.Mktuple7__3 __@x0) (FStar.Pervasives.Native.Mktuple7__4 __@x0) (FStar.Pervasives.Native.Mktuple7__5 __@x0) (FStar.Pervasives.Native.Mktuple7__6 __@x0) (FStar.Pervasives.Native.Mktuple7__7 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple7 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_612dde2fedb1440c5d790ba7f5015319 () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple7@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___1 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_01c4488a68699f466c59799f5c1173ff () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___2 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_f317591858699585c67fe4ba8664e34c () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___3 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_44afce9d86f095aacc82b3ea2e0e223c () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___4 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_e857539d4cc5be0510cbcfb97cb64b35 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___5 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_a249d3d5ba06026b12d41e289bb88061 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___6 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_bf614c740d11cac9b5f8eb20b24c7d00 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___7 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_e775fbf03b08091e48143165286522f7 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___7@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple8 (Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@x5 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@x6 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@x7 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple8 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__g (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__h (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__7 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__8 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8@tok () Term)
(declare-fun Tm_arrow_e922a339a0aa0f375ed7113049811583 () Term)
(define-fun is-FStar.Pervasives.Native.tuple8 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 261) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple8 @x0 @x1 @x2 @x3 @x4 @x5 @x6 @x7)) :qid is-FStar.Pervasives.Native.tuple8))))
(define-fun is-FStar.Pervasives.Native.Mktuple8 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 268) (= __@x0 (FStar.Pervasives.Native.Mktuple8 (FStar.Pervasives.Native.Mktuple8__a __@x0) (FStar.Pervasives.Native.Mktuple8__b __@x0) (FStar.Pervasives.Native.Mktuple8__c __@x0) (FStar.Pervasives.Native.Mktuple8__d __@x0) (FStar.Pervasives.Native.Mktuple8__e __@x0) (FStar.Pervasives.Native.Mktuple8__f __@x0) (FStar.Pervasives.Native.Mktuple8__g __@x0) (FStar.Pervasives.Native.Mktuple8__h __@x0) (FStar.Pervasives.Native.Mktuple8__1 __@x0) (FStar.Pervasives.Native.Mktuple8__2 __@x0) (FStar.Pervasives.Native.Mktuple8__3 __@x0) (FStar.Pervasives.Native.Mktuple8__4 __@x0) (FStar.Pervasives.Native.Mktuple8__5 __@x0) (FStar.Pervasives.Native.Mktuple8__6 __@x0) (FStar.Pervasives.Native.Mktuple8__7 __@x0) (FStar.Pervasives.Native.Mktuple8__8 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple8 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_ee31533e24c78558f4566668a6ec027c () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple8@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___1 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_c971649e117e4941e7317eff508d5ea7 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___2 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_97dd51e3888c1c543d8f6c73d1808548 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___3 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_3931d1873633dc65fed4e022ee3df3ca () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___4 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_5c791e62f9472e4c351c2befb2b7a3d8 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___5 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_7ef7cac898ca0ef25893959e91d8c6ce () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___6 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_b0ae5f58a7fa002e0313b58bf5fc74cb () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___7 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_7fcd94f7549ca8acfadc26bc5b82f590 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___7@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___8 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_feaaf61fa62fef18c5ee7c39e9f86573 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___8@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple9 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@x5 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@x6 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@x7 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@x8 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple9@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple9 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__g (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__h (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__i (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__7 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__8 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9__9 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple9@tok () Term)
(declare-fun Tm_arrow_0c6bc368a301d7de6e1939ebea91ee60 () Term)
(define-fun is-FStar.Pervasives.Native.tuple9 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 290) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term) (@x8 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple9 @x0 @x1 @x2 @x3 @x4 @x5 @x6 @x7 @x8)) :qid is-FStar.Pervasives.Native.tuple9))))
(define-fun is-FStar.Pervasives.Native.Mktuple9 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 297) (= __@x0 (FStar.Pervasives.Native.Mktuple9 (FStar.Pervasives.Native.Mktuple9__a __@x0) (FStar.Pervasives.Native.Mktuple9__b __@x0) (FStar.Pervasives.Native.Mktuple9__c __@x0) (FStar.Pervasives.Native.Mktuple9__d __@x0) (FStar.Pervasives.Native.Mktuple9__e __@x0) (FStar.Pervasives.Native.Mktuple9__f __@x0) (FStar.Pervasives.Native.Mktuple9__g __@x0) (FStar.Pervasives.Native.Mktuple9__h __@x0) (FStar.Pervasives.Native.Mktuple9__i __@x0) (FStar.Pervasives.Native.Mktuple9__1 __@x0) (FStar.Pervasives.Native.Mktuple9__2 __@x0) (FStar.Pervasives.Native.Mktuple9__3 __@x0) (FStar.Pervasives.Native.Mktuple9__4 __@x0) (FStar.Pervasives.Native.Mktuple9__5 __@x0) (FStar.Pervasives.Native.Mktuple9__6 __@x0) (FStar.Pervasives.Native.Mktuple9__7 __@x0) (FStar.Pervasives.Native.Mktuple9__8 __@x0) (FStar.Pervasives.Native.Mktuple9__9 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple9 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9ac8f39c7b1df1e87db7c9bf5bc37a38 () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple9@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___1 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_270119cc1f13c9afeb25322d78efc328 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___2 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_3c368dee2c86a1af7bd7ea91baab7613 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___3 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_e9c745e2da3dec50930b0a7e01a11cc3 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___4 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_a82ff41c5c66cd37481c83584c94a54d () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___5 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1b3b4c5e68fdf7277f64bde93e6534de () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___6 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_837f1324f6fa51bb8a0e45ee48e4e058 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___7 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_a7562220963e3431d35de76c3c9c87b9 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___7@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___8 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_861b810bc1c20bbd221cecbce824b695 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___8@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___9 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9a54b18d8e08fdf0e20244b3f960c9dc () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple9__item___9@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple10 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x5 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x6 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x7 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x8 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@x9 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple10@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple10 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__g (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__h (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__i (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__j (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__7 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__8 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__9 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10__10 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple10@tok () Term)
(declare-fun Tm_arrow_61d31241317018093b2245d256adbcb5 () Term)
(define-fun is-FStar.Pervasives.Native.tuple10 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 321) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term) (@x8 Term) (@x9 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple10 @x0 @x1 @x2 @x3 @x4 @x5 @x6 @x7 @x8 @x9)) :qid is-FStar.Pervasives.Native.tuple10))))
(define-fun is-FStar.Pervasives.Native.Mktuple10 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 328) (= __@x0 (FStar.Pervasives.Native.Mktuple10 (FStar.Pervasives.Native.Mktuple10__a __@x0) (FStar.Pervasives.Native.Mktuple10__b __@x0) (FStar.Pervasives.Native.Mktuple10__c __@x0) (FStar.Pervasives.Native.Mktuple10__d __@x0) (FStar.Pervasives.Native.Mktuple10__e __@x0) (FStar.Pervasives.Native.Mktuple10__f __@x0) (FStar.Pervasives.Native.Mktuple10__g __@x0) (FStar.Pervasives.Native.Mktuple10__h __@x0) (FStar.Pervasives.Native.Mktuple10__i __@x0) (FStar.Pervasives.Native.Mktuple10__j __@x0) (FStar.Pervasives.Native.Mktuple10__1 __@x0) (FStar.Pervasives.Native.Mktuple10__2 __@x0) (FStar.Pervasives.Native.Mktuple10__3 __@x0) (FStar.Pervasives.Native.Mktuple10__4 __@x0) (FStar.Pervasives.Native.Mktuple10__5 __@x0) (FStar.Pervasives.Native.Mktuple10__6 __@x0) (FStar.Pervasives.Native.Mktuple10__7 __@x0) (FStar.Pervasives.Native.Mktuple10__8 __@x0) (FStar.Pervasives.Native.Mktuple10__9 __@x0) (FStar.Pervasives.Native.Mktuple10__10 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple10 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_f27282a056f525d8710bf32204d252ec () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple10@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___1 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_c581e9177cd071a1b6e057fca49ea75b () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___2 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_ae4b2db87d7c69a8380f4d5ae20f2149 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___3 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_a21274cb112dc6619b2bde244e6a0f9a () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___4 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9a051d5cacf4367d170d590ba8bb720d () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___5 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_bbd73769b626202d4de52d4d60cd3b75 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___6 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_7ceeded5a3852448c1a5406becbd990e () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___7 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_c68947c71d484ad43cd50646c4e1daf4 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___7@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___8 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_e7b9ff90289491020fe84c6ab3bc60c6 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___8@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___9 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_6dbb3170f112f78092d1caee0b341678 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___9@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___10 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_45598a99c0a7fcc1bf2258b9ad4256cf () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple10__item___10@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple11 (Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x5 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x6 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x7 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x8 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x9 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@x10 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple11@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple11 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__g (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__h (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__i (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__j (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__k (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__7 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__8 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__9 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__10 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11__11 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple11@tok () Term)
(declare-fun Tm_arrow_bf9783a1a3bf19ab918f42acff1daa32 () Term)
(define-fun is-FStar.Pervasives.Native.tuple11 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 354) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term) (@x8 Term) (@x9 Term) (@x10 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple11 @x0 @x1 @x2 @x3 @x4 @x5 @x6 @x7 @x8 @x9 @x10)) :qid is-FStar.Pervasives.Native.tuple11))))
(define-fun is-FStar.Pervasives.Native.Mktuple11 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 361) (= __@x0 (FStar.Pervasives.Native.Mktuple11 (FStar.Pervasives.Native.Mktuple11__a __@x0) (FStar.Pervasives.Native.Mktuple11__b __@x0) (FStar.Pervasives.Native.Mktuple11__c __@x0) (FStar.Pervasives.Native.Mktuple11__d __@x0) (FStar.Pervasives.Native.Mktuple11__e __@x0) (FStar.Pervasives.Native.Mktuple11__f __@x0) (FStar.Pervasives.Native.Mktuple11__g __@x0) (FStar.Pervasives.Native.Mktuple11__h __@x0) (FStar.Pervasives.Native.Mktuple11__i __@x0) (FStar.Pervasives.Native.Mktuple11__j __@x0) (FStar.Pervasives.Native.Mktuple11__k __@x0) (FStar.Pervasives.Native.Mktuple11__1 __@x0) (FStar.Pervasives.Native.Mktuple11__2 __@x0) (FStar.Pervasives.Native.Mktuple11__3 __@x0) (FStar.Pervasives.Native.Mktuple11__4 __@x0) (FStar.Pervasives.Native.Mktuple11__5 __@x0) (FStar.Pervasives.Native.Mktuple11__6 __@x0) (FStar.Pervasives.Native.Mktuple11__7 __@x0) (FStar.Pervasives.Native.Mktuple11__8 __@x0) (FStar.Pervasives.Native.Mktuple11__9 __@x0) (FStar.Pervasives.Native.Mktuple11__10 __@x0) (FStar.Pervasives.Native.Mktuple11__11 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple11 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_005819ee7a23a5c47189bae72b85d85c () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple11@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___1 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_31968e334e9582d95281307f534992a9 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___2 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_6252dd9f4473dc54a3482810e8556404 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___3 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_ec3ce6b7406c091cd7d0961922bb5a02 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___4 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_be7571e73b0e7fc24d03efe0e003c054 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___5 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_97ae7d913e508c46c48c3b51553d4459 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___6 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1dca311798936510e0ead61e14cf32a6 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___7 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_eec431ea31093a646681ef2ceb2e2986 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___7@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___8 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_689b2f06e9fd83f7a84ce80a13d338c6 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___8@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___9 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_20210a3d9498f929cb7aa68d9e8b5ebf () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___9@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___10 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_96812f2124d88760b2002bbe1502c3c9 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___10@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___11 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_abcfa2582f68905d460c5ef4a7642f2d () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple11__item___11@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple12 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x5 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x6 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x7 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x8 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x9 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x10 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@x11 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple12@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple12 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__g (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__h (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__i (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__j (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__k (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__l (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__7 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__8 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__9 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__10 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__11 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12__12 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple12@tok () Term)
(declare-fun Tm_arrow_4d5cd995d6f44a2ec39d0f193be0be65 () Term)
(define-fun is-FStar.Pervasives.Native.tuple12 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 389) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term) (@x8 Term) (@x9 Term) (@x10 Term) (@x11 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple12 @x0 @x1 @x2 @x3 @x4 @x5 @x6 @x7 @x8 @x9 @x10 @x11)) :qid is-FStar.Pervasives.Native.tuple12))))
(define-fun is-FStar.Pervasives.Native.Mktuple12 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 396) (= __@x0 (FStar.Pervasives.Native.Mktuple12 (FStar.Pervasives.Native.Mktuple12__a __@x0) (FStar.Pervasives.Native.Mktuple12__b __@x0) (FStar.Pervasives.Native.Mktuple12__c __@x0) (FStar.Pervasives.Native.Mktuple12__d __@x0) (FStar.Pervasives.Native.Mktuple12__e __@x0) (FStar.Pervasives.Native.Mktuple12__f __@x0) (FStar.Pervasives.Native.Mktuple12__g __@x0) (FStar.Pervasives.Native.Mktuple12__h __@x0) (FStar.Pervasives.Native.Mktuple12__i __@x0) (FStar.Pervasives.Native.Mktuple12__j __@x0) (FStar.Pervasives.Native.Mktuple12__k __@x0) (FStar.Pervasives.Native.Mktuple12__l __@x0) (FStar.Pervasives.Native.Mktuple12__1 __@x0) (FStar.Pervasives.Native.Mktuple12__2 __@x0) (FStar.Pervasives.Native.Mktuple12__3 __@x0) (FStar.Pervasives.Native.Mktuple12__4 __@x0) (FStar.Pervasives.Native.Mktuple12__5 __@x0) (FStar.Pervasives.Native.Mktuple12__6 __@x0) (FStar.Pervasives.Native.Mktuple12__7 __@x0) (FStar.Pervasives.Native.Mktuple12__8 __@x0) (FStar.Pervasives.Native.Mktuple12__9 __@x0) (FStar.Pervasives.Native.Mktuple12__10 __@x0) (FStar.Pervasives.Native.Mktuple12__11 __@x0) (FStar.Pervasives.Native.Mktuple12__12 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple12 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_5c9f47d9090f554c9826d2f65e388f20 () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple12@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___1 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_618941d7cf5ddbaabe15df8579b4a387 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___2 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_84e9e2280e9bcb3233e4f33f86d66ea6 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___3 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1fa79c5abf9f18607bd2e46a1a6967fa () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___4 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_0f49c582489d782b08195e81221181dc () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___5 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_29b7181ebb44f9e4a45f95c4f8478c6a () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___6 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_3cc2863a7d7f23e3916fa1e43483cb90 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___7 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_c7deea49701ab64a73985bf522e46359 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___7@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___8 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_380615e7761919086537a14273a02d22 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___8@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___9 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_245250918a4432b31aea8152d056489a () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___9@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___10 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_2a967c8402c441e6d8a9336a7568e4de () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___10@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___11 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_543c3feac0cd9e04ecb6cfd74ced8964 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___11@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___12 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_e91029e2320896c60e94f554727a0c41 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple12__item___12@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple13 (Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x5 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x6 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x7 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x8 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x9 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x10 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x11 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@x12 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple13@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple13 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__g (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__h (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__i (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__j (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__k (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__l (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__m (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__7 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__8 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__9 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__10 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__11 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__12 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13__13 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple13@tok () Term)
(declare-fun Tm_arrow_6462785e86ca440ee74ed32e1053eae3 () Term)
(define-fun is-FStar.Pervasives.Native.tuple13 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 426) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term) (@x8 Term) (@x9 Term) (@x10 Term) (@x11 Term) (@x12 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple13 @x0 @x1 @x2 @x3 @x4 @x5 @x6 @x7 @x8 @x9 @x10 @x11 @x12)) :qid is-FStar.Pervasives.Native.tuple13))))
(define-fun is-FStar.Pervasives.Native.Mktuple13 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 433) (= __@x0 (FStar.Pervasives.Native.Mktuple13 (FStar.Pervasives.Native.Mktuple13__a __@x0) (FStar.Pervasives.Native.Mktuple13__b __@x0) (FStar.Pervasives.Native.Mktuple13__c __@x0) (FStar.Pervasives.Native.Mktuple13__d __@x0) (FStar.Pervasives.Native.Mktuple13__e __@x0) (FStar.Pervasives.Native.Mktuple13__f __@x0) (FStar.Pervasives.Native.Mktuple13__g __@x0) (FStar.Pervasives.Native.Mktuple13__h __@x0) (FStar.Pervasives.Native.Mktuple13__i __@x0) (FStar.Pervasives.Native.Mktuple13__j __@x0) (FStar.Pervasives.Native.Mktuple13__k __@x0) (FStar.Pervasives.Native.Mktuple13__l __@x0) (FStar.Pervasives.Native.Mktuple13__m __@x0) (FStar.Pervasives.Native.Mktuple13__1 __@x0) (FStar.Pervasives.Native.Mktuple13__2 __@x0) (FStar.Pervasives.Native.Mktuple13__3 __@x0) (FStar.Pervasives.Native.Mktuple13__4 __@x0) (FStar.Pervasives.Native.Mktuple13__5 __@x0) (FStar.Pervasives.Native.Mktuple13__6 __@x0) (FStar.Pervasives.Native.Mktuple13__7 __@x0) (FStar.Pervasives.Native.Mktuple13__8 __@x0) (FStar.Pervasives.Native.Mktuple13__9 __@x0) (FStar.Pervasives.Native.Mktuple13__10 __@x0) (FStar.Pervasives.Native.Mktuple13__11 __@x0) (FStar.Pervasives.Native.Mktuple13__12 __@x0) (FStar.Pervasives.Native.Mktuple13__13 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple13 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_68c092e8b387730b412c4dcf592b12d3 () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple13@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___1 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_82a3dc3a5dbad615d8d4a31db238e43f () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___2 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1da976aaa65f1c6b8b256dfc45c41306 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___3 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_ca5cf529c415deee29e0a34c0c5d1c9f () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___4 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_94f6c578541b6cb528ca9e7dd1dacc3b () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___5 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_211e172b7220adc186d8a02ff17e8780 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___6 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9276a4f669d8497205e8d59f12da53ba () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___7 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_8aa8f381a5ed57cbbae9dcd2405ce80f () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___7@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___8 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_51814106613688cf259d7cdba9c24d93 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___8@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___9 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_05fec25e6f03f974bb2933a910642d7e () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___9@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___10 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_3280ee04611a7985c9d107bb1a8a330a () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___10@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___11 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_86c868d5d5058e8e5ec1f4d0285c7e90 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___11@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___12 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_7263c1a3c4475bb4e4b41a1be4bf22da () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___12@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___13 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_338c65ae58844787891c6f47cf01c068 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple13__item___13@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple14 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x0 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x1 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x2 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x3 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x4 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x5 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x6 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x7 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x8 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x9 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x10 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x11 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x12 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@x13 (Term) Term)
(declare-fun FStar.Pervasives.Native.tuple14@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple14 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__g (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__h (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__i (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__j (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__k (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__l (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__m (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__n (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__7 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__8 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__9 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__10 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__11 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__12 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__13 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14__14 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple14@tok () Term)
(declare-fun Tm_arrow_484e3bf88a886900f7e695d7333615e9 () Term)
(define-fun is-FStar.Pervasives.Native.tuple14 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 465) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term) (@x8 Term) (@x9 Term) (@x10 Term) (@x11 Term) (@x12 Term) (@x13 Term)) (! (= __@x0 (FStar.Pervasives.Native.tuple14 @x0 @x1 @x2 @x3 @x4 @x5 @x6 @x7 @x8 @x9 @x10 @x11 @x12 @x13)) :qid is-FStar.Pervasives.Native.tuple14))))
(define-fun is-FStar.Pervasives.Native.Mktuple14 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 472) (= __@x0 (FStar.Pervasives.Native.Mktuple14 (FStar.Pervasives.Native.Mktuple14__a __@x0) (FStar.Pervasives.Native.Mktuple14__b __@x0) (FStar.Pervasives.Native.Mktuple14__c __@x0) (FStar.Pervasives.Native.Mktuple14__d __@x0) (FStar.Pervasives.Native.Mktuple14__e __@x0) (FStar.Pervasives.Native.Mktuple14__f __@x0) (FStar.Pervasives.Native.Mktuple14__g __@x0) (FStar.Pervasives.Native.Mktuple14__h __@x0) (FStar.Pervasives.Native.Mktuple14__i __@x0) (FStar.Pervasives.Native.Mktuple14__j __@x0) (FStar.Pervasives.Native.Mktuple14__k __@x0) (FStar.Pervasives.Native.Mktuple14__l __@x0) (FStar.Pervasives.Native.Mktuple14__m __@x0) (FStar.Pervasives.Native.Mktuple14__n __@x0) (FStar.Pervasives.Native.Mktuple14__1 __@x0) (FStar.Pervasives.Native.Mktuple14__2 __@x0) (FStar.Pervasives.Native.Mktuple14__3 __@x0) (FStar.Pervasives.Native.Mktuple14__4 __@x0) (FStar.Pervasives.Native.Mktuple14__5 __@x0) (FStar.Pervasives.Native.Mktuple14__6 __@x0) (FStar.Pervasives.Native.Mktuple14__7 __@x0) (FStar.Pervasives.Native.Mktuple14__8 __@x0) (FStar.Pervasives.Native.Mktuple14__9 __@x0) (FStar.Pervasives.Native.Mktuple14__10 __@x0) (FStar.Pervasives.Native.Mktuple14__11 __@x0) (FStar.Pervasives.Native.Mktuple14__12 __@x0) (FStar.Pervasives.Native.Mktuple14__13 __@x0) (FStar.Pervasives.Native.Mktuple14__14 __@x0)))))
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple14 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_2de133cfaca100fc23d8bf4b3421db9a () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple14@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___1 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_2e3216cab266e138debd68d0a503c177 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___2 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_958b0270e487d0bf5fe9191b9efaa127 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___3 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_08349f596f8c0acf60d1587bebe8c91b () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___4 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_2b069168147ba0f67f117ad5b0ac078b () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___5 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1e38bb16245a24a197c44a262fee7bf1 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___6 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_7a148953a3884454d8a1dffddce086bb () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___7 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_812eeb3fdab56dfea8e419236740acb0 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___7@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___8 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9dc932ce7cdfd6fa57f6536787fcb65b () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___8@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___9 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_2600722933f06bc55e28bb3fc2ce4a6a () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___9@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___10 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_f51203e57fd66f9e9293b8962c57edfe () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___10@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___11 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_7c34e0c28edc5fc4ad24d0b749c0adb7 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___11@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___12 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_8772cc50ea320af17b3f2371c273679a () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___12@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___13 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_039da0b9a8da1a651a1c570e55456614 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___13@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___14 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_579ada2eb036c15c7306dac5b648153e () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple14__item___14@tok () Term)
(declare-fun FStar.Pervasives.remove_unused_type_parameters (Term) Term)
(declare-fun Tm_arrow_555d62757eeaf90340982fcdf25f6704 () Term)
(declare-fun FStar.Pervasives.remove_unused_type_parameters@tok () Term)
(declare-fun FStar.Pervasives.pattern () Term)
(declare-fun FStar.Pervasives.smt_pat (Term Term) Term)
(declare-fun Tm_arrow_ce7b692455ad1649f97902066cf7c9aa () Term)
(declare-fun FStar.Pervasives.smt_pat@tok () Term)
(declare-fun FStar.Pervasives.smt_pat_or (Term) Term)
(declare-fun Tm_arrow_cbfaca2770c8ef7d6393b664b7ea1a41 () Term)
(declare-fun FStar.Pervasives.smt_pat_or@tok () Term)
(declare-fun FStar.Pervasives.spinoff (Term) Term)
(declare-fun FStar.Pervasives.spinoff@tok () Term)
(declare-fun FStar.Pervasives.assert_spinoff (Term) Term)
(declare-fun Tm_arrow_071538fd1c72fb82c7bb7b280daddf84 () Term)
(declare-fun FStar.Pervasives.assert_spinoff@tok () Term)
(declare-fun FStar.Pervasives.id (Term Term) Term)
(declare-fun FStar.Pervasives.id@tok () Term)
(declare-fun FStar.Pervasives.trivial_pure_post (Term) Term)
(declare-fun Tm_arrow_53823f439377767fbcd3e27ebcdb971b () Term)
(declare-fun FStar.Pervasives.trivial_pure_post@tok () Term)
(declare-fun Tm_abs_5e34897418ce4950a4effcc8c159cf53 (Term) Term)
(declare-fun FStar.Pervasives.ambient (Term Term) Term)
(declare-fun Tm_arrow_9e007179360e2932d75ab29019e3d7fa () Term)
(declare-fun FStar.Pervasives.ambient@tok () Term)
(declare-fun FStar.Pervasives.intro_ambient (Term Term) Term)
(declare-fun Tm_arrow_6fc6334d56387f3d408122a4bd045e7e () Term)
(declare-fun FStar.Pervasives.intro_ambient@tok () Term)
(declare-fun FStar.Pervasives.st_pre_h (Term) Term)
(declare-fun FStar.Pervasives.st_pre_h@tok () Term)
(declare-fun FStar.Pervasives.st_post_h_ (Term Term Term) Term)
(declare-fun Tm_arrow_659175ed40df3b798f91ffaee9e689bd () Term)
(declare-fun FStar.Pervasives.st_post_h_@tok () Term)
(declare-fun Tm_arrow_14435f7112db17792f8cd33f8f7ea859 (Term Term Term) Term)
(declare-fun FStar.Pervasives.st_post_h (Term Term) Term)
(declare-fun FStar.Pervasives.st_post_h@tok () Term)
(declare-fun FStar.Pervasives.st_wp_h (Term Term) Term)
(declare-fun FStar.Pervasives.st_wp_h@tok () Term)
(declare-fun Tm_arrow_c80b139653078194d2de90941effdc68 (Term Term) Term)
(declare-fun FStar.Pervasives.st_return (Term Term Term Term) Term)
(declare-fun Tm_arrow_6bfe4bf6faf1fb53a521d575cefc35ef () Term)
(declare-fun FStar.Pervasives.st_return@tok () Term)
(declare-fun Tm_arrow_c6e0af8c2ccbdda79db5c09d07e87e35 (Term Term Term) Term)
(declare-fun FStar.Pervasives.st_bind_wp (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_f06c598be842ca5b0249b52c3e190418 () Term)
(declare-fun FStar.Pervasives.st_bind_wp@tok () Term)
(declare-fun Tm_arrow_eb9b1a038524b37579c152a3f169145e (Term Term) Term)
(declare-fun Tm_abs_0f3b5ee9eaa8de8cacad7d3dcacb4558 (Term Term Term Term) Term)
(declare-fun FStar.Pervasives.st_if_then_else (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_6e48361e1a1c92df6ec1ff87e622ddad () Term)
(declare-fun FStar.Pervasives.st_if_then_else@tok () Term)
(declare-fun FStar.Pervasives.st_ite_wp (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_eaad896c6afdcb7ade2e80b5a6a930af () Term)
(declare-fun FStar.Pervasives.st_ite_wp@tok () Term)
(declare-fun FStar.Pervasives.st_stronger (Term Term Term Term) Term)
(declare-fun Tm_arrow_ae4d7f489de84317e0022bf89d45dd95 () Term)
(declare-fun FStar.Pervasives.st_stronger@tok () Term)
(declare-fun FStar.Pervasives.st_close_wp (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_de6d3045642382698e9e38d41acfd7cc () Term)
(declare-fun FStar.Pervasives.st_close_wp@tok () Term)
(declare-fun FStar.Pervasives.st_trivial (Term Term Term) Term)
(declare-fun Tm_arrow_f145e04ff3c7033bdfc718f7f5bb1df0 () Term)
(declare-fun FStar.Pervasives.st_trivial@tok () Term)
(declare-fun Tm_abs_89b21c42be5bc00d63e29f63ae20d4e2 (Term Term) Term)
(declare-fun FStar.Pervasives.result (Term) Term)
(declare-fun FStar.Pervasives.result@x0 (Term) Term)
(declare-fun FStar.Pervasives.result@tok () Term)
(declare-fun FStar.Pervasives.V (Term Term) Term)
(declare-fun FStar.Pervasives.V_a (Term) Term)
(declare-fun FStar.Pervasives.V_v (Term) Term)
(declare-fun FStar.Pervasives.V@tok () Term)
(declare-fun FStar.Pervasives.E (Term Term) Term)
(declare-fun FStar.Pervasives.E_a (Term) Term)
(declare-fun FStar.Pervasives.E_e (Term) Term)
(declare-fun FStar.Pervasives.E@tok () Term)
(declare-fun FStar.Pervasives.Err (Term Term) Term)
(declare-fun FStar.Pervasives.Err_a (Term) Term)
(declare-fun FStar.Pervasives.Err_msg (Term) Term)
(declare-fun FStar.Pervasives.Err@tok () Term)
(declare-fun Tm_arrow_30908143640041985b9200e2fb38a259 () Term)
(declare-fun Tm_arrow_f8bb10130fea772e0f786d78a188c381 () Term)
(declare-fun Tm_arrow_93661c87034b0b64c4714dafbe2b02e6 () Term)
(define-fun is-FStar.Pervasives.result ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 172) (exists ((@x0 Term)) (! (= __@x0 (FStar.Pervasives.result @x0)) :qid is-FStar.Pervasives.result))))
(define-fun is-FStar.Pervasives.V ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 179) (= __@x0 (FStar.Pervasives.V (FStar.Pervasives.V_a __@x0) (FStar.Pervasives.V_v __@x0)))))
(define-fun is-FStar.Pervasives.E ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 184) (= __@x0 (FStar.Pervasives.E (FStar.Pervasives.E_a __@x0) (FStar.Pervasives.E_e __@x0)))))
(define-fun is-FStar.Pervasives.Err ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 189) (= __@x0 (FStar.Pervasives.Err (FStar.Pervasives.Err_a __@x0) (FStar.Pervasives.Err_msg __@x0)))))
(declare-fun FStar.Pervasives.uu___is_V (Term Term) Term)
(declare-fun Tm_arrow_5cd1d0722a6a986faf6f8e557186fe24 () Term)
(declare-fun FStar.Pervasives.uu___is_V@tok () Term)
(declare-fun Tm_refine_9db520b26a7f39c5a01493a3f375290d (Term) Term)
(declare-fun FStar.Pervasives.__proj__V__item__v (Term Term) Term)
(declare-fun Tm_arrow_1ea119bf213c016916a7095486e28467 () Term)
(declare-fun FStar.Pervasives.__proj__V__item__v@tok () Term)
(declare-fun FStar.Pervasives.uu___is_E (Term Term) Term)
(declare-fun FStar.Pervasives.uu___is_E@tok () Term)
(declare-fun Tm_refine_95e1e2ee29104754cc3740f5575fc6e5 (Term) Term)
(declare-fun FStar.Pervasives.__proj__E__item__e (Term Term) Term)
(declare-fun Tm_arrow_19e73c373dbf3f9945c6fcfce8a07661 () Term)
(declare-fun FStar.Pervasives.__proj__E__item__e@tok () Term)
(declare-fun FStar.Pervasives.uu___is_Err (Term Term) Term)
(declare-fun FStar.Pervasives.uu___is_Err@tok () Term)
(declare-fun Tm_refine_22fb403854eba07427f92e79848f9d9f (Term) Term)
(declare-fun FStar.Pervasives.__proj__Err__item__msg (Term Term) Term)
(declare-fun Tm_arrow_f7e3debb858e412c9497460c5187d5cd () Term)
(declare-fun FStar.Pervasives.__proj__Err__item__msg@tok () Term)
(declare-fun FStar.Pervasives.ex_pre () Term)
(declare-fun FStar.Pervasives.ex_post_ (Term Term) Term)
(declare-fun FStar.Pervasives.ex_post_@tok () Term)
(declare-fun Tm_refine_a4dcdeeacbcb04d05a6720f786918fd6 (Term Term) Term)
(declare-fun Tm_arrow_68b66d987e8a7bdf825af8b370553e65 (Term Term) Term)
(declare-fun FStar.Pervasives.ex_post (Term) Term)
(declare-fun FStar.Pervasives.ex_post@tok () Term)
(declare-fun FStar.Pervasives.ex_wp (Term) Term)
(declare-fun FStar.Pervasives.ex_wp@tok () Term)
(declare-fun Tm_arrow_58168e52ae0908fefec42cac825ecc69 (Term) Term)
(declare-fun FStar.Pervasives.ex_return (Term Term Term) Term)
(declare-fun Tm_arrow_375264f6f19b4e37d33ffba9f6b1c7d2 () Term)
(declare-fun FStar.Pervasives.ex_return@tok () Term)
(declare-fun Tm_arrow_3eb2992a529511f5b0ff2fef4e4594ad (Term Term) Term)
(declare-fun FStar.Pervasives.ex_bind_wp (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_627f53cf48815f6216201f0583636724 () Term)
(declare-fun FStar.Pervasives.ex_bind_wp@tok () Term)
(declare-fun Tm_arrow_ca5db633696caf7e0cd44c11654eed8b (Term) Term)
(declare-fun Tm_abs_c1d9037a5cc10cc07ba9b6a7a58728db (Term Term Term Term) Term)
(declare-fun FStar.Pervasives.ex_if_then_else (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_08bd7ce530cc6e8b4a3f8dadbd0806b0 () Term)
(declare-fun FStar.Pervasives.ex_if_then_else@tok () Term)
(declare-fun FStar.Pervasives.ex_ite_wp (Term Term Term) Term)
(declare-fun Tm_arrow_c2a8c761b16a75376b24262cd8c50369 () Term)
(declare-fun FStar.Pervasives.ex_ite_wp@tok () Term)
(declare-fun FStar.Pervasives.ex_stronger (Term Term Term) Term)
(declare-fun Tm_arrow_1376d97b5d43e7d77d56729e2a3e04af () Term)
(declare-fun FStar.Pervasives.ex_stronger@tok () Term)
(declare-fun FStar.Pervasives.ex_close_wp (Term Term Term Term) Term)
(declare-fun Tm_arrow_814af0adff92aa08c5b8b0951bcb1959 () Term)
(declare-fun FStar.Pervasives.ex_close_wp@tok () Term)
(declare-fun FStar.Pervasives.ex_trivial (Term Term) Term)
(declare-fun Tm_arrow_ee4a787765920b0cb4357a47a0d3ac5c () Term)
(declare-fun FStar.Pervasives.ex_trivial@tok () Term)
(declare-fun Tm_abs_5cc223716d095f4545f0dcc745acad5d (Term) Term)
(declare-fun FStar.Pervasives.lift_div_exn (Term Term Term) Term)
(declare-fun Tm_arrow_8196682216f286f6fe3a7dffb3de7d02 () Term)
(declare-fun FStar.Pervasives.lift_div_exn@tok () Term)
(declare-fun Tm_abs_c2b605ddd5d1991642baf5762d2b1dc5 (Term Term) Term)
(declare-fun FStar.Pervasives.all_pre_h (Term) Term)
(declare-fun FStar.Pervasives.all_pre_h@tok () Term)
(declare-fun FStar.Pervasives.all_post_h_ (Term Term Term) Term)
(declare-fun FStar.Pervasives.all_post_h_@tok () Term)
(declare-fun Tm_arrow_fc269489cb2e24a10c7710a1f7f9d269 (Term Term Term) Term)
(declare-fun FStar.Pervasives.all_post_h (Term Term) Term)
(declare-fun FStar.Pervasives.all_post_h@tok () Term)
(declare-fun FStar.Pervasives.all_wp_h (Term Term) Term)
(declare-fun FStar.Pervasives.all_wp_h@tok () Term)
(declare-fun Tm_arrow_1cd90c71d90a216d9fb0ba0321a1d3b5 (Term Term) Term)
(declare-fun FStar.Pervasives.all_return (Term Term Term Term) Term)
(declare-fun Tm_arrow_3f61557667800fb54cc62e48a5201f9d () Term)
(declare-fun FStar.Pervasives.all_return@tok () Term)
(declare-fun Tm_arrow_b567b509414635f00096b9b1c3e30b57 (Term Term Term) Term)
(declare-fun FStar.Pervasives.all_bind_wp (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_27354558e07d00e058824d7a847efedd () Term)
(declare-fun FStar.Pervasives.all_bind_wp@tok () Term)
(declare-fun Tm_arrow_59cac8a9b1ae3aa9511b8a867f8e934e (Term Term) Term)
(declare-fun Tm_abs_35ddc99cefc0079215f6f6ab3c58856d (Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.all_if_then_else (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_491eee2c8dc4eab4d420326a8285d2c4 () Term)
(declare-fun FStar.Pervasives.all_if_then_else@tok () Term)
(declare-fun FStar.Pervasives.all_ite_wp (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_20fdb4e6d0c32f949f55e39a059913a7 () Term)
(declare-fun FStar.Pervasives.all_ite_wp@tok () Term)
(declare-fun FStar.Pervasives.all_stronger (Term Term Term Term) Term)
(declare-fun Tm_arrow_073b21d0ec8edf2dda32907b45ec5f68 () Term)
(declare-fun FStar.Pervasives.all_stronger@tok () Term)
(declare-fun FStar.Pervasives.all_close_wp (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_803d195802308e8beadf04438d3a6508 () Term)
(declare-fun FStar.Pervasives.all_close_wp@tok () Term)
(declare-fun FStar.Pervasives.all_trivial (Term Term Term) Term)
(declare-fun Tm_arrow_957927b0d25001784693eee8b2182308 () Term)
(declare-fun FStar.Pervasives.all_trivial@tok () Term)
(declare-fun Tm_abs_22e463dbd987016e31d6bc67025a7cd9 (Term Term) Term)
(declare-fun FStar.Pervasives.inversion (Term) Term)
(declare-fun FStar.Pervasives.inversion@tok () Term)
(declare-fun FStar.Pervasives.allow_inversion (Term) Term)
(declare-fun Tm_refine_363615bee79fae5066b7c8bd06c286d0 (Term) Term)
(declare-fun Tm_arrow_bcab9cce464ec0f76562bc48c17ba410 () Term)
(declare-fun FStar.Pervasives.allow_inversion@tok () Term)
(declare-fun FStar.Pervasives.invertOption (Term) Term)
(declare-fun FStar.Pervasives.invertOption@tok () Term)
(declare-fun FStar.Pervasives.either (Term Term) Term)
(declare-fun FStar.Pervasives.either@x0 (Term) Term)
(declare-fun FStar.Pervasives.either@x1 (Term) Term)
(declare-fun FStar.Pervasives.either@tok () Term)
(declare-fun FStar.Pervasives.Inl (Term Term Term) Term)
(declare-fun FStar.Pervasives.Inl_a (Term) Term)
(declare-fun FStar.Pervasives.Inl_b (Term) Term)
(declare-fun FStar.Pervasives.Inl_v (Term) Term)
(declare-fun FStar.Pervasives.Inl@tok () Term)
(declare-fun FStar.Pervasives.Inr (Term Term Term) Term)
(declare-fun FStar.Pervasives.Inr_a (Term) Term)
(declare-fun FStar.Pervasives.Inr_b (Term) Term)
(declare-fun FStar.Pervasives.Inr_v (Term) Term)
(declare-fun FStar.Pervasives.Inr@tok () Term)
(declare-fun Tm_arrow_065da0adeba0c4ae0da1476ececee84c () Term)
(declare-fun Tm_arrow_c883938642e6d97d79c975d8d94b4aac () Term)
(define-fun is-FStar.Pervasives.either ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 311) (exists ((@x0 Term) (@x1 Term)) (! (= __@x0 (FStar.Pervasives.either @x0 @x1)) :qid is-FStar.Pervasives.either))))
(define-fun is-FStar.Pervasives.Inl ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 318) (= __@x0 (FStar.Pervasives.Inl (FStar.Pervasives.Inl_a __@x0) (FStar.Pervasives.Inl_b __@x0) (FStar.Pervasives.Inl_v __@x0)))))
(define-fun is-FStar.Pervasives.Inr ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 323) (= __@x0 (FStar.Pervasives.Inr (FStar.Pervasives.Inr_a __@x0) (FStar.Pervasives.Inr_b __@x0) (FStar.Pervasives.Inr_v __@x0)))))
(declare-fun FStar.Pervasives.uu___is_Inl (Term Term Term) Term)
(declare-fun Tm_arrow_af0c68f1e39d4d6020c0873b16730c7d () Term)
(declare-fun FStar.Pervasives.uu___is_Inl@tok () Term)
(declare-fun Tm_refine_85e0cc884f8457202f90cd77f23733ba (Term Term) Term)
(declare-fun FStar.Pervasives.__proj__Inl__item__v (Term Term Term) Term)
(declare-fun Tm_arrow_a80e0750277867ba1a434ad3bba8702d () Term)
(declare-fun FStar.Pervasives.__proj__Inl__item__v@tok () Term)
(declare-fun FStar.Pervasives.uu___is_Inr (Term Term Term) Term)
(declare-fun FStar.Pervasives.uu___is_Inr@tok () Term)
(declare-fun Tm_refine_8f1f5f564dae90240db429de2eb41517 (Term Term) Term)
(declare-fun FStar.Pervasives.__proj__Inr__item__v (Term Term Term) Term)
(declare-fun Tm_arrow_df618db6b42762940f198036c8a56200 () Term)
(declare-fun FStar.Pervasives.__proj__Inr__item__v@tok () Term)
(declare-fun FStar.Pervasives.dfst (Term Term Term) Term)
(declare-fun FStar.Pervasives.dfst@tok () Term)
(declare-fun FStar.Pervasives.dsnd (Term Term Term) Term)
(declare-fun FStar.Pervasives.dsnd@tok () Term)
(declare-fun FStar.Pervasives.dtuple3 (Term Term Term) Term)
(declare-fun FStar.Pervasives.dtuple3@x0 (Term) Term)
(declare-fun FStar.Pervasives.dtuple3@x1 (Term) Term)
(declare-fun FStar.Pervasives.dtuple3@x2 (Term) Term)
(declare-fun FStar.Pervasives.dtuple3@tok () Term)
(declare-fun FStar.Pervasives.Mkdtuple3 (Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3_a (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3_b (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3_c (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3__1 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3__2 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3__3 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3@tok () Term)
(declare-fun Tm_arrow_0b6559e6ff3addf84b0c2880affbb335 (Term Term) Term)
(declare-fun Tm_arrow_8423f67df62f9e824c55756f9e26058d () Term)
(define-fun is-FStar.Pervasives.dtuple3 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 359) (exists ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= __@x0 (FStar.Pervasives.dtuple3 @x0 @x1 @x2)) :qid is-FStar.Pervasives.dtuple3))))
(define-fun is-FStar.Pervasives.Mkdtuple3 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 370) (= __@x0 (FStar.Pervasives.Mkdtuple3 (FStar.Pervasives.Mkdtuple3_a __@x0) (FStar.Pervasives.Mkdtuple3_b __@x0) (FStar.Pervasives.Mkdtuple3_c __@x0) (FStar.Pervasives.Mkdtuple3__1 __@x0) (FStar.Pervasives.Mkdtuple3__2 __@x0) (FStar.Pervasives.Mkdtuple3__3 __@x0)))))
(declare-fun FStar.Pervasives.uu___is_Mkdtuple3 (Term Term Term Term) Term)
(declare-fun Tm_arrow_70452cb82cd0a282ca9a2dbeb54c1b04 () Term)
(declare-fun FStar.Pervasives.uu___is_Mkdtuple3@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple3__item___1 (Term Term Term Term) Term)
(declare-fun Tm_arrow_255f0cfe499b1d2e9836e157bce1dba3 () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple3__item___1@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple3__item___2 (Term Term Term Term) Term)
(declare-fun Tm_arrow_ea1ded11f7d194a26e812f407333a011 () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple3__item___2@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple3__item___3 (Term Term Term Term) Term)
(declare-fun Tm_arrow_1d7ad5cfa0fff643640e3f74466d283e () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple3__item___3@tok () Term)
(declare-fun FStar.Pervasives.dtuple4 (Term Term Term Term) Term)
(declare-fun FStar.Pervasives.dtuple4@x0 (Term) Term)
(declare-fun FStar.Pervasives.dtuple4@x1 (Term) Term)
(declare-fun FStar.Pervasives.dtuple4@x2 (Term) Term)
(declare-fun FStar.Pervasives.dtuple4@x3 (Term) Term)
(declare-fun FStar.Pervasives.dtuple4@tok () Term)
(declare-fun FStar.Pervasives.Mkdtuple4 (Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4_a (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4_b (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4_c (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4_d (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4__1 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4__2 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4__3 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4__4 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4@tok () Term)
(declare-fun Tm_arrow_af8eda99ba3685403be22a88669dcb35 (Term Term Term) Term)
(declare-fun Tm_arrow_cef44a6056754f192c2446237c4c1408 () Term)
(define-fun is-FStar.Pervasives.dtuple4 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 432) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= __@x0 (FStar.Pervasives.dtuple4 @x0 @x1 @x2 @x3)) :qid is-FStar.Pervasives.dtuple4))))
(define-fun is-FStar.Pervasives.Mkdtuple4 ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 445) (= __@x0 (FStar.Pervasives.Mkdtuple4 (FStar.Pervasives.Mkdtuple4_a __@x0) (FStar.Pervasives.Mkdtuple4_b __@x0) (FStar.Pervasives.Mkdtuple4_c __@x0) (FStar.Pervasives.Mkdtuple4_d __@x0) (FStar.Pervasives.Mkdtuple4__1 __@x0) (FStar.Pervasives.Mkdtuple4__2 __@x0) (FStar.Pervasives.Mkdtuple4__3 __@x0) (FStar.Pervasives.Mkdtuple4__4 __@x0)))))
(declare-fun FStar.Pervasives.uu___is_Mkdtuple4 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_76a226dc2cea2ddd4e4258637fc95e5b () Term)
(declare-fun FStar.Pervasives.uu___is_Mkdtuple4@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___1 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1da4d60ab69f411b912e76cc25e77965 () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___1@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___2 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_a86867091548f3d7d3ca1cb8b0458b9f () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___2@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___3 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_ee72552fcc293405aa0e854ba26f27ac () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___3@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___4 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_6c79def96aa5d5d9eb9555c48dd9ebb6 () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___4@tok () Term)
(declare-fun FStar.Pervasives.ignore (Term Term) Term)
(declare-fun Tm_arrow_962476a7eea46a6ffc9b658c6d8fbc71 () Term)
(declare-fun FStar.Pervasives.ignore@tok () Term)
(declare-fun Tm_refine_f1ecc6ab6882a651504f328937700647 () Term)
(declare-fun FStar.Pervasives.false_elim (Term Term) Term)
(declare-fun Tm_arrow_7636fbfab5cd88ba06f60c10ea8caef2 () Term)
(declare-fun FStar.Pervasives.false_elim@tok () Term)
(declare-fun FStar.Pervasives.__internal_ocaml_attributes () Term)
(declare-fun FStar.Pervasives.PpxDerivingShow () Term)
(declare-fun FStar.Pervasives.PpxDerivingShow@tok () Term)
(declare-fun FStar.Pervasives.PpxDerivingShowConstant (Term) Term)
(declare-fun FStar.Pervasives.PpxDerivingShowConstant__0 (Term) Term)
(declare-fun FStar.Pervasives.PpxDerivingShowConstant@tok () Term)
(declare-fun FStar.Pervasives.PpxDerivingYoJson () Term)
(declare-fun FStar.Pervasives.PpxDerivingYoJson@tok () Term)
(declare-fun FStar.Pervasives.CInline () Term)
(declare-fun FStar.Pervasives.CInline@tok () Term)
(declare-fun FStar.Pervasives.Substitute () Term)
(declare-fun FStar.Pervasives.Substitute@tok () Term)
(declare-fun FStar.Pervasives.Gc () Term)
(declare-fun FStar.Pervasives.Gc@tok () Term)
(declare-fun FStar.Pervasives.Comment (Term) Term)
(declare-fun FStar.Pervasives.Comment__0 (Term) Term)
(declare-fun FStar.Pervasives.Comment@tok () Term)
(declare-fun FStar.Pervasives.CPrologue (Term) Term)
(declare-fun FStar.Pervasives.CPrologue__0 (Term) Term)
(declare-fun FStar.Pervasives.CPrologue@tok () Term)
(declare-fun FStar.Pervasives.CEpilogue (Term) Term)
(declare-fun FStar.Pervasives.CEpilogue__0 (Term) Term)
(declare-fun FStar.Pervasives.CEpilogue@tok () Term)
(declare-fun FStar.Pervasives.CConst (Term) Term)
(declare-fun FStar.Pervasives.CConst__0 (Term) Term)
(declare-fun FStar.Pervasives.CConst@tok () Term)
(declare-fun FStar.Pervasives.CCConv (Term) Term)
(declare-fun FStar.Pervasives.CCConv__0 (Term) Term)
(declare-fun FStar.Pervasives.CCConv@tok () Term)
(declare-fun FStar.Pervasives.CAbstractStruct () Term)
(declare-fun FStar.Pervasives.CAbstractStruct@tok () Term)
(declare-fun FStar.Pervasives.CIfDef () Term)
(declare-fun FStar.Pervasives.CIfDef@tok () Term)
(declare-fun FStar.Pervasives.CMacro () Term)
(declare-fun FStar.Pervasives.CMacro@tok () Term)
(declare-fun Tm_arrow_a25c6dbdd7c43412e925069991c0ef48 () Term)
(define-fun is-FStar.Pervasives.__internal_ocaml_attributes ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 543) (= __@x0 FStar.Pervasives.__internal_ocaml_attributes)))
(define-fun is-FStar.Pervasives.PpxDerivingShow ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 549) (= __@x0 FStar.Pervasives.PpxDerivingShow)))
(define-fun is-FStar.Pervasives.PpxDerivingShowConstant ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 551) (= __@x0 (FStar.Pervasives.PpxDerivingShowConstant (FStar.Pervasives.PpxDerivingShowConstant__0 __@x0)))))
(define-fun is-FStar.Pervasives.PpxDerivingYoJson ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 556) (= __@x0 FStar.Pervasives.PpxDerivingYoJson)))
(define-fun is-FStar.Pervasives.CInline ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 558) (= __@x0 FStar.Pervasives.CInline)))
(define-fun is-FStar.Pervasives.Substitute ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 560) (= __@x0 FStar.Pervasives.Substitute)))
(define-fun is-FStar.Pervasives.Gc ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 562) (= __@x0 FStar.Pervasives.Gc)))
(define-fun is-FStar.Pervasives.Comment ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 564) (= __@x0 (FStar.Pervasives.Comment (FStar.Pervasives.Comment__0 __@x0)))))
(define-fun is-FStar.Pervasives.CPrologue ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 569) (= __@x0 (FStar.Pervasives.CPrologue (FStar.Pervasives.CPrologue__0 __@x0)))))
(define-fun is-FStar.Pervasives.CEpilogue ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 574) (= __@x0 (FStar.Pervasives.CEpilogue (FStar.Pervasives.CEpilogue__0 __@x0)))))
(define-fun is-FStar.Pervasives.CConst ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 579) (= __@x0 (FStar.Pervasives.CConst (FStar.Pervasives.CConst__0 __@x0)))))
(define-fun is-FStar.Pervasives.CCConv ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 584) (= __@x0 (FStar.Pervasives.CCConv (FStar.Pervasives.CCConv__0 __@x0)))))
(define-fun is-FStar.Pervasives.CAbstractStruct ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 589) (= __@x0 FStar.Pervasives.CAbstractStruct)))
(define-fun is-FStar.Pervasives.CIfDef ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 591) (= __@x0 FStar.Pervasives.CIfDef)))
(define-fun is-FStar.Pervasives.CMacro ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 593) (= __@x0 FStar.Pervasives.CMacro)))
(declare-fun FStar.Pervasives.uu___is_PpxDerivingShow (Term) Term)
(declare-fun Tm_arrow_89dc0c243f5e74d4fefc48cfe123db41 () Term)
(declare-fun FStar.Pervasives.uu___is_PpxDerivingShow@tok () Term)
(declare-fun FStar.Pervasives.uu___is_PpxDerivingShowConstant (Term) Term)
(declare-fun FStar.Pervasives.uu___is_PpxDerivingShowConstant@tok () Term)
(declare-fun Tm_refine_564db2f0aa0878b4d96c60508be3dd36 () Term)
(declare-fun FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0 (Term) Term)
(declare-fun Tm_arrow_dbb84ef8131159481071b6d6a41b7f31 () Term)
(declare-fun FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0@tok () Term)
(declare-fun FStar.Pervasives.uu___is_PpxDerivingYoJson (Term) Term)
(declare-fun FStar.Pervasives.uu___is_PpxDerivingYoJson@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CInline (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CInline@tok () Term)
(declare-fun FStar.Pervasives.uu___is_Substitute (Term) Term)
(declare-fun FStar.Pervasives.uu___is_Substitute@tok () Term)
(declare-fun FStar.Pervasives.uu___is_Gc (Term) Term)
(declare-fun FStar.Pervasives.uu___is_Gc@tok () Term)
(declare-fun FStar.Pervasives.uu___is_Comment (Term) Term)
(declare-fun FStar.Pervasives.uu___is_Comment@tok () Term)
(declare-fun Tm_refine_c53089e2d20d1b0f5a267296ac8e45f0 () Term)
(declare-fun FStar.Pervasives.__proj__Comment__item___0 (Term) Term)
(declare-fun Tm_arrow_d4c2bbf4fb852b3f4b9961c7cbc2f3a2 () Term)
(declare-fun FStar.Pervasives.__proj__Comment__item___0@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CPrologue (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CPrologue@tok () Term)
(declare-fun Tm_refine_ac46c1a2a06ce46a180e0eda48004c47 () Term)
(declare-fun FStar.Pervasives.__proj__CPrologue__item___0 (Term) Term)
(declare-fun Tm_arrow_929b9daa0a2a2e99e3571b146c52feaf () Term)
(declare-fun FStar.Pervasives.__proj__CPrologue__item___0@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CEpilogue (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CEpilogue@tok () Term)
(declare-fun Tm_refine_47384bef739d1f0729fd782d351dc9a5 () Term)
(declare-fun FStar.Pervasives.__proj__CEpilogue__item___0 (Term) Term)
(declare-fun Tm_arrow_e37361b66babb46a30183ad1ff072689 () Term)
(declare-fun FStar.Pervasives.__proj__CEpilogue__item___0@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CConst (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CConst@tok () Term)
(declare-fun Tm_refine_5036c6b2983454bc3afeffcba3f00f50 () Term)
(declare-fun FStar.Pervasives.__proj__CConst__item___0 (Term) Term)
(declare-fun Tm_arrow_2d0b7639551b88b0df758d7b36c8f77a () Term)
(declare-fun FStar.Pervasives.__proj__CConst__item___0@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CCConv (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CCConv@tok () Term)
(declare-fun Tm_refine_2c4510f48649a66c3dca1fc9e3a2d320 () Term)
(declare-fun FStar.Pervasives.__proj__CCConv__item___0 (Term) Term)
(declare-fun Tm_arrow_b7e884ec94708f2b05c42d4d8834eac6 () Term)
(declare-fun FStar.Pervasives.__proj__CCConv__item___0@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CAbstractStruct (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CAbstractStruct@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CIfDef (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CIfDef@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CMacro (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CMacro@tok () Term)
(declare-fun FStar.Pervasives.inline_let (Dummy_sort) Term)
(declare-fun FStar.Pervasives.rename_let (Term) Term)
(declare-fun FStar.Pervasives.rename_let@tok () Term)
(declare-fun FStar.Pervasives.plugin (Term) Term)
(declare-fun Tm_arrow_f12575a0ee171a8be16a63e3359708f8 () Term)
(declare-fun FStar.Pervasives.plugin@tok () Term)
(declare-fun FStar.Pervasives.tcnorm (Dummy_sort) Term)
(declare-fun FStar.Pervasives.must_erase_for_extraction (Dummy_sort) Term)
(declare-fun FStar.Pervasives.dm4f_bind_range (Dummy_sort) Term)
(declare-fun FStar.Pervasives.expect_failure (Term) Term)
(declare-fun FStar.Pervasives.expect_failure@tok () Term)
(declare-fun FStar.Pervasives.expect_lax_failure (Term) Term)
(declare-fun FStar.Pervasives.expect_lax_failure@tok () Term)
(declare-fun FStar.Pervasives.tcdecltime (Dummy_sort) Term)
(declare-fun FStar.Pervasives.assume_strictly_positive (Dummy_sort) Term)
(declare-fun FStar.Pervasives.unifier_hint_injective (Dummy_sort) Term)
(declare-fun FStar.Pervasives.strict_on_arguments (Term) Term)
(declare-fun FStar.Pervasives.strict_on_arguments@tok () Term)
(declare-fun FStar.Pervasives.resolve_implicits (Dummy_sort) Term)
(declare-fun FStar.Pervasives.erasable (Dummy_sort) Term)
(declare-fun FStar.Pervasives.allow_informative_binders (Dummy_sort) Term)
(declare-fun FStar.Pervasives.ite_soundness_forall (Dummy_sort) Term)
(declare-fun FStar.Pervasives.commute_nested_matches (Dummy_sort) Term)
(declare-fun FStar.Pervasives.noextract_to (Term) Term)
(declare-fun FStar.Pervasives.noextract_to@tok () Term)
(declare-fun FStar.Pervasives.normalize_term (Term Term) Term)
(declare-fun FStar.Pervasives.normalize_term@tok () Term)
(declare-fun FStar.Pervasives.normalize (Term) Term)
(declare-fun FStar.Pervasives.normalize@tok () Term)
(declare-fun FStar.Pervasives.norm_step () Term)
(declare-fun FStar.Pervasives.simplify (Dummy_sort) Term)
(declare-fun FStar.Pervasives.weak (Dummy_sort) Term)
(declare-fun FStar.Pervasives.hnf (Dummy_sort) Term)
(declare-fun FStar.Pervasives.primops (Dummy_sort) Term)
(declare-fun FStar.Pervasives.delta (Dummy_sort) Term)
(declare-fun FStar.Pervasives.zeta (Dummy_sort) Term)
(declare-fun FStar.Pervasives.zeta_full (Dummy_sort) Term)
(declare-fun FStar.Pervasives.iota (Dummy_sort) Term)
(declare-fun FStar.Pervasives.nbe (Dummy_sort) Term)
(declare-fun FStar.Pervasives.reify_ (Dummy_sort) Term)
(declare-fun FStar.Pervasives.delta_only (Term) Term)
(declare-fun Tm_arrow_f14a20345cd55ddda96b6c4cc49e05f1 () Term)
(declare-fun FStar.Pervasives.delta_only@tok () Term)
(declare-fun FStar.Pervasives.delta_fully (Term) Term)
(declare-fun FStar.Pervasives.delta_fully@tok () Term)
(declare-fun FStar.Pervasives.delta_attr (Term) Term)
(declare-fun FStar.Pervasives.delta_attr@tok () Term)
(declare-fun FStar.Pervasives.norm (Term Term Term) Term)
(declare-fun Tm_arrow_7d92e7a4aa7eee4098b10c5f1b3d77ea () Term)
(declare-fun FStar.Pervasives.norm@tok () Term)
(declare-fun FStar.Pervasives.assert_norm (Term) Term)
(declare-fun Tm_arrow_ee24fcf624d074d3c637ee61e4a867fb () Term)
(declare-fun FStar.Pervasives.assert_norm@tok () Term)
(declare-fun FStar.Pervasives.normalize_term_spec (Term Term) Term)
(declare-fun FStar.Pervasives.normalize_term_spec@tok () Term)
(declare-fun FStar.Pervasives.normalize_spec (Term) Term)
(declare-fun FStar.Pervasives.normalize_spec@tok () Term)
(declare-fun FStar.Pervasives.norm_spec (Term Term Term) Term)
(declare-fun FStar.Pervasives.norm_spec@tok () Term)
(declare-fun FStar.Pervasives.reveal_opaque (Term Term) Term)
(declare-fun Tm_refine_9cce35912d99bf51042f02fff62b6cf5 (Term Term Term) Term)
(declare-fun Tm_arrow_90324bd6d0db52152d012eefdf7852a1 (Term Term) Term)
(declare-fun Tm_arrow_d3acaf108460ddc930424dea55f7d40f () Term)
(declare-fun FStar.Pervasives.reveal_opaque@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.Pervasives.norm_spec@tok)) :named kick_partial_app_e5c933a9bc2cb06571c2abdcc101b877))
(declare-fun FStar.Pervasives.singleton (Term Term) Term)
(declare-fun Tm_refine_2fbd657fe85bcb2423f9c7e5f9b3bcb5 (Term Term) Term)
(declare-fun Tm_arrow_9cdb4ebd85da757e86217b6fb07ef9fc () Term)
(declare-fun FStar.Pervasives.singleton@tok () Term)
(declare-fun FStar.Pervasives.with_type (Term Term) Term)
(declare-fun FStar.Pervasives.with_type@tok () Term)
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (and (= (FStar.Pervasives.with_type @x0 @x1) @x1) (HasType (FStar.Pervasives.with_type @x0 @x1) @x0)) :weight 0 :pattern ((FStar.Pervasives.with_type @x0 @x1)) :qid @with_type_primitive_axiom)) :named with_type_primitive_axiom))
(declare-fun FStar.Pervasives.eqtype_as_type (Term) Term)
(declare-fun Tm_arrow_7e9afc6da5407011473323ad80ff51bf () Term)
(declare-fun FStar.Pervasives.eqtype_as_type@tok () Term)
(declare-fun FStar.Classical.give_witness (Term Term) Term)
(declare-fun FStar.Classical.give_witness@tok () Term)
(declare-fun FStar.Classical.give_witness_from_squash (Term Term) Term)
(declare-fun FStar.Classical.give_witness_from_squash@tok () Term)
(declare-fun Tm_refine_839524df17f415c122f40f00685d3fe6 (Term Term) Term)
(declare-fun Tm_arrow_9a028cfcf6111a85dd3c28d61b4efdfd (Term Term) Term)
(declare-fun FStar.Classical.lemma_to_squash_gtot (Term Term Term Term) Term)
(declare-fun Tm_arrow_6f9100982820dfbce0fb9c6dae0cee11 () Term)
(declare-fun FStar.Classical.lemma_to_squash_gtot@tok () Term)
(declare-fun FStar.Classical.get_equality (Term Term Term) Term)
(declare-fun Tm_refine_7c805cbd5439f1b21f6463c70e57d0f1 (Term Term Term) Term)
(declare-fun Tm_arrow_158af926c0cd4bc1ff513e80f99f4b49 () Term)
(declare-fun FStar.Classical.get_equality@tok () Term)
(declare-fun FStar.Classical.impl_to_arrow (Term Term Term Term) Term)
(declare-fun Tm_arrow_156c500bdf0e99cc45ffd26a33a603a8 () Term)
(declare-fun FStar.Classical.impl_to_arrow@tok () Term)
(declare-fun Tm_arrow_9d84457d1c8d2a3cb1cecf47a390b833 (Term Term) Term)
(declare-fun FStar.Classical.arrow_to_impl (Term Term Term) Term)
(declare-fun Tm_arrow_78d787b8a2633e2185ded4267a81cc32 () Term)
(declare-fun FStar.Classical.arrow_to_impl@tok () Term)
(declare-fun FStar.Classical.impl_intro_gtot (Term Term Term) Term)
(declare-fun Tm_arrow_d2cdd2f18b92810e3048c35d07f1c9ea () Term)
(declare-fun FStar.Classical.impl_intro_gtot@tok () Term)
(declare-fun FStar.Classical.impl_intro (Term Term Term) Term)
(declare-fun FStar.Classical.impl_intro@tok () Term)
(declare-fun FStar.Classical.move_requires (Term Term Term Term Term) Term)
(declare-fun FStar.Classical.move_requires@tok () Term)
(declare-fun FStar.Classical.move_requires_2 (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Classical.move_requires_2@tok () Term)
(declare-fun FStar.Classical.move_requires_3 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Classical.move_requires_3@tok () Term)
(declare-fun FStar.Classical.impl_intro_gen (Term Term Term) Term)
(declare-fun FStar.Classical.impl_intro_gen@tok () Term)
(declare-fun FStar.Classical.get_forall (Term Term) Term)
(declare-fun Tm_refine_0f449c9ea4caab5b78147dd10520e018 (Term Term) Term)
(declare-fun Tm_arrow_332381d0496c43c212786cc9f5d1c320 () Term)
(declare-fun FStar.Classical.get_forall@tok () Term)
(declare-fun FStar.Classical.forall_intro_gtot (Term Term Term) Term)
(declare-fun Tm_arrow_58139f503eb3f7da2e6d21fc5f91a24e () Term)
(declare-fun FStar.Classical.forall_intro_gtot@tok () Term)
(declare-fun FStar.Classical.lemma_forall_intro_gtot (Term Term Term) Term)
(declare-fun FStar.Classical.lemma_forall_intro_gtot@tok () Term)
(declare-fun FStar.Classical.gtot_to_lemma (Term Term Term Term) Term)
(declare-fun FStar.Classical.gtot_to_lemma@tok () Term)
(declare-fun Tm_arrow_e44b1a1960e76c65248b9976ee453bf1 (Term Term) Term)
(declare-fun FStar.Classical.forall_intro_squash_gtot (Term Term Term) Term)
(declare-fun Tm_arrow_fc21ff1d7102ebdd3a285ec7e2205a73 () Term)
(declare-fun FStar.Classical.forall_intro_squash_gtot@tok () Term)
(declare-fun FStar.Classical.forall_intro_squash_gtot_join (Term Term Term) Term)
(declare-fun Tm_arrow_063aaa309a45de0b15ba96f4b908f656 () Term)
(declare-fun FStar.Classical.forall_intro_squash_gtot_join@tok () Term)
(declare-fun FStar.Classical.forall_intro (Term Term Term) Term)
(declare-fun FStar.Classical.forall_intro@tok () Term)
(declare-fun FStar.Classical.forall_intro_with_pat (Term Term Term Term Term) Term)
(declare-fun FStar.Classical.forall_intro_with_pat@tok () Term)
(declare-fun FStar.Classical.forall_intro_sub (Term Term Term) Term)
(declare-fun FStar.Classical.forall_intro_sub@tok () Term)
(declare-fun FStar.Classical.forall_intro_2 (Term Term Term Term) Term)
(declare-fun FStar.Classical.forall_intro_2@tok () Term)
(declare-fun FStar.Classical.forall_intro_2_with_pat (Term Term Term Term Term Term) Term)
(declare-fun FStar.Classical.forall_intro_2_with_pat@tok () Term)
(declare-fun FStar.Classical.forall_intro_3 (Term Term Term Term Term) Term)
(declare-fun FStar.Classical.forall_intro_3@tok () Term)
(declare-fun FStar.Classical.forall_intro_3_with_pat (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Classical.forall_intro_3_with_pat@tok () Term)
(declare-fun FStar.Classical.forall_intro_4 (Term Term Term Term Term Term) Term)
(declare-fun FStar.Classical.forall_intro_4@tok () Term)
(declare-fun FStar.Classical.forall_impl_intro (Term Term Term Term) Term)
(declare-fun FStar.Classical.forall_impl_intro@tok () Term)
(declare-fun FStar.Classical.ghost_lemma (Term Term Term Term) Term)
(declare-fun FStar.Classical.ghost_lemma@tok () Term)
(declare-fun FStar.Classical.exists_intro (Term Term Term) Term)
(declare-fun FStar.Classical.exists_intro@tok () Term)
(declare-fun FStar.Classical.exists_intro_not_all_not (Term Term Term) Term)
(declare-fun FStar.Classical.exists_intro_not_all_not@tok () Term)
(declare-fun FStar.Classical.forall_to_exists (Term Term Term Term) Term)
(declare-fun FStar.Classical.forall_to_exists@tok () Term)
(declare-fun FStar.Classical.forall_to_exists_2 (Term Term Term Term Term Term) Term)
(declare-fun FStar.Classical.forall_to_exists_2@tok () Term)
(declare-fun FStar.Classical.exists_elim (Term Term Term Term Term) Term)
(declare-fun FStar.Classical.exists_elim@tok () Term)
(declare-fun FStar.Classical.or_elim (Term Term Term Term Term) Term)
(declare-fun FStar.Classical.or_elim@tok () Term)
(declare-fun FStar.Classical.excluded_middle (Term) Term)
(declare-fun FStar.Classical.excluded_middle@tok () Term)
(declare-fun FStar.List.Tot.Base.isEmpty (Term Term) Term)
(declare-fun FStar.List.Tot.Base.isEmpty@tok () Term)
(declare-fun FStar.List.Tot.Base.hd (Term Term) Term)
(declare-fun FStar.List.Tot.Base.hd@tok () Term)
(declare-fun FStar.List.Tot.Base.tail (Term Term) Term)
(declare-fun FStar.List.Tot.Base.tail@tok () Term)
(declare-fun FStar.List.Tot.Base.tl (Term Term) Term)
(declare-fun FStar.List.Tot.Base.tl@tok () Term)
(declare-fun FStar.List.Tot.Base.last.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.List.Tot.Base.last.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.last (Term Term) Term)
(declare-fun FStar.List.Tot.Base.last@tok () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.last.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.List.Tot.Base.last.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.List.Tot.Base.last.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.List.Tot.Base.last.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.last.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.List.Tot.Base.last @x0 @x1) (FStar.List.Tot.Base.last.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.List.Tot.Base.last @x0 @x1)) :qid @fuel_correspondence_FStar.List.Tot.Base.last.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.last.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.init.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.List.Tot.Base.init.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.init (Term Term) Term)
(declare-fun FStar.List.Tot.Base.init@tok () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.init.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.List.Tot.Base.init.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.List.Tot.Base.init.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.List.Tot.Base.init.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.init.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.List.Tot.Base.init @x0 @x1) (FStar.List.Tot.Base.init.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.List.Tot.Base.init @x0 @x1)) :qid @fuel_correspondence_FStar.List.Tot.Base.init.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.init.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.length.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.List.Tot.Base.length.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.length (Term Term) Term)
(declare-fun FStar.List.Tot.Base.length@tok () Term)
(declare-fun Tm_arrow_5adbd6bc13eabd8f92e79f380e1498f0 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (=> (and (HasType @x1 Tm_type) (HasType @x2 (Prims.list @x1))) (= (FStar.List.Tot.Base.length.fuel_instrumented (SFuel @u0) @x1 @x2) (let ((@lb3 @x2)) (ite (is-Prims.Nil @lb3) (BoxInt 0) (ite (is-Prims.Cons @lb3) (Prims.op_Addition (BoxInt 1) (FStar.List.Tot.Base.length.fuel_instrumented @u0 @x1 (Prims.Cons_tl @lb3))) Tm_unit))))) :weight 0 :pattern ((FStar.List.Tot.Base.length.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid equation_with_fuel_FStar.List.Tot.Base.length.fuel_instrumented)) :named equation_with_fuel_FStar.List.Tot.Base.length.fuel_instrumented))
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.length.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.List.Tot.Base.length.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.List.Tot.Base.length.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.List.Tot.Base.length.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.length.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.List.Tot.Base.length @x0 @x1) (FStar.List.Tot.Base.length.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.List.Tot.Base.length @x0 @x1)) :qid @fuel_correspondence_FStar.List.Tot.Base.length.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.length.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.nth.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.nth.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.nth (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.nth@tok () Term)
(declare-fun Tm_arrow_c96efec76dd44fb4c1c29ca8a004927d () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.nth.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.nth.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.nth.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.nth.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.nth.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.nth @x0 @x1 @x2) (FStar.List.Tot.Base.nth.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.nth @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.nth.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.nth.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.index.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.index.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.index (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.index@tok () Term)
(declare-fun Tm_refine_c86aba5c6243e6b7f9a4b0ad41b4e9a0 (Term Term) Term)
(declare-fun Tm_arrow_87330224a075c52374b0ca2b4b909772 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.index.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.index.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.index.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.index.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.index.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.index @x0 @x1 @x2) (FStar.List.Tot.Base.index.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.index @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.index.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.index.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.count.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.count.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.count (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.count@tok () Term)
(declare-fun Tm_arrow_d7494a533e0c3edea69ad484d93aa0e5 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.count.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.count.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.count.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.count.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.count.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.count @x0 @x1 @x2) (FStar.List.Tot.Base.count.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.count @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.count.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.count.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.rev_acc.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.rev_acc.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.rev_acc (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.rev_acc@tok () Term)
(declare-fun Tm_arrow_54e38bdd456bab4cdb32b5d540c2274c () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.rev_acc.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.rev_acc.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.rev_acc.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.rev_acc.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.rev_acc.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.rev_acc @x0 @x1 @x2) (FStar.List.Tot.Base.rev_acc.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.rev_acc @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.rev_acc.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.rev_acc.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.rev (Term Term) Term)
(declare-fun Tm_arrow_f9ba16c6212a483d195bbb8ceec3eef1 () Term)
(declare-fun FStar.List.Tot.Base.rev@tok () Term)
(declare-fun FStar.List.Tot.Base.append.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.append.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.append (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.append@tok () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.append.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.append.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.append.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.append.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.append.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.append @x0 @x1 @x2) (FStar.List.Tot.Base.append.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.append @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.append.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.append.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.op_At (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.op_At@tok () Term)
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.op_At @x0 @x1 @x2) (FStar.List.Tot.Base.append @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.op_At @x0 @x1 @x2)) :qid equation_FStar.List.Tot.Base.op_At)) :named equation_FStar.List.Tot.Base.op_At))
(declare-fun FStar.List.Tot.Base.snoc (Term Term) Term)
(declare-fun Tm_arrow_07ff48a1c7b541b0963ce508064e29fb () Term)
(declare-fun FStar.List.Tot.Base.snoc@tok () Term)
(declare-fun FStar.List.Tot.Base.flatten.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.List.Tot.Base.flatten.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.flatten (Term Term) Term)
(declare-fun FStar.List.Tot.Base.flatten@tok () Term)
(declare-fun Tm_arrow_7e18fd6b36805c1f1c9a77e024fdec2e () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.flatten.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.List.Tot.Base.flatten.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.List.Tot.Base.flatten.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.List.Tot.Base.flatten.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.flatten.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.List.Tot.Base.flatten @x0 @x1) (FStar.List.Tot.Base.flatten.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.List.Tot.Base.flatten @x0 @x1)) :qid @fuel_correspondence_FStar.List.Tot.Base.flatten.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.flatten.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.map.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.map.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.map (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.map@tok () Term)
(declare-fun Tm_arrow_6980332764c4493a7b0df5c02f7aefbe (Term Term) Term)
(declare-fun Tm_arrow_28431dcf5044bcdd56dbe625f9e3df4e () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.map.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.map.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.map.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_FStar.List.Tot.Base.map.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.map.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.map @x0 @x1 @x2 @x3) (FStar.List.Tot.Base.map.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.map @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_FStar.List.Tot.Base.map.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.map.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.mapi_init.fuel_instrumented (Fuel Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.mapi_init.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.mapi_init (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.mapi_init@tok () Term)
(declare-fun Tm_arrow_010f318679809a99aeced42f5ba95505 (Term Term) Term)
(declare-fun Tm_arrow_9a89e146e4bb6b361bc4526b891ed1f1 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term)) (! (= (FStar.List.Tot.Base.mapi_init.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5) (FStar.List.Tot.Base.mapi_init.fuel_instrumented ZFuel @x1 @x2 @x3 @x4 @x5)) :pattern ((FStar.List.Tot.Base.mapi_init.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5)) :qid @fuel_irrelevance_FStar.List.Tot.Base.mapi_init.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.mapi_init.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.mapi_init @x0 @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.mapi_init.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.mapi_init @x0 @x1 @x2 @x3 @x4)) :qid @fuel_correspondence_FStar.List.Tot.Base.mapi_init.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.mapi_init.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.mapi (Term Term Term Term) Term)
(declare-fun Tm_arrow_b2a07f422fceebd0f3ee3abd5e4aeed2 () Term)
(declare-fun FStar.List.Tot.Base.mapi@tok () Term)
(declare-fun FStar.List.Tot.Base.concatMap.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.concatMap.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.concatMap (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.concatMap@tok () Term)
(declare-fun Tm_arrow_121fa5bc200f7b3946a5e35040f266b9 (Term Term) Term)
(declare-fun Tm_arrow_c35dd4e5f8c08f94183bf93963fac92f () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.concatMap.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.concatMap.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.concatMap.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_FStar.List.Tot.Base.concatMap.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.concatMap.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.concatMap @x0 @x1 @x2 @x3) (FStar.List.Tot.Base.concatMap.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.concatMap @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_FStar.List.Tot.Base.concatMap.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.concatMap.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.fold_left.fuel_instrumented (Fuel Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.fold_left.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.fold_left (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.fold_left@tok () Term)
(declare-fun Tm_arrow_f0225aaf6b987d44876e7f498390aa39 (Term Term) Term)
(declare-fun Tm_arrow_230697841c1116c0d5f3958097856e6e () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term)) (! (= (FStar.List.Tot.Base.fold_left.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5) (FStar.List.Tot.Base.fold_left.fuel_instrumented ZFuel @x1 @x2 @x3 @x4 @x5)) :pattern ((FStar.List.Tot.Base.fold_left.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5)) :qid @fuel_irrelevance_FStar.List.Tot.Base.fold_left.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.fold_left.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.fold_left @x0 @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.fold_left.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.fold_left @x0 @x1 @x2 @x3 @x4)) :qid @fuel_correspondence_FStar.List.Tot.Base.fold_left.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.fold_left.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.fold_right.fuel_instrumented (Fuel Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.fold_right.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.fold_right (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.fold_right@tok () Term)
(declare-fun Tm_arrow_3c1d21b8f6dcc5e202b4ff1cafbaba81 (Term Term) Term)
(declare-fun Tm_arrow_105b39eeae3a464c82e64975ac399cdb () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term)) (! (= (FStar.List.Tot.Base.fold_right.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5) (FStar.List.Tot.Base.fold_right.fuel_instrumented ZFuel @x1 @x2 @x3 @x4 @x5)) :pattern ((FStar.List.Tot.Base.fold_right.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5)) :qid @fuel_irrelevance_FStar.List.Tot.Base.fold_right.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.fold_right.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.fold_right @x0 @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.fold_right.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.fold_right @x0 @x1 @x2 @x3 @x4)) :qid @fuel_correspondence_FStar.List.Tot.Base.fold_right.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.fold_right.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented (Fuel Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.fold_right_gtot (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.fold_right_gtot@tok () Term)
(declare-fun Tm_ghost_arrow_d7e9834b8fd0407a723f5f3f4b012fdd (Term Term) Term)
(declare-fun Tm_ghost_arrow_fab043b8cdd2296e8d98a06066e4b2d2 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term)) (! (= (FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5) (FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented ZFuel @x1 @x2 @x3 @x4 @x5)) :pattern ((FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5)) :qid @fuel_irrelevance_FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.fold_right_gtot @x0 @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.fold_right_gtot @x0 @x1 @x2 @x3 @x4)) :qid @fuel_correspondence_FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.fold_right_gtot.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.map_gtot (Term Term Term Term) Term)
(declare-fun Tm_ghost_arrow_d0c7be07105bf8d5ad60b7f603c725f3 () Term)
(declare-fun FStar.List.Tot.Base.map_gtot@tok () Term)
(declare-fun Tm_ghost_arrow_21583233c98863da294c5e5d657cf78a (Term Term) Term)
(declare-fun Tm_abs_469cd3853c3ff3e8cd408b5521fdbd9d (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.fold_left2.fuel_instrumented (Fuel Term Term Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.fold_left2.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.fold_left2 (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.fold_left2@tok () Term)
(declare-fun Tm_arrow_40dd30796dd695d143ec6ed01d322177 (Term Term Term) Term)
(declare-fun Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b (Term) Term)
(declare-fun Tm_arrow_3f28d1abbd43ddded682cbec516ea7bb () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term)) (! (= (FStar.List.Tot.Base.fold_left2.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5 @x6 @x7) (FStar.List.Tot.Base.fold_left2.fuel_instrumented ZFuel @x1 @x2 @x3 @x4 @x5 @x6 @x7)) :pattern ((FStar.List.Tot.Base.fold_left2.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5 @x6 @x7)) :qid @fuel_irrelevance_FStar.List.Tot.Base.fold_left2.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.fold_left2.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term)) (! (= (FStar.List.Tot.Base.fold_left2 @x0 @x1 @x2 @x3 @x4 @x5 @x6) (FStar.List.Tot.Base.fold_left2.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3 @x4 @x5 @x6)) :pattern ((FStar.List.Tot.Base.fold_left2 @x0 @x1 @x2 @x3 @x4 @x5 @x6)) :qid @fuel_correspondence_FStar.List.Tot.Base.fold_left2.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.fold_left2.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.memP.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.memP.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.memP (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.memP@tok () Term)
(declare-fun Tm_arrow_9a5de17321abf8ec257671c9a474c08a () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.memP.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.memP.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.memP.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.memP.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.memP.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.memP @x0 @x1 @x2) (FStar.List.Tot.Base.memP.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.memP @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.memP.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.memP.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.mem.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.mem.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.mem (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.mem@tok () Term)
(declare-fun Tm_arrow_8b16b79a9f8fab7cb6911016a8022992 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.mem.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.mem.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.mem.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.mem.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.mem.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.mem @x0 @x1 @x2) (FStar.List.Tot.Base.mem.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.mem @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.mem.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.mem.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.contains (Term) Term)
(declare-fun Tm_arrow_c7306997fce9480ecc743e5f07d84087 (Term) Term)
(declare-fun Tm_arrow_dc6bb79540975b8523aaf4f1cab2f558 () Term)
(declare-fun FStar.List.Tot.Base.contains@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.List.Tot.Base.mem@tok)) :named kick_partial_app_ccd82d20727a12a21bc723f6ffff5e81))
(declare-fun FStar.List.Tot.Base.existsb.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.existsb.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.existsb (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.existsb@tok () Term)
(declare-fun Tm_arrow_84543425b818e2d10a976186b8e8c250 (Term) Term)
(declare-fun Tm_arrow_98dbecc64760e6a41f037a6881cd5df8 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.existsb.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.existsb.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.existsb.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.existsb.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.existsb.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.existsb @x0 @x1 @x2) (FStar.List.Tot.Base.existsb.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.existsb @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.existsb.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.existsb.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.find.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.find.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.find (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.find@tok () Term)
(declare-fun Tm_refine_3b1cb9ec3355fed185c658f53954b3fa (Term Term) Term)
(declare-fun Tm_arrow_286c509b12b9a2bb9bf1025c6fd97451 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.find.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.find.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.find.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.find.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.find.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.find @x0 @x1 @x2) (FStar.List.Tot.Base.find.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.find @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.find.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.find.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.filter.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.filter.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.filter (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.filter@tok () Term)
(declare-fun Tm_refine_5c77e54d118aa26696ff018c647e0d2c (Term Term) Term)
(declare-fun Tm_arrow_26bc30ca5e980f52cef77fa4ff2b8923 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.filter.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.filter.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.filter.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.filter.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.filter.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.filter @x0 @x1 @x2) (FStar.List.Tot.Base.filter.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.filter @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.filter.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.filter.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.mem_filter (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.mem_filter@tok () Term)
(declare-fun FStar.List.Tot.Base.mem_filter_forall (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.mem_filter_forall@tok () Term)
(declare-fun FStar.List.Tot.Base.for_all.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.for_all.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.for_all (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.for_all@tok () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.for_all.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.for_all.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.for_all.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.for_all.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.for_all.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.for_all @x0 @x1 @x2) (FStar.List.Tot.Base.for_all.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.for_all @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.for_all.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.for_all.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.for_all_mem (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.for_all_mem@tok () Term)
(declare-fun FStar.List.Tot.Base.collect.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.collect.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.collect (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.collect@tok () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.collect.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.collect.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.collect.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_FStar.List.Tot.Base.collect.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.collect.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.collect @x0 @x1 @x2 @x3) (FStar.List.Tot.Base.collect.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.collect @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_FStar.List.Tot.Base.collect.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.collect.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.tryFind.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.tryFind.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.tryFind (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.tryFind@tok () Term)
(declare-fun Tm_arrow_4ae6bca87a611585312b8b0d0d66fefe () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.tryFind.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.tryFind.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.tryFind.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.tryFind.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.tryFind.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.tryFind @x0 @x1 @x2) (FStar.List.Tot.Base.tryFind.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.tryFind @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.tryFind.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.tryFind.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.tryPick.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.tryPick.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.tryPick (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.tryPick@tok () Term)
(declare-fun Tm_arrow_4b0c7cc34485afa5854ebe5c95023d4c (Term Term) Term)
(declare-fun Tm_arrow_7fbbe8a710b97b9ed9c0d2dfb00b1641 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.tryPick.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.tryPick.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.tryPick.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_FStar.List.Tot.Base.tryPick.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.tryPick.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.tryPick @x0 @x1 @x2 @x3) (FStar.List.Tot.Base.tryPick.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.tryPick @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_FStar.List.Tot.Base.tryPick.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.tryPick.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.choose.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.choose.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.choose (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.choose@tok () Term)
(declare-fun Tm_arrow_ee03a7411b6d8975b285ea6c772c4d89 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.choose.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.choose.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.choose.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_FStar.List.Tot.Base.choose.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.choose.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.choose @x0 @x1 @x2 @x3) (FStar.List.Tot.Base.choose.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.choose @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_FStar.List.Tot.Base.choose.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.choose.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.partition.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.partition.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.partition (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.partition@tok () Term)
(declare-fun Tm_arrow_706f575815ce8a3bbd962da035d8aa14 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.partition.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.partition.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.partition.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.partition.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.partition.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.partition @x0 @x1 @x2) (FStar.List.Tot.Base.partition.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.partition @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.partition.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.partition.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.subset.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.subset.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.subset (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.subset@tok () Term)
(declare-fun Tm_arrow_8d819a995fc33b4cb6aa699af88e8d32 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.subset.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.subset.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.subset.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.subset.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.subset.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.subset @x0 @x1 @x2) (FStar.List.Tot.Base.subset.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.subset @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.subset.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.subset.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.noRepeats.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.List.Tot.Base.noRepeats.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.noRepeats (Term Term) Term)
(declare-fun FStar.List.Tot.Base.noRepeats@tok () Term)
(declare-fun Tm_arrow_0dd285b24907a2f8b15dedffef61afa6 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.noRepeats.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.List.Tot.Base.noRepeats.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.List.Tot.Base.noRepeats.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.List.Tot.Base.noRepeats.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.noRepeats.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.List.Tot.Base.noRepeats @x0 @x1) (FStar.List.Tot.Base.noRepeats.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.List.Tot.Base.noRepeats @x0 @x1)) :qid @fuel_correspondence_FStar.List.Tot.Base.noRepeats.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.noRepeats.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.no_repeats_p.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.List.Tot.Base.no_repeats_p.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.no_repeats_p (Term Term) Term)
(declare-fun FStar.List.Tot.Base.no_repeats_p@tok () Term)
(declare-fun Tm_arrow_79c2442eab9e49d1108d2b7a240dc76e () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.no_repeats_p.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.List.Tot.Base.no_repeats_p.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.List.Tot.Base.no_repeats_p.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.List.Tot.Base.no_repeats_p.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.no_repeats_p.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.List.Tot.Base.no_repeats_p @x0 @x1) (FStar.List.Tot.Base.no_repeats_p.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.List.Tot.Base.no_repeats_p @x0 @x1)) :qid @fuel_correspondence_FStar.List.Tot.Base.no_repeats_p.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.no_repeats_p.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.assoc.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.assoc.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.assoc (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.assoc@tok () Term)
(declare-fun Tm_arrow_d77cf796c5b72d2c2316c0fcdad1dd79 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.assoc.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.assoc.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.assoc.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_FStar.List.Tot.Base.assoc.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.assoc.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.assoc @x0 @x1 @x2 @x3) (FStar.List.Tot.Base.assoc.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.assoc @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_FStar.List.Tot.Base.assoc.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.assoc.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.split.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.split.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.split (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.split@tok () Term)
(declare-fun Tm_arrow_1c3cb31b4ffa47bc6454f5b8a25e2407 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.split.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.split.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.split.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.split.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.split.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.split @x0 @x1 @x2) (FStar.List.Tot.Base.split.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.split @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.split.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.split.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.unzip (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.unzip@tok () Term)
(declare-fun FStar.List.Tot.Base.unzip3.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.unzip3.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.unzip3 (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.unzip3@tok () Term)
(declare-fun Tm_arrow_d40be6b496fedb6f7a46205c5824b732 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.List.Tot.Base.unzip3.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (FStar.List.Tot.Base.unzip3.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((FStar.List.Tot.Base.unzip3.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_FStar.List.Tot.Base.unzip3.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.unzip3.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.unzip3 @x0 @x1 @x2 @x3) (FStar.List.Tot.Base.unzip3.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.unzip3 @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_FStar.List.Tot.Base.unzip3.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.unzip3.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.splitAt.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.splitAt.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.splitAt (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.splitAt@tok () Term)
(declare-fun Tm_arrow_e36bd078e08c2ac2f1324fef6e0a4a22 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.splitAt.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.splitAt.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.splitAt.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.splitAt.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.splitAt.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.splitAt @x0 @x1 @x2) (FStar.List.Tot.Base.splitAt.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.splitAt @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.splitAt.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.splitAt.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.lemma_splitAt_snd_length (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.lemma_splitAt_snd_length@tok () Term)
(declare-fun Tm_refine_3f6b38b2852708f36615f9b4db0f9ff1 (Term) Term)
(declare-fun FStar.List.Tot.Base.unsnoc (Term Term) Term)
(declare-fun Tm_arrow_f4bc61622db0c39a751170734a140783 () Term)
(declare-fun FStar.List.Tot.Base.unsnoc@tok () Term)
(declare-fun FStar.List.Tot.Base.split3 (Term Term Term) Term)
(declare-fun Tm_arrow_07dcb44faa0fb6172673970868e7ecff () Term)
(declare-fun FStar.List.Tot.Base.split3@tok () Term)
(declare-fun FStar.List.Tot.Base.partition_length (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.partition_length@tok () Term)
(declare-fun Tm_arrow_9877f854fbaabbcfda94f6c19b32ae3f (Term) Term)
(declare-fun FStar.List.Tot.Base.bool_of_compare (Term Term Term Term) Term)
(declare-fun Tm_arrow_a2f219461d35e20b7bc771538ca96429 () Term)
(declare-fun FStar.List.Tot.Base.bool_of_compare@tok () Term)
(declare-fun Tm_arrow_c8126b87a2c25bb477df4a7a6b0eea9e (Term) Term)
(declare-fun FStar.List.Tot.Base.compare_of_bool (Term Term Term Term) Term)
(declare-fun Tm_arrow_8b54d4820d055c327440d0d4811d3a33 () Term)
(declare-fun FStar.List.Tot.Base.compare_of_bool@tok () Term)
(declare-fun FStar.List.Tot.Base.compare_of_bool_of_compare (Term Term) Term)
(declare-fun FStar.List.Tot.Base.compare_of_bool_of_compare@tok () Term)
(declare-fun FStar.List.Tot.Base.sortWith.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.sortWith.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.sortWith (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.sortWith@tok () Term)
(declare-fun Tm_arrow_d29fb5884447b657cb725f9be68c5ba6 () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.List.Tot.Base.bool_of_compare@tok)) :named kick_partial_app_6123e8040f356c82d11b245dda0e1ccc))
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.sortWith.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.sortWith.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.sortWith.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.sortWith.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.sortWith.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.sortWith @x0 @x1 @x2) (FStar.List.Tot.Base.sortWith.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.sortWith @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.sortWith.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.sortWith.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.strict_prefix_of (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.strict_prefix_of@tok () Term)
(declare-fun Tm_refine_da3062322c9bea8d5b2058386775b91a () Term)
(declare-fun Tm_arrow_1d91178a138c1826d6a199b1613394f1 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.strict_prefix_of @x0 @x1 @x2) (FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.strict_prefix_of @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.strict_prefix_of.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.list_unref.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.list_unref.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.list_unref (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.list_unref@tok () Term)
(declare-fun Tm_refine_9f8cb5a84b67f50c9d5f87a914037545 (Term Term) Term)
(declare-fun Tm_arrow_6b3a7706fc085133138f00ee506ef176 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.list_unref.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.list_unref.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.list_unref.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.list_unref.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.list_unref.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.list_unref @x0 @x1 @x2) (FStar.List.Tot.Base.list_unref.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.list_unref @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.list_unref.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.list_unref.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.list_refb.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.list_refb.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.list_refb (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.list_refb@tok () Term)
(declare-fun Tm_refine_3dfaece5a1f8e27ecb1367ff50145048 (Term Term) Term)
(declare-fun Tm_refine_b3daba88e15ae8a9be9dd341522270b2 (Term Term Term Term) Term)
(declare-fun Tm_refine_1d1ddbacd892e41ad4ba585e87296d2e (Term Term Term) Term)
(declare-fun Tm_arrow_73c684a5823f2875fcceead4ce671ea8 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.list_refb.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.list_refb.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.list_refb.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.list_refb.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.list_refb.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.list_refb @x0 @x1 @x2) (FStar.List.Tot.Base.list_refb.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.list_refb @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.list_refb.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.list_refb.fuel_instrumented))
(declare-fun FStar.List.Tot.Base.list_ref.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.list_ref.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Base.list_ref (Term Term Term) Term)
(declare-fun FStar.List.Tot.Base.list_ref@tok () Term)
(declare-fun Tm_arrow_81e65de2755319ee661cc1adc7d951e3 (Term) Term)
(declare-fun Tm_refine_751cc4d3e845537c495f9d7e1deb8aa9 (Term Term) Term)
(declare-fun Tm_refine_f61b92c00df29b87346e52dcf7670926 (Term Term Term Term) Term)
(declare-fun Tm_refine_16f0c42812e28aba7e30bc8c275306fb (Term Term Term) Term)
(declare-fun Tm_arrow_73f29356f974e35d230fb85375ad3965 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Base.list_ref.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Base.list_ref.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Base.list_ref.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Base.list_ref.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Base.list_ref.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Base.list_ref @x0 @x1 @x2) (FStar.List.Tot.Base.list_ref.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Base.list_ref @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Base.list_ref.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Base.list_ref.fuel_instrumented))
(declare-fun FStar.StrongExcludedMiddle.strong_excluded_middle (Term) Term)
(declare-fun Tm_refine_2c7ecebd8a41d0890aab4251b61d6458 (Term) Term)
(declare-fun Tm_ghost_arrow_13b822d9f45311e725609e40f68f39a1 () Term)
(declare-fun FStar.StrongExcludedMiddle.strong_excluded_middle@tok () Term)
(declare-fun FStar.List.Tot.Properties.llist (Term Term) Term)
(declare-fun Tm_arrow_67c7b2626869cb316f118144000415b9 () Term)
(declare-fun FStar.List.Tot.Properties.llist@tok () Term)
(declare-fun Tm_refine_fbb3412f12fd58a91571022d7c9fa36d (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.mem_empty (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.mem_empty@tok () Term)
(declare-fun FStar.List.Tot.Properties.mem_existsb (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.mem_existsb@tok () Term)
(declare-fun FStar.List.Tot.Properties.mem_count (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.mem_count@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev_acc_length (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_acc_length@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev_length (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_length@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev_acc_mem (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_acc_mem@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev_mem (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_mem@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_nil_l (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_nil_l@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_l_nil (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_l_nil@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_cons_l (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_cons_l@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_l_cons (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_l_cons@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_assoc (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_assoc@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_length (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_length@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_mem (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_mem@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_mem_forall (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_mem_forall@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_count (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_count@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_count_forall (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_count_forall@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_eq_nil (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_eq_nil@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_eq_singl (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_eq_singl@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_inv_head (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_inv_head@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_inv_tail (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_inv_tail@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_length_inv_head (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_length_inv_head@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_length_inv_tail (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_length_inv_tail@tok () Term)
(declare-fun FStar.List.Tot.Properties.lemma_append_last (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_append_last@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev_.fuel_instrumented (Fuel Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Properties.rev_ (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_@tok () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Properties.rev_.fuel_instrumented (SFuel @u0) @x1 @x2) (FStar.List.Tot.Properties.rev_.fuel_instrumented ZFuel @x1 @x2)) :pattern ((FStar.List.Tot.Properties.rev_.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_FStar.List.Tot.Properties.rev_.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Properties.rev_.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (FStar.List.Tot.Properties.rev_ @x0 @x1) (FStar.List.Tot.Properties.rev_.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((FStar.List.Tot.Properties.rev_ @x0 @x1)) :qid @fuel_correspondence_FStar.List.Tot.Properties.rev_.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Properties.rev_.fuel_instrumented))
(declare-fun FStar.List.Tot.Properties.rev_T (Term) Term)
(declare-fun Tm_arrow_f34ce2ad5441b4bd300fa100b397737d (Term) Term)
(declare-fun Tm_arrow_42c6b27a859866d5307ff94c9f459cb1 () Term)
(declare-fun FStar.List.Tot.Properties.rev_T@tok () Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.List.Tot.Properties.rev_@tok)) :named kick_partial_app_6780e2e9ce16d5330b5fda76b7bde9c5))
(declare-fun FStar.List.Tot.Properties.rev_acc_rev_ (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_acc_rev_@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev_rev_ (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_rev_@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev__append (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev__append@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev_append (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_append@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev__involutive (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev__involutive@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev_involutive (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_involutive@tok () Term)
(declare-fun FStar.List.Tot.Properties.lemma_snoc_length (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_snoc_length@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev__list_ind (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev__list_ind@tok () Term)
(declare-fun FStar.List.Tot.Properties.rev_ind (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.rev_ind@tok () Term)
(declare-fun FStar.List.Tot.Properties.map_lemma (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.map_lemma@tok () Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_snoc (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_snoc@tok () Term)
(declare-fun Tm_refine_e88aba6d4c79a5625ab4330932edf7ed (Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_snoc_unsnoc (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_snoc_unsnoc@tok () Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_length (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_length@tok () Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_append (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_append@tok () Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_is_last (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_is_last@tok () Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_index (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_unsnoc_index@tok () Term)
(declare-fun FStar.List.Tot.Properties.split_using.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.split_using.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Properties.split_using (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.split_using@tok () Term)
(declare-fun Tm_refine_ca5b6dc4e0a851997703798a1ffc5f70 (Term Term) Term)
(declare-fun Tm_ghost_arrow_583c096a402961cd40d8b718fb07bacc () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Properties.split_using.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Properties.split_using.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Properties.split_using.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Properties.split_using.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Properties.split_using.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Properties.split_using @x0 @x1 @x2) (FStar.List.Tot.Properties.split_using.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Properties.split_using @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Properties.split_using.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Properties.split_using.fuel_instrumented))
(declare-fun FStar.List.Tot.Properties.lemma_split_using (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_split_using@tok () Term)
(declare-fun FStar.List.Tot.Properties.index_of.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.index_of.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Properties.index_of (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.index_of@tok () Term)
(declare-fun Tm_refine_cd45ecc9daf74409c394004efbaa3338 (Term Term Term) Term)
(declare-fun Tm_ghost_arrow_d9cd5e48f458f8c211c59f9048af3929 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Properties.index_of.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Properties.index_of.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Properties.index_of.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Properties.index_of.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Properties.index_of.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Properties.index_of @x0 @x1 @x2) (FStar.List.Tot.Properties.index_of.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Properties.index_of @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Properties.index_of.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Properties.index_of.fuel_instrumented))
(declare-fun FStar.List.Tot.Properties.partition_mem (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.partition_mem@tok () Term)
(declare-fun FStar.List.Tot.Properties.partition_mem_forall (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.partition_mem_forall@tok () Term)
(declare-fun FStar.List.Tot.Properties.partition_mem_p_forall (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.partition_mem_p_forall@tok () Term)
(declare-fun FStar.List.Tot.Properties.partition_count (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.partition_count@tok () Term)
(declare-fun FStar.List.Tot.Properties.partition_count_forall (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.partition_count_forall@tok () Term)
(declare-fun FStar.List.Tot.Properties.sortWith_permutation (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.sortWith_permutation@tok () Term)
(declare-fun FStar.List.Tot.Properties.sorted.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.sorted.fuel_instrumented_token () Term)
(declare-fun FStar.List.Tot.Properties.sorted (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.sorted@tok () Term)
(declare-fun Tm_arrow_3ceaaa0abe084cc4615eb380e8d5e0cc () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.List.Tot.Properties.sorted.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (FStar.List.Tot.Properties.sorted.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((FStar.List.Tot.Properties.sorted.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_FStar.List.Tot.Properties.sorted.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Tot.Properties.sorted.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (FStar.List.Tot.Properties.sorted @x0 @x1 @x2) (FStar.List.Tot.Properties.sorted.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((FStar.List.Tot.Properties.sorted @x0 @x1 @x2)) :qid @fuel_correspondence_FStar.List.Tot.Properties.sorted.fuel_instrumented)) :named fuel_correspondence_FStar.List.Tot.Properties.sorted.fuel_instrumented))
(declare-fun FStar.List.Tot.Properties.total_order (Term Term) Term)
(declare-fun Tm_arrow_92649d42e4d7df07b51f92b06355903e () Term)
(declare-fun FStar.List.Tot.Properties.total_order@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_sorted (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_sorted@tok () Term)
(declare-fun Tm_refine_828abd88abe59cf052738363f3952d7b (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.sortWith_sorted (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.sortWith_sorted@tok () Term)
(declare-fun FStar.List.Tot.Properties.mem_memP (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.mem_memP@tok () Term)
(declare-fun FStar.List.Tot.Properties.lemma_index_memP (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.lemma_index_memP@tok () Term)
(declare-fun Tm_refine_bf2fa1226f2c9a0f6671df3e80ddcb8e (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.memP_empty (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.memP_empty@tok () Term)
(declare-fun FStar.List.Tot.Properties.memP_existsb (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.memP_existsb@tok () Term)
(declare-fun FStar.List.Tot.Properties.memP_map_intro (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.memP_map_intro@tok () Term)
(declare-fun FStar.List.Tot.Properties.memP_map_elim (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.memP_map_elim@tok () Term)
(declare-fun FStar.List.Tot.Properties.noRepeats_nil (Term) Term)
(declare-fun FStar.List.Tot.Properties.noRepeats_nil@tok () Term)
(declare-fun FStar.List.Tot.Properties.noRepeats_cons (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.noRepeats_cons@tok () Term)
(declare-fun FStar.List.Tot.Properties.noRepeats_append_elim (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.noRepeats_append_elim@tok () Term)
(declare-fun FStar.List.Tot.Properties.noRepeats_append_intro (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.noRepeats_append_intro@tok () Term)
(declare-fun FStar.List.Tot.Properties.assoc_nil (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.assoc_nil@tok () Term)
(declare-fun FStar.List.Tot.Properties.assoc_cons_eq (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.assoc_cons_eq@tok () Term)
(declare-fun FStar.List.Tot.Properties.assoc_cons_not_eq (Term Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.assoc_cons_not_eq@tok () Term)
(declare-fun FStar.List.Tot.Properties.assoc_append_elim_r (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.assoc_append_elim_r@tok () Term)
(declare-fun FStar.List.Tot.Properties.assoc_append_elim_l (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.assoc_append_elim_l@tok () Term)
(declare-fun FStar.List.Tot.Properties.assoc_memP_some (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.assoc_memP_some@tok () Term)
(declare-fun FStar.List.Tot.Properties.assoc_memP_none (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.assoc_memP_none@tok () Term)
(declare-fun FStar.List.Tot.Properties.assoc_mem (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.assoc_mem@tok () Term)
(declare-fun FStar.List.Tot.Properties.fold_left_invar (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.fold_left_invar@tok () Term)
(declare-fun FStar.List.Tot.Properties.fold_left_map (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.fold_left_map@tok () Term)
(declare-fun FStar.List.Tot.Properties.map_append (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.map_append@tok () Term)
(declare-fun FStar.List.Tot.Properties.fold_left_append (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.fold_left_append@tok () Term)
(declare-fun FStar.List.Tot.Properties.fold_left_monoid (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.fold_left_monoid@tok () Term)
(declare-fun FStar.List.Tot.Properties.fold_left_append_monoid (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.fold_left_append_monoid@tok () Term)
(declare-fun FStar.List.Tot.Properties.index_extensionality_aux (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.index_extensionality_aux@tok () Term)
(declare-fun FStar.List.Tot.Properties.index_extensionality (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.index_extensionality@tok () Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_nil (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_nil@tok () Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_or_eq_nil (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_or_eq_nil@tok () Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_cons (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_cons@tok () Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_trans (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_trans@tok () Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_correct (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_correct@tok () Term)
(declare-fun FStar.List.Tot.Properties.map_strict_prefix_of (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.map_strict_prefix_of@tok () Term)
(declare-fun FStar.List.Tot.Properties.mem_strict_prefix_of (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.mem_strict_prefix_of@tok () Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_exists_append (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_exists_append@tok () Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_or_eq_exists_append (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.strict_prefix_of_or_eq_exists_append@tok () Term)
(declare-fun FStar.List.Tot.Properties.precedes_tl (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.precedes_tl@tok () Term)
(declare-fun FStar.List.Tot.Properties.precedes_append_cons_r (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.precedes_append_cons_r@tok () Term)
(declare-fun FStar.List.Tot.Properties.precedes_append_cons_prod_r (Term Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.precedes_append_cons_prod_r@tok () Term)
(declare-fun FStar.List.Tot.Properties.memP_precedes (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.memP_precedes@tok () Term)
(declare-fun FStar.List.Tot.Properties.assoc_precedes (Term Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.assoc_precedes@tok () Term)
(declare-fun FStar.List.Tot.Properties.find_none (Term Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.find_none@tok () Term)
(declare-fun FStar.List.Tot.Properties.append_init_last (Term Term) Term)
(declare-fun FStar.List.Tot.Properties.append_init_last@tok () Term)
(declare-fun FStar.List.Tot.Properties.init_last_def (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.init_last_def@tok () Term)
(declare-fun FStar.List.Tot.Properties.init_last_inj (Term Term Term) Term)
(declare-fun FStar.List.Tot.Properties.init_last_inj@tok () Term)
(declare-fun FStar.List.Pure.Base.map2.fuel_instrumented (Fuel Term Term Term Term Term Term) Term)
(declare-fun FStar.List.Pure.Base.map2.fuel_instrumented_token () Term)
(declare-fun FStar.List.Pure.Base.map2 (Term Term Term Term Term Term) Term)
(declare-fun FStar.List.Pure.Base.map2@tok () Term)
(declare-fun Tm_arrow_31983ce7bb3fa3288ec94b088df0f02a (Term Term Term) Term)
(declare-fun Tm_refine_a3ac6b29f87fe50a32f565e9fe1d0950 (Term) Term)
(declare-fun Tm_arrow_d09b8c192f04411d5e96a97a86e826cf () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term)) (! (= (FStar.List.Pure.Base.map2.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5 @x6) (FStar.List.Pure.Base.map2.fuel_instrumented ZFuel @x1 @x2 @x3 @x4 @x5 @x6)) :pattern ((FStar.List.Pure.Base.map2.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5 @x6)) :qid @fuel_irrelevance_FStar.List.Pure.Base.map2.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Pure.Base.map2.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term)) (! (= (FStar.List.Pure.Base.map2 @x0 @x1 @x2 @x3 @x4 @x5) (FStar.List.Pure.Base.map2.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3 @x4 @x5)) :pattern ((FStar.List.Pure.Base.map2 @x0 @x1 @x2 @x3 @x4 @x5)) :qid @fuel_correspondence_FStar.List.Pure.Base.map2.fuel_instrumented)) :named fuel_correspondence_FStar.List.Pure.Base.map2.fuel_instrumented))
(declare-fun FStar.List.Pure.Base.map3.fuel_instrumented (Fuel Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.List.Pure.Base.map3.fuel_instrumented_token () Term)
(declare-fun FStar.List.Pure.Base.map3 (Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.List.Pure.Base.map3@tok () Term)
(declare-fun Tm_arrow_46a2f20e317f00bf7b3689605c5b8536 (Term Term Term Term) Term)
(declare-fun Tm_arrow_0fc00539dfc5cde758cc35e529cf5cfe () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term) (@x8 Term)) (! (= (FStar.List.Pure.Base.map3.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5 @x6 @x7 @x8) (FStar.List.Pure.Base.map3.fuel_instrumented ZFuel @x1 @x2 @x3 @x4 @x5 @x6 @x7 @x8)) :pattern ((FStar.List.Pure.Base.map3.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5 @x6 @x7 @x8)) :qid @fuel_irrelevance_FStar.List.Pure.Base.map3.fuel_instrumented)) :named fuel_irrelevance_FStar.List.Pure.Base.map3.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term)) (! (= (FStar.List.Pure.Base.map3 @x0 @x1 @x2 @x3 @x4 @x5 @x6 @x7) (FStar.List.Pure.Base.map3.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3 @x4 @x5 @x6 @x7)) :pattern ((FStar.List.Pure.Base.map3 @x0 @x1 @x2 @x3 @x4 @x5 @x6 @x7)) :qid @fuel_correspondence_FStar.List.Pure.Base.map3.fuel_instrumented)) :named fuel_correspondence_FStar.List.Pure.Base.map3.fuel_instrumented))
(declare-fun FStar.List.Pure.Base.zip (Term Term Term Term) Term)
(declare-fun Tm_refine_7601fd35209f0dfe32caf8e6aa0c761e (Term Term) Term)
(declare-fun Tm_arrow_c2e3156645972fa5f814a08924ec95e1 () Term)
(declare-fun FStar.List.Pure.Base.zip@tok () Term)
(declare-fun Tm_arrow_8d5231444551169891273b4335ff0928 (Term Term) Term)
(declare-fun Tm_abs_0c186ecf97439ad3963f0d99d884d6c1 (Term Term) Term)
(declare-fun FStar.List.Pure.Base.zip3 (Term Term Term Term Term Term) Term)
(declare-fun Tm_refine_12e5ee5055ebda100fc1f6a27965187b (Term Term Term) Term)
(declare-fun Tm_arrow_b2eb59c8cad36c4b54b7310ef354256d () Term)
(declare-fun FStar.List.Pure.Base.zip3@tok () Term)
(declare-fun Tm_arrow_008398b0d1ef90139984acc96be2ad1b (Term Term Term) Term)
(declare-fun Tm_abs_54896cb1065d1d48f1d3ac36914db8e3 (Term Term Term) Term)
(declare-fun FStar.List.Pure.Properties.splitAt_length (Term Term Term) Term)
(declare-fun FStar.List.Pure.Properties.splitAt_length@tok () Term)
(declare-fun FStar.List.Pure.Properties.splitAt_assoc (Term Term Term Term) Term)
(declare-fun FStar.List.Pure.Properties.splitAt_assoc@tok () Term)
(declare-fun FStar.List.Pure.Properties.splitAt_length_total (Term Term) Term)
(declare-fun FStar.List.Pure.Properties.splitAt_length_total@tok () Term)
(declare-fun FStar.List.Pure.Properties.lemma_splitAt_append (Term Term Term) Term)
(declare-fun FStar.List.Pure.Properties.lemma_splitAt_append@tok () Term)
(declare-fun FStar.List.Pure.Properties.lemma_append_splitAt (Term Term Term) Term)
(declare-fun FStar.List.Pure.Properties.lemma_append_splitAt@tok () Term)
(declare-fun FStar.List.Pure.Properties.lemma_splitAt (Term Term Term Term Term) Term)
(declare-fun FStar.List.Pure.Properties.lemma_splitAt@tok () Term)
(declare-fun FStar.List.Pure.Properties.lemma_splitAt_index_hd (Term Term Term) Term)
(declare-fun FStar.List.Pure.Properties.lemma_splitAt_index_hd@tok () Term)
(declare-fun FStar.List.Pure.Properties.lemma_splitAt_shorten_left (Term Term Term Term Term) Term)
(declare-fun FStar.List.Pure.Properties.lemma_splitAt_shorten_left@tok () Term)
(declare-fun FStar.List.Pure.Properties.lemma_splitAt_reindex_left (Term Term Term Term) Term)
(declare-fun FStar.List.Pure.Properties.lemma_splitAt_reindex_left@tok () Term)
(declare-fun FStar.List.Pure.Properties.lemma_splitAt_reindex_right (Term Term Term Term) Term)
(declare-fun FStar.List.Pure.Properties.lemma_splitAt_reindex_right@tok () Term)
(declare-fun FStar.List.Pure.Properties.lemma_split3_append (Term Term Term) Term)
(declare-fun FStar.List.Pure.Properties.lemma_split3_append@tok () Term)
(declare-fun FStar.List.Pure.Properties.lemma_split3_index (Term Term Term) Term)
(declare-fun FStar.List.Pure.Properties.lemma_split3_index@tok () Term)
(declare-fun FStar.List.Pure.Properties.lemma_split3_length (Term Term Term) Term)
(declare-fun FStar.List.Pure.Properties.lemma_split3_length@tok () Term)
(declare-fun FStar.List.Pure.Properties.lemma_split3_on_same_leftprefix (Term Term Term Term) Term)
(declare-fun FStar.List.Pure.Properties.lemma_split3_on_same_leftprefix@tok () Term)
(declare-fun FStar.List.Pure.Properties.lemma_split3_unsnoc (Term Term Term) Term)
(declare-fun FStar.List.Pure.Properties.lemma_split3_unsnoc@tok () Term)
(declare-fun FStar.List.Pure.Properties.lemma_unsnoc_split3 (Term Term Term) Term)
(declare-fun FStar.List.Pure.Properties.lemma_unsnoc_split3@tok () Term)
(declare-fun FStar.List.Pure.Properties.lemma_split3_r_hd (Term Term Term) Term)
(declare-fun FStar.List.Pure.Properties.lemma_split3_r_hd@tok () Term)
(declare-fun FStar.Preorder.relation (Term) Term)
(declare-fun FStar.Preorder.relation@tok () Term)
(declare-fun Tm_arrow_a19f9d49348d4e0038f0ded87d87802f (Term) Term)
(declare-fun FStar.Preorder.predicate (Term) Term)
(declare-fun FStar.Preorder.predicate@tok () Term)
(declare-fun FStar.Preorder.reflexive (Term Term) Term)
(declare-fun Tm_arrow_8e677a33afbeb812aa3779b7bdd0131c () Term)
(declare-fun FStar.Preorder.reflexive@tok () Term)
(declare-fun FStar.Preorder.transitive (Term Term) Term)
(declare-fun FStar.Preorder.transitive@tok () Term)
(declare-fun FStar.Preorder.preorder_rel (Term Term) Term)
(declare-fun FStar.Preorder.preorder_rel@tok () Term)
(declare-fun FStar.Preorder.preorder (Term) Term)
(declare-fun FStar.Preorder.preorder@tok () Term)
(declare-fun Tm_refine_bd10f09297e0e7dc08314f7d9211801c (Term) Term)
(declare-fun FStar.Preorder.stable (Term Term Term) Term)
(declare-fun Tm_arrow_88036d0811eee3361efd6229bae2556d () Term)
(declare-fun FStar.Preorder.stable@tok () Term)
(declare-fun FStar.Calc.calc_proof (Term Term Term Term) Term)
(declare-fun FStar.Calc.calc_proof@x0 (Term) Term)
(declare-fun FStar.Calc.calc_proof@x1 (Term) Term)
(declare-fun FStar.Calc.calc_proof@x2 (Term) Term)
(declare-fun FStar.Calc.calc_proof@x3 (Term) Term)
(declare-fun FStar.Calc.calc_proof@tok () Term)
(declare-fun FStar.Calc.CalcRefl (Term Term) Term)
(declare-fun FStar.Calc.CalcRefl_t (Term) Term)
(declare-fun FStar.Calc.CalcRefl_x (Term) Term)
(declare-fun FStar.Calc.CalcRefl@tok () Term)
(declare-fun FStar.Calc.CalcStep (Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Calc.CalcStep_t (Term) Term)
(declare-fun FStar.Calc.CalcStep_rs (Term) Term)
(declare-fun FStar.Calc.CalcStep_p (Term) Term)
(declare-fun FStar.Calc.CalcStep_x (Term) Term)
(declare-fun FStar.Calc.CalcStep_y (Term) Term)
(declare-fun FStar.Calc.CalcStep_z (Term) Term)
(declare-fun FStar.Calc.CalcStep__5 (Term) Term)
(declare-fun FStar.Calc.CalcStep__6 (Term) Term)
(declare-fun FStar.Calc.CalcStep@tok () Term)
(declare-fun Tm_arrow_e85dbe2d578edd2a2a61107bad64844c () Term)
(declare-fun Tm_arrow_b340ecb8383074bc46375a46145a7603 () Term)
(define-fun is-FStar.Calc.calc_proof ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 101) (exists ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= __@x0 (FStar.Calc.calc_proof @x0 @x1 @x2 @x3)) :qid is-FStar.Calc.calc_proof))))
(define-fun is-FStar.Calc.CalcRefl ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 108) (= __@x0 (FStar.Calc.CalcRefl (FStar.Calc.CalcRefl_t __@x0) (FStar.Calc.CalcRefl_x __@x0)))))
(define-fun is-FStar.Calc.CalcStep ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 113) (= __@x0 (FStar.Calc.CalcStep (FStar.Calc.CalcStep_t __@x0) (FStar.Calc.CalcStep_rs __@x0) (FStar.Calc.CalcStep_p __@x0) (FStar.Calc.CalcStep_x __@x0) (FStar.Calc.CalcStep_y __@x0) (FStar.Calc.CalcStep_z __@x0) (FStar.Calc.CalcStep__5 __@x0) (FStar.Calc.CalcStep__6 __@x0)))))
(declare-fun FStar.Calc.uu___is_CalcRefl (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_4137fd252e343de6e82922409404f02e () Term)
(declare-fun FStar.Calc.uu___is_CalcRefl@tok () Term)
(declare-fun Tm_refine_3b368c069648e8b27d83e18e9c122613 (Term Term Term Term) Term)
(declare-fun FStar.Calc.__proj__CalcRefl__item__x (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_2cd208e10700fce02c13ab45b8ec22d1 () Term)
(declare-fun FStar.Calc.__proj__CalcRefl__item__x@tok () Term)
(declare-fun FStar.Calc.uu___is_CalcStep (Term Term Term Term Term) Term)
(declare-fun FStar.Calc.uu___is_CalcStep@tok () Term)
(declare-fun Tm_refine_4d2c352ec2a69453fd30fa2907779c8a (Term Term Term Term) Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__rs (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_4cf1c767ce599aeb9039370e57e3788e () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__rs@tok () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__p (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_b1e217e71bf6b687ca1506b780d4a748 () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__p@tok () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__x (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_6422593e91fed2dd4662ca0ddd49333f () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__x@tok () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__y (Term Term Term Term Term) Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__y@tok () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__z (Term Term Term Term Term) Term)
(declare-fun FStar.Calc.__proj__CalcStep__item__z@tok () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item___5 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_d7049dfa77ce1d01d6c309530bcb86bd () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item___5@tok () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item___6 (Term Term Term Term Term) Term)
(assert (! (Valid (ApplyTT __uu__PartialApp FStar.Calc.__proj__CalcStep__item__p@tok)) :named kick_partial_app_7e770844f3d19b99fd09de14d699dd47))
(declare-fun Tm_arrow_fc94a5c321c3df1500a9e8101a4f81de () Term)
(declare-fun FStar.Calc.__proj__CalcStep__item___6@tok () Term)
(declare-fun FStar.Calc.calc_pack (Term Term Term) Term)
(declare-fun FStar.Calc.calc_pack@x0 (Term) Term)
(declare-fun FStar.Calc.calc_pack@x1 (Term) Term)
(declare-fun FStar.Calc.calc_pack@x2 (Term) Term)
(declare-fun FStar.Calc.calc_pack@tok () Term)
(declare-fun FStar.Calc.Mkcalc_pack (Term Term Term Term Term) Term)
(declare-fun FStar.Calc.Mkcalc_pack_t (Term) Term)
(declare-fun FStar.Calc.Mkcalc_pack_x (Term) Term)
(declare-fun FStar.Calc.Mkcalc_pack_y (Term) Term)
(declare-fun FStar.Calc.Mkcalc_pack_rels (Term) Term)
(declare-fun FStar.Calc.Mkcalc_pack_proof (Term) Term)
(declare-fun FStar.Calc.Mkcalc_pack@tok () Term)
(declare-fun Tm_arrow_08dbb649c69d20f068597726626c6790 () Term)
(define-fun is-FStar.Calc.calc_pack ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 153) (exists ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= __@x0 (FStar.Calc.calc_pack @x0 @x1 @x2)) :qid is-FStar.Calc.calc_pack))))
(define-fun is-FStar.Calc.Mkcalc_pack ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 160) (= __@x0 (FStar.Calc.Mkcalc_pack (FStar.Calc.Mkcalc_pack_t __@x0) (FStar.Calc.Mkcalc_pack_x __@x0) (FStar.Calc.Mkcalc_pack_y __@x0) (FStar.Calc.Mkcalc_pack_rels __@x0) (FStar.Calc.Mkcalc_pack_proof __@x0)))))
(declare-fun FStar.Calc.__proj__Mkcalc_pack__item__rels (Term Term Term Term) Term)
(declare-fun Tm_arrow_5b177b9d78b0cb599bb4b2c2ce18d878 () Term)
(declare-fun FStar.Calc.__proj__Mkcalc_pack__item__rels@tok () Term)
(declare-fun FStar.Calc.__proj__Mkcalc_pack__item__proof (Term Term Term Term) Term)
(declare-fun Tm_arrow_b6aae2dbdc7a690f7b3896c459e1cdc8 () Term)
(declare-fun FStar.Calc.__proj__Mkcalc_pack__item__proof@tok () Term)
(declare-fun FStar.Calc.pk_rels (Term Term Term Term) Term)
(declare-fun FStar.Calc.pk_rels@tok () Term)
(declare-fun FStar.Calc.calc_chain_related.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun FStar.Calc.calc_chain_related.fuel_instrumented_token () Term)
(declare-fun FStar.Calc.calc_chain_related (Term Term Term Term) Term)
(declare-fun FStar.Calc.calc_chain_related@tok () Term)
(declare-fun Tm_abs_7586508c09a323b289f361c85bf3dee3 (Fuel Term Term Term Term) Term)
(declare-fun Tm_arrow_10ae2c328e1918eb5ddde4274ac6d32a () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (FStar.Calc.calc_chain_related.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (FStar.Calc.calc_chain_related.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((FStar.Calc.calc_chain_related.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_FStar.Calc.calc_chain_related.fuel_instrumented)) :named fuel_irrelevance_FStar.Calc.calc_chain_related.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (FStar.Calc.calc_chain_related @x0 @x1 @x2 @x3) (FStar.Calc.calc_chain_related.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((FStar.Calc.calc_chain_related @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_FStar.Calc.calc_chain_related.fuel_instrumented)) :named fuel_correspondence_FStar.Calc.calc_chain_related.fuel_instrumented))
(declare-fun FStar.Calc.calc_chain_compatible (Term Term Term) Term)
(declare-fun Tm_arrow_5d25af94b872513cc464e94bbc6a8348 () Term)
(declare-fun FStar.Calc.calc_chain_compatible@tok () Term)
(declare-fun FStar.Calc.elim_calc_proof (Term Term Term Term Term) Term)
(declare-fun FStar.Calc.elim_calc_proof@tok () Term)
(declare-fun FStar.Calc._calc_init (Term Term) Term)
(declare-fun FStar.Calc._calc_init@tok () Term)
(declare-fun FStar.Calc.calc_init (Term Term) Term)
(declare-fun Tm_arrow_d5eb09a3cb5614e873db952aa4f080f8 () Term)
(declare-fun FStar.Calc.calc_init@tok () Term)
(declare-fun Tm_ghost_arrow_43913ea96b2971b9b206329e4c86f5cd (Term Term Term Term) Term)
(declare-fun Tm_arrow_924fe8a596e8d1052263cdb50ea0b3f9 (Term Term Term) Term)
(declare-fun FStar.Calc._calc_step (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_ghost_arrow_4628eb98823ce323ac10495fcebb4286 () Term)
(declare-fun FStar.Calc._calc_step@tok () Term)
(declare-fun Tm_ghost_arrow_7b3b97c1ad4e8c34eea5d3c0f4f9fe1a (Term Term Term) Term)
(declare-fun FStar.Calc.calc_step (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_ghost_arrow_9937c4de8dd72b95461da0c35d6c3aef () Term)
(declare-fun FStar.Calc.calc_step@tok () Term)
(declare-fun FStar.Calc.calc_finish (Term Term Term Term Term) Term)
(declare-fun FStar.Calc.calc_finish@tok () Term)
(declare-fun FStar.Calc.calc_push_impl (Term Term Term) Term)
(declare-fun Tm_arrow_b85ee08d976be930c8c2cdaec964efe2 () Term)
(declare-fun FStar.Calc.calc_push_impl@tok () Term)
(push)
(declare-fun Common.AppendOptimizedList.chunk (Term) Term)
(declare-fun Common.AppendOptimizedList.chunk@x0 (Term) Term)
(declare-fun Common.AppendOptimizedList.chunk@tok () Term)
(declare-fun Common.AppendOptimizedList.List (Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.List_x (Term) Term)
(declare-fun Common.AppendOptimizedList.List__1 (Term) Term)
(declare-fun Common.AppendOptimizedList.List__2 (Term) Term)
(declare-fun Common.AppendOptimizedList.List@tok () Term)
(declare-fun Common.AppendOptimizedList.Repeat (Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.Repeat_x (Term) Term)
(declare-fun Common.AppendOptimizedList.Repeat__1 (Term) Term)
(declare-fun Common.AppendOptimizedList.Repeat__2 (Term) Term)
(declare-fun Common.AppendOptimizedList.Repeat@tok () Term)
(declare-fun Common.AppendOptimizedList.Append (Term Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.Append_x (Term) Term)
(declare-fun Common.AppendOptimizedList.Append__1 (Term) Term)
(declare-fun Common.AppendOptimizedList.Append__2 (Term) Term)
(declare-fun Common.AppendOptimizedList.Append__3 (Term) Term)
(declare-fun Common.AppendOptimizedList.Append@tok () Term)
(declare-fun Common.AppendOptimizedList.Zip (Term Term Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.Zip_x (Term) Term)
(declare-fun Common.AppendOptimizedList.Zip_y (Term) Term)
(declare-fun Common.AppendOptimizedList.Zip__2 (Term) Term)
(declare-fun Common.AppendOptimizedList.Zip__3 (Term) Term)
(declare-fun Common.AppendOptimizedList.Zip__4 (Term) Term)
(declare-fun Common.AppendOptimizedList.Zip@tok () Term)
(declare-fun Common.AppendOptimizedList.UnzipFst (Term Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.UnzipFst_x (Term) Term)
(declare-fun Common.AppendOptimizedList.UnzipFst_y (Term) Term)
(declare-fun Common.AppendOptimizedList.UnzipFst__2 (Term) Term)
(declare-fun Common.AppendOptimizedList.UnzipFst__3 (Term) Term)
(declare-fun Common.AppendOptimizedList.UnzipFst@tok () Term)
(declare-fun Common.AppendOptimizedList.UnzipSnd (Term Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.UnzipSnd_x (Term) Term)
(declare-fun Common.AppendOptimizedList.UnzipSnd_y (Term) Term)
(declare-fun Common.AppendOptimizedList.UnzipSnd__2 (Term) Term)
(declare-fun Common.AppendOptimizedList.UnzipSnd__3 (Term) Term)
(declare-fun Common.AppendOptimizedList.UnzipSnd@tok () Term)
(declare-fun Tm_arrow_af8f50622ba6999c41b1e2903a8660db () Term)
(declare-fun Tm_arrow_069977a4514e0d54b49cfb43f3344753 () Term)
(declare-fun Tm_arrow_0ad4524b4876e2c66b5dc88c48403d6c () Term)
(declare-fun Tm_arrow_8e8dad1585930f77fa868f42f6337282 () Term)
(declare-fun Tm_arrow_9245b9d2ff340923c2ca45b0d9f3a756 () Term)
(declare-fun Tm_arrow_d834f826affeca417d1bf1e7da9f058b () Term)
(define-fun is-Common.AppendOptimizedList.chunk ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 104) (exists ((@x0 Term)) (! (= __@x0 (Common.AppendOptimizedList.chunk @x0)) :qid is-Common.AppendOptimizedList.chunk))))
(define-fun is-Common.AppendOptimizedList.List ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 111) (= __@x0 (Common.AppendOptimizedList.List (Common.AppendOptimizedList.List_x __@x0) (Common.AppendOptimizedList.List__1 __@x0) (Common.AppendOptimizedList.List__2 __@x0)))))
(define-fun is-Common.AppendOptimizedList.Repeat ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 116) (= __@x0 (Common.AppendOptimizedList.Repeat (Common.AppendOptimizedList.Repeat_x __@x0) (Common.AppendOptimizedList.Repeat__1 __@x0) (Common.AppendOptimizedList.Repeat__2 __@x0)))))
(define-fun is-Common.AppendOptimizedList.Append ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 121) (= __@x0 (Common.AppendOptimizedList.Append (Common.AppendOptimizedList.Append_x __@x0) (Common.AppendOptimizedList.Append__1 __@x0) (Common.AppendOptimizedList.Append__2 __@x0) (Common.AppendOptimizedList.Append__3 __@x0)))))
(define-fun is-Common.AppendOptimizedList.Zip ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 126) (= __@x0 (Common.AppendOptimizedList.Zip (Common.AppendOptimizedList.Zip_x __@x0) (Common.AppendOptimizedList.Zip_y __@x0) (Common.AppendOptimizedList.Zip__2 __@x0) (Common.AppendOptimizedList.Zip__3 __@x0) (Common.AppendOptimizedList.Zip__4 __@x0)))))
(define-fun is-Common.AppendOptimizedList.UnzipFst ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 131) (= __@x0 (Common.AppendOptimizedList.UnzipFst (Common.AppendOptimizedList.UnzipFst_x __@x0) (Common.AppendOptimizedList.UnzipFst_y __@x0) (Common.AppendOptimizedList.UnzipFst__2 __@x0) (Common.AppendOptimizedList.UnzipFst__3 __@x0)))))
(define-fun is-Common.AppendOptimizedList.UnzipSnd ((__@x0 Term)) Bool (and (= (Term_constr_id __@x0) 136) (= __@x0 (Common.AppendOptimizedList.UnzipSnd (Common.AppendOptimizedList.UnzipSnd_x __@x0) (Common.AppendOptimizedList.UnzipSnd_y __@x0) (Common.AppendOptimizedList.UnzipSnd__2 __@x0) (Common.AppendOptimizedList.UnzipSnd__3 __@x0)))))
(declare-fun Common.AppendOptimizedList.uu___is_List (Term Term) Term)
(declare-fun Tm_arrow_72c92ce4528f3982b6f0fa5dda5f0b61 () Term)
(declare-fun Common.AppendOptimizedList.uu___is_List@tok () Term)
(declare-fun Tm_refine_6779a7f98de5f379ee02ae31a53da1fa (Term) Term)
(declare-fun Common.AppendOptimizedList.__proj__List__item__x (Term Term) Term)
(declare-fun Tm_arrow_386058e4fdfbabaf6e0ca08e5922ed63 () Term)
(declare-fun Common.AppendOptimizedList.__proj__List__item__x@tok () Term)
(declare-fun Common.AppendOptimizedList.__proj__List__item___1 (Term Term) Term)
(declare-fun Tm_arrow_b8282190fe07b8c030b0f54b6ec41dce () Term)
(declare-fun Common.AppendOptimizedList.__proj__List__item___1@tok () Term)
(declare-fun Common.AppendOptimizedList.__proj__List__item___2 (Term Term) Term)
(declare-fun Tm_arrow_e0ee1816c8501b41536503d304c60afd () Term)
(declare-fun Common.AppendOptimizedList.__proj__List__item___2@tok () Term)
(declare-fun Common.AppendOptimizedList.uu___is_Repeat (Term Term) Term)
(declare-fun Common.AppendOptimizedList.uu___is_Repeat@tok () Term)
(declare-fun Tm_refine_acfc75c2dff21ef5d6ab665594e89704 (Term) Term)
(declare-fun Common.AppendOptimizedList.__proj__Repeat__item__x (Term Term) Term)
(declare-fun Tm_arrow_656b56a03c1c9c6174e87fedc65a9035 () Term)
(declare-fun Common.AppendOptimizedList.__proj__Repeat__item__x@tok () Term)
(declare-fun Common.AppendOptimizedList.__proj__Repeat__item___1 (Term Term) Term)
(declare-fun Tm_arrow_c4a38dc2074f9f5756d4fe61615026d9 () Term)
(declare-fun Common.AppendOptimizedList.__proj__Repeat__item___1@tok () Term)
(declare-fun Common.AppendOptimizedList.__proj__Repeat__item___2 (Term Term) Term)
(declare-fun Tm_arrow_e2931a488f91636ec13c795ecc0ae02e () Term)
(declare-fun Common.AppendOptimizedList.__proj__Repeat__item___2@tok () Term)
(declare-fun Common.AppendOptimizedList.uu___is_Append (Term Term) Term)
(declare-fun Common.AppendOptimizedList.uu___is_Append@tok () Term)
(declare-fun Tm_refine_1bee364ac62dd145f055c75bd5d7a19b (Term) Term)
(declare-fun Common.AppendOptimizedList.__proj__Append__item__x (Term Term) Term)
(declare-fun Tm_arrow_5141c8037a941cf3f6b27e5614b8b2e5 () Term)
(declare-fun Common.AppendOptimizedList.__proj__Append__item__x@tok () Term)
(declare-fun Common.AppendOptimizedList.__proj__Append__item___1 (Term Term) Term)
(declare-fun Tm_arrow_48b22acd9a0afe71c7c312fca758da00 () Term)
(declare-fun Common.AppendOptimizedList.__proj__Append__item___1@tok () Term)
(declare-fun Common.AppendOptimizedList.__proj__Append__item___2 (Term Term) Term)
(declare-fun Tm_arrow_28f21c0f3cfe7b82d304bcfb503a9737 () Term)
(declare-fun Common.AppendOptimizedList.__proj__Append__item___2@tok () Term)
(declare-fun Common.AppendOptimizedList.__proj__Append__item___3 (Term Term) Term)
(declare-fun Common.AppendOptimizedList.__proj__Append__item___3@tok () Term)
(declare-fun Common.AppendOptimizedList.uu___is_Zip (Term Term) Term)
(declare-fun Common.AppendOptimizedList.uu___is_Zip@tok () Term)
(declare-fun Tm_refine_7fc83b769d3feeda2074c94d2902fe73 (Term) Term)
(declare-fun Common.AppendOptimizedList.__proj__Zip__item__x (Term Term) Term)
(declare-fun Tm_arrow_4cdf276eec4abb0134c4555db32e9083 () Term)
(declare-fun Common.AppendOptimizedList.__proj__Zip__item__x@tok () Term)
(declare-fun Common.AppendOptimizedList.__proj__Zip__item__y (Term Term) Term)
(declare-fun Common.AppendOptimizedList.__proj__Zip__item__y@tok () Term)
(declare-fun Common.AppendOptimizedList.__proj__Zip__item___2 (Term Term) Term)
(declare-fun Tm_arrow_f2e35d33e1ea94d92971fdbed46d60ec () Term)
(declare-fun Common.AppendOptimizedList.__proj__Zip__item___2@tok () Term)
(declare-fun Common.AppendOptimizedList.__proj__Zip__item___3 (Term Term) Term)
(declare-fun Tm_arrow_b93e61f99762a88737cff91bf2d00e6a () Term)
(declare-fun Common.AppendOptimizedList.__proj__Zip__item___3@tok () Term)
(declare-fun Common.AppendOptimizedList.__proj__Zip__item___4 (Term Term) Term)
(declare-fun Tm_arrow_3cea7029cf1a781e30e64dda60b19238 () Term)
(declare-fun Common.AppendOptimizedList.__proj__Zip__item___4@tok () Term)
(declare-fun Common.AppendOptimizedList.uu___is_UnzipFst (Term Term) Term)
(declare-fun Common.AppendOptimizedList.uu___is_UnzipFst@tok () Term)
(declare-fun Tm_refine_afa108e9f2996936f9c2f0099dad7866 (Term) Term)
(declare-fun Common.AppendOptimizedList.__proj__UnzipFst__item__x (Term Term) Term)
(declare-fun Tm_arrow_c3e0e67f8a5236223ec68fcd92f73cc1 () Term)
(declare-fun Common.AppendOptimizedList.__proj__UnzipFst__item__x@tok () Term)
(declare-fun Common.AppendOptimizedList.__proj__UnzipFst__item__y (Term Term) Term)
(declare-fun Common.AppendOptimizedList.__proj__UnzipFst__item__y@tok () Term)
(declare-fun Common.AppendOptimizedList.__proj__UnzipFst__item___2 (Term Term) Term)
(declare-fun Tm_arrow_3279d98baa299310ef8ad303ed2b833a () Term)
(declare-fun Common.AppendOptimizedList.__proj__UnzipFst__item___2@tok () Term)
(declare-fun Common.AppendOptimizedList.__proj__UnzipFst__item___3 (Term Term) Term)
(declare-fun Tm_arrow_2b2b74901f79fdf2078034b38ed6ede0 () Term)
(declare-fun Common.AppendOptimizedList.__proj__UnzipFst__item___3@tok () Term)
(declare-fun Common.AppendOptimizedList.uu___is_UnzipSnd (Term Term) Term)
(declare-fun Common.AppendOptimizedList.uu___is_UnzipSnd@tok () Term)
(declare-fun Tm_refine_702180ce4d5d3cbddd2228cb33c447f9 (Term) Term)
(declare-fun Common.AppendOptimizedList.__proj__UnzipSnd__item__x (Term Term) Term)
(declare-fun Tm_arrow_1b48e5e36bf51c036a1cdf09f7c1a9bc () Term)
(declare-fun Common.AppendOptimizedList.__proj__UnzipSnd__item__x@tok () Term)
(declare-fun Common.AppendOptimizedList.__proj__UnzipSnd__item__y (Term Term) Term)
(declare-fun Common.AppendOptimizedList.__proj__UnzipSnd__item__y@tok () Term)
(declare-fun Common.AppendOptimizedList.__proj__UnzipSnd__item___2 (Term Term) Term)
(declare-fun Tm_arrow_1993bb6be78492d5be5a24027758d96f () Term)
(declare-fun Common.AppendOptimizedList.__proj__UnzipSnd__item___2@tok () Term)
(declare-fun Common.AppendOptimizedList.__proj__UnzipSnd__item___3 (Term Term) Term)
(declare-fun Tm_arrow_eb8ee9c145ff1df886b1595734098c10 () Term)
(declare-fun Common.AppendOptimizedList.__proj__UnzipSnd__item___3@tok () Term)
(declare-fun Common.AppendOptimizedList.weak_l_zip.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.weak_l_zip.fuel_instrumented_token () Term)
(declare-fun Common.AppendOptimizedList.weak_l_zip (Term Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.weak_l_zip@tok () Term)
(declare-fun Tm_arrow_40431bad5dd3c208e2b9ee83c899b546 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (Common.AppendOptimizedList.weak_l_zip.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (Common.AppendOptimizedList.weak_l_zip.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((Common.AppendOptimizedList.weak_l_zip.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_Common.AppendOptimizedList.weak_l_zip.fuel_instrumented)) :named fuel_irrelevance_Common.AppendOptimizedList.weak_l_zip.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (Common.AppendOptimizedList.weak_l_zip @x0 @x1 @x2 @x3) (Common.AppendOptimizedList.weak_l_zip.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((Common.AppendOptimizedList.weak_l_zip @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_Common.AppendOptimizedList.weak_l_zip.fuel_instrumented)) :named fuel_correspondence_Common.AppendOptimizedList.weak_l_zip.fuel_instrumented))
(declare-fun Common.AppendOptimizedList.l_repeat.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.l_repeat.fuel_instrumented_token () Term)
(declare-fun Common.AppendOptimizedList.l_repeat (Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.l_repeat@tok () Term)
(declare-fun Tm_arrow_93ec156a0e62f8f75d11be5375c8f240 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (Common.AppendOptimizedList.l_repeat.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (Common.AppendOptimizedList.l_repeat.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((Common.AppendOptimizedList.l_repeat.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_Common.AppendOptimizedList.l_repeat.fuel_instrumented)) :named fuel_irrelevance_Common.AppendOptimizedList.l_repeat.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (Common.AppendOptimizedList.l_repeat @x0 @x1 @x2) (Common.AppendOptimizedList.l_repeat.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((Common.AppendOptimizedList.l_repeat @x0 @x1 @x2)) :qid @fuel_correspondence_Common.AppendOptimizedList.l_repeat.fuel_instrumented)) :named fuel_correspondence_Common.AppendOptimizedList.l_repeat.fuel_instrumented))
(declare-fun Common.AppendOptimizedList.chunk_as_list.fuel_instrumented (Fuel Term Term) Term)
(declare-fun Common.AppendOptimizedList.chunk_as_list.fuel_instrumented_token () Term)
(declare-fun Common.AppendOptimizedList.chunk_as_list (Term Term) Term)
(declare-fun Common.AppendOptimizedList.chunk_as_list@tok () Term)
(declare-fun Tm_ghost_arrow_c1bb513bdf9edf9cae6777b4a59e90ba () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (Common.AppendOptimizedList.chunk_as_list.fuel_instrumented (SFuel @u0) @x1 @x2) (Common.AppendOptimizedList.chunk_as_list.fuel_instrumented ZFuel @x1 @x2)) :pattern ((Common.AppendOptimizedList.chunk_as_list.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_Common.AppendOptimizedList.chunk_as_list.fuel_instrumented)) :named fuel_irrelevance_Common.AppendOptimizedList.chunk_as_list.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (Common.AppendOptimizedList.chunk_as_list @x0 @x1) (Common.AppendOptimizedList.chunk_as_list.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((Common.AppendOptimizedList.chunk_as_list @x0 @x1)) :qid @fuel_correspondence_Common.AppendOptimizedList.chunk_as_list.fuel_instrumented)) :named fuel_correspondence_Common.AppendOptimizedList.chunk_as_list.fuel_instrumented))
(declare-fun Common.AppendOptimizedList.actual_length_of_chunk (Term Term) Term)
(declare-fun Tm_ghost_arrow_478bab4c9ca0746217b6a7b72a042b07 () Term)
(declare-fun Common.AppendOptimizedList.actual_length_of_chunk@tok () Term)
(declare-fun Common.AppendOptimizedList.fast_length_of_chunk (Term Term) Term)
(declare-fun Tm_arrow_84aa10938d33fe6ac67761fe9ec7003c () Term)
(declare-fun Common.AppendOptimizedList.fast_length_of_chunk@tok () Term)
(declare-fun Common.AppendOptimizedList.valid_fast_length.fuel_instrumented (Fuel Term Term) Term)
(declare-fun Common.AppendOptimizedList.valid_fast_length.fuel_instrumented_token () Term)
(declare-fun Common.AppendOptimizedList.valid_fast_length (Term Term) Term)
(declare-fun Common.AppendOptimizedList.valid_fast_length@tok () Term)
(declare-fun Tm_arrow_613cd7d52556b73dc0b59fcf3672a281 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term)) (! (= (Common.AppendOptimizedList.valid_fast_length.fuel_instrumented (SFuel @u0) @x1 @x2) (Common.AppendOptimizedList.valid_fast_length.fuel_instrumented ZFuel @x1 @x2)) :pattern ((Common.AppendOptimizedList.valid_fast_length.fuel_instrumented (SFuel @u0) @x1 @x2)) :qid @fuel_irrelevance_Common.AppendOptimizedList.valid_fast_length.fuel_instrumented)) :named fuel_irrelevance_Common.AppendOptimizedList.valid_fast_length.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term)) (! (= (Common.AppendOptimizedList.valid_fast_length @x0 @x1) (Common.AppendOptimizedList.valid_fast_length.fuel_instrumented MaxFuel @x0 @x1)) :pattern ((Common.AppendOptimizedList.valid_fast_length @x0 @x1)) :qid @fuel_correspondence_Common.AppendOptimizedList.valid_fast_length.fuel_instrumented)) :named fuel_correspondence_Common.AppendOptimizedList.valid_fast_length.fuel_instrumented))
(declare-fun Common.AppendOptimizedList.t (Term) Term)
(declare-fun Common.AppendOptimizedList.t@tok () Term)
(declare-fun Tm_refine_58111d7d7d8e4c575d2b9b4c19c03a1c (Term) Term)
(declare-fun Common.AppendOptimizedList.of_list_direct (Term Term) Term)
(declare-fun Tm_refine_e6811c6e5b08ddecbe70f06c9f667e97 (Term Term) Term)
(declare-fun Tm_arrow_24a3291175a875b0c479372d8e0ea672 () Term)
(declare-fun Common.AppendOptimizedList.of_list_direct@tok () Term)
(declare-fun Common.AppendOptimizedList.of_list_balancing.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.of_list_balancing.fuel_instrumented_token () Term)
(declare-fun Common.AppendOptimizedList.of_list_balancing (Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.of_list_balancing@tok () Term)
(declare-fun Tm_arrow_ac5027ed7d3e4e8c251c8cb6e261ea6b () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (Common.AppendOptimizedList.of_list_balancing.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (Common.AppendOptimizedList.of_list_balancing.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((Common.AppendOptimizedList.of_list_balancing.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_Common.AppendOptimizedList.of_list_balancing.fuel_instrumented)) :named fuel_irrelevance_Common.AppendOptimizedList.of_list_balancing.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (Common.AppendOptimizedList.of_list_balancing @x0 @x1 @x2) (Common.AppendOptimizedList.of_list_balancing.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((Common.AppendOptimizedList.of_list_balancing @x0 @x1 @x2)) :qid @fuel_correspondence_Common.AppendOptimizedList.of_list_balancing.fuel_instrumented)) :named fuel_correspondence_Common.AppendOptimizedList.of_list_balancing.fuel_instrumented))
(declare-fun Common.AppendOptimizedList.of_list (Term Term) Term)
(declare-fun Tm_arrow_a249a722a234a49f8a1a13f8eb8e2cbc () Term)
(declare-fun Common.AppendOptimizedList.of_list@tok () Term)
(declare-fun Common.AppendOptimizedList.rl_t (Term) Term)
(declare-fun Common.AppendOptimizedList.rl_t@tok () Term)
(declare-fun Tm_refine_770aa551c1985581cf5d9ce92df5e8e5 (Term) Term)
(declare-fun Common.AppendOptimizedList.coerce (Term Term Term) Term)
(declare-fun Tm_arrow_0ffb5565f7402acde491c0be60507d84 () Term)
(declare-fun Common.AppendOptimizedList.coerce@tok () Term)
(declare-fun Common.AppendOptimizedList.rl_to_list (Term Term) Term)
(declare-fun Tm_arrow_4b0a7a2a2e888c9891053514fd7efa43 () Term)
(declare-fun Common.AppendOptimizedList.rl_to_list@tok () Term)
(declare-fun Common.AppendOptimizedList.l_unzip_tail_call_optimized.fuel_instrumented (Fuel Term Term Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.l_unzip_tail_call_optimized.fuel_instrumented_token () Term)
(declare-fun Common.AppendOptimizedList.l_unzip_tail_call_optimized (Term Term Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.l_unzip_tail_call_optimized@tok () Term)
(declare-fun Tm_arrow_3f38aea5ef4c8bd55e83f7fce14658a5 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term)) (! (= (Common.AppendOptimizedList.l_unzip_tail_call_optimized.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5) (Common.AppendOptimizedList.l_unzip_tail_call_optimized.fuel_instrumented ZFuel @x1 @x2 @x3 @x4 @x5)) :pattern ((Common.AppendOptimizedList.l_unzip_tail_call_optimized.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4 @x5)) :qid @fuel_irrelevance_Common.AppendOptimizedList.l_unzip_tail_call_optimized.fuel_instrumented)) :named fuel_irrelevance_Common.AppendOptimizedList.l_unzip_tail_call_optimized.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (Common.AppendOptimizedList.l_unzip_tail_call_optimized @x0 @x1 @x2 @x3 @x4) (Common.AppendOptimizedList.l_unzip_tail_call_optimized.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3 @x4)) :pattern ((Common.AppendOptimizedList.l_unzip_tail_call_optimized @x0 @x1 @x2 @x3 @x4)) :qid @fuel_correspondence_Common.AppendOptimizedList.l_unzip_tail_call_optimized.fuel_instrumented)) :named fuel_correspondence_Common.AppendOptimizedList.l_unzip_tail_call_optimized.fuel_instrumented))
(declare-fun Common.AppendOptimizedList.lemma_unzip_tco_is_list_tot_unzip_rev (Term Term Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.lemma_unzip_tco_is_list_tot_unzip_rev@tok () Term)
(declare-fun Common.AppendOptimizedList.l_unzip (Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.l_unzip@tok () Term)
(declare-fun Common.AppendOptimizedList.lemma_unzip_is_list_tot_unzip (Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.lemma_unzip_is_list_tot_unzip@tok () Term)
(declare-fun Common.AppendOptimizedList.add_chunk_to_rl.fuel_instrumented (Fuel Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.add_chunk_to_rl.fuel_instrumented_token () Term)
(declare-fun Common.AppendOptimizedList.add_chunk_to_rl (Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.add_chunk_to_rl@tok () Term)
(declare-fun Tm_arrow_ed66c5e011736523f29256b10287682d () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (Common.AppendOptimizedList.add_chunk_to_rl.fuel_instrumented (SFuel @u0) @x1 @x2 @x3) (Common.AppendOptimizedList.add_chunk_to_rl.fuel_instrumented ZFuel @x1 @x2 @x3)) :pattern ((Common.AppendOptimizedList.add_chunk_to_rl.fuel_instrumented (SFuel @u0) @x1 @x2 @x3)) :qid @fuel_irrelevance_Common.AppendOptimizedList.add_chunk_to_rl.fuel_instrumented)) :named fuel_irrelevance_Common.AppendOptimizedList.add_chunk_to_rl.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term)) (! (= (Common.AppendOptimizedList.add_chunk_to_rl @x0 @x1 @x2) (Common.AppendOptimizedList.add_chunk_to_rl.fuel_instrumented MaxFuel @x0 @x1 @x2)) :pattern ((Common.AppendOptimizedList.add_chunk_to_rl @x0 @x1 @x2)) :qid @fuel_correspondence_Common.AppendOptimizedList.add_chunk_to_rl.fuel_instrumented)) :named fuel_correspondence_Common.AppendOptimizedList.add_chunk_to_rl.fuel_instrumented))
(declare-fun Common.AppendOptimizedList.to_list (Term Term) Term)
(declare-fun Tm_arrow_57d3d1251d160cf007bcc7469131fdcb () Term)
(declare-fun Common.AppendOptimizedList.to_list@tok () Term)
(declare-fun Common.AppendOptimizedList.lemma_flatten_append (Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.lemma_flatten_append@tok () Term)
(declare-fun Common.AppendOptimizedList.lemma_flatten_rev_cons (Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.lemma_flatten_rev_cons@tok () Term)
(declare-fun Common.AppendOptimizedList.lemma_add_chunk_to_rl (Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.lemma_add_chunk_to_rl@tok () Term)
(declare-fun Common.AppendOptimizedList.lemma_to_list_is_chunk_as_list (Term Term) Term)
(declare-fun Common.AppendOptimizedList.lemma_to_list_is_chunk_as_list@tok () Term)
(declare-fun Common.AppendOptimizedList.auto_lemma_to_of_list (Term Term) Term)
(declare-fun Common.AppendOptimizedList.auto_lemma_to_of_list@tok () Term)
(declare-fun Common.AppendOptimizedList.length (Term Term) Term)
(declare-fun Tm_refine_a416aae0e6983559b2a42c94cc62d233 (Term Term) Term)
(declare-fun Tm_arrow_4d6ef7daf0d9322af735423a3cf10292 () Term)
(declare-fun Common.AppendOptimizedList.length@tok () Term)
(declare-fun Common.AppendOptimizedList.append_unconditionally (Term Term Term) Term)
(declare-fun Tm_refine_eb5e47b10935e2edc621fd7da26f22ff (Term Term Term) Term)
(declare-fun Tm_arrow_97c6b5c5b3bac53d00a08691ce33153a () Term)
(declare-fun Common.AppendOptimizedList.append_unconditionally@tok () Term)
(declare-fun Common.AppendOptimizedList.append (Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.append@tok () Term)
(declare-fun Common.AppendOptimizedList.cons (Term Term Term) Term)
(declare-fun Tm_arrow_9dd45613be60c1e3117a134bc9e56232 () Term)
(declare-fun Common.AppendOptimizedList.cons@tok () Term)
(declare-fun Common.AppendOptimizedList.snoc (Term Term) Term)
(declare-fun Tm_arrow_d0f0705f1bb608b2cc3646054e05ebaf () Term)
(declare-fun Common.AppendOptimizedList.snoc@tok () Term)
(declare-fun Common.AppendOptimizedList.empty (Term) Term)
(declare-fun Tm_arrow_1281f8f1f7978519089e6d3dad1dde9f () Term)
(declare-fun Common.AppendOptimizedList.empty@tok () Term)
(declare-fun Common.AppendOptimizedList.repeat (Term Term Term) Term)
(declare-fun Tm_refine_3664c41358ace682237cfd3b71b1d894 (Term Term) Term)
(declare-fun Tm_arrow_ab2f891bb4381313b387f622e1f7431e () Term)
(declare-fun Common.AppendOptimizedList.repeat@tok () Term)
(declare-fun Common.AppendOptimizedList.l_zip.fuel_instrumented (Fuel Term Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.l_zip.fuel_instrumented_token () Term)
(declare-fun Common.AppendOptimizedList.l_zip (Term Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.l_zip@tok () Term)
(declare-fun Tm_refine_e32b08f9988ddf2e0d3c86952719fcff (Term Term Term Term) Term)
(declare-fun Tm_arrow_76e7278e2ca5c9a5b959fb3199ff25b5 () Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term)) (! (= (Common.AppendOptimizedList.l_zip.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4) (Common.AppendOptimizedList.l_zip.fuel_instrumented ZFuel @x1 @x2 @x3 @x4)) :pattern ((Common.AppendOptimizedList.l_zip.fuel_instrumented (SFuel @u0) @x1 @x2 @x3 @x4)) :qid @fuel_irrelevance_Common.AppendOptimizedList.l_zip.fuel_instrumented)) :named fuel_irrelevance_Common.AppendOptimizedList.l_zip.fuel_instrumented))
(assert (! (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term)) (! (= (Common.AppendOptimizedList.l_zip @x0 @x1 @x2 @x3) (Common.AppendOptimizedList.l_zip.fuel_instrumented MaxFuel @x0 @x1 @x2 @x3)) :pattern ((Common.AppendOptimizedList.l_zip @x0 @x1 @x2 @x3)) :qid @fuel_correspondence_Common.AppendOptimizedList.l_zip.fuel_instrumented)) :named fuel_correspondence_Common.AppendOptimizedList.l_zip.fuel_instrumented))
(declare-fun Common.AppendOptimizedList.lemma_weak_l_zip (Term Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.lemma_weak_l_zip@tok () Term)
(declare-fun Common.AppendOptimizedList.lemma_weak_l_zip_length (Term Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.lemma_weak_l_zip_length@tok () Term)
(declare-fun Common.AppendOptimizedList.zip (Term Term Term Term) Term)
(declare-fun Tm_refine_58c532d08042c1f8439d115af986dfd4 (Term Term Term Term) Term)
(declare-fun Tm_arrow_a93521d5dc8744c47a1956046465297e () Term)
(declare-fun Common.AppendOptimizedList.zip@tok () Term)
(declare-fun Common.AppendOptimizedList.lemma_unzip_length (Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.lemma_unzip_length@tok () Term)
(declare-fun Common.AppendOptimizedList.unzip (Term Term Term) Term)
(declare-fun Tm_refine_c0c58a540b56b3e4be519e0ca869f6e1 (Term Term Term) Term)
(declare-fun Tm_arrow_127035b2e6b773ce68e31ae316fea038 () Term)
(declare-fun Common.AppendOptimizedList.unzip@tok () Term)
(declare-fun Common.AppendOptimizedList.lemma_split3_repeat (Term Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.lemma_split3_repeat@tok () Term)
(declare-fun Common.AppendOptimizedList.lemma_split3_append_left (Term Term Term Term) Term)
(declare-fun Common.AppendOptimizedList.lemma_split3_append_left@tok () Term)
(push)
(declare-fun label_257 () Bool)
(declare-fun label_256 () Bool)
(declare-fun label_255 () Bool)
(declare-fun Tm_refine_58fceed7c72a3b99712c57774975edd5 (Term Term Term Term Term Term Term) Term)
(assert (! (forall ((@u0 Fuel) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term) (@x8 Term)) (! (= (HasTypeFuel @u0 @x1 (Tm_refine_58fceed7c72a3b99712c57774975edd5 @x2 @x3 @x4 @x5 @x6 @x7 @x8)) (and (HasTypeFuel @u0 @x1 Prims.nat) (or (Valid (Prims.precedes (Prims.list @x2) (Prims.list @x3) @x4 @x5) ) (and (= (Prims.list @x2) (Prims.list @x3)) (= @x4 @x5) (or (Valid (Prims.precedes (Prims.list @x2) (Prims.list @x3) @x6 @x7) ) (and (= (Prims.list @x2) (Prims.list @x3)) (= @x6 @x7) (Valid (Prims.precedes Prims.nat Prims.nat @x1 @x8) ) ) ) ) ) )) :pattern ((HasTypeFuel @u0 @x1 (Tm_refine_58fceed7c72a3b99712c57774975edd5 @x2 @x3 @x4 @x5 @x6 @x7 @x8))) :qid refinement_interpretation_Tm_refine_58fceed7c72a3b99712c57774975edd5)) :named refinement_interpretation_Tm_refine_58fceed7c72a3b99712c57774975edd5))
(push)
(assert (! (= MaxFuel (SFuel ZFuel)) :named MaxFuel_assumption))
(assert (! (= MaxIFuel (SFuel ZFuel)) :named MaxIFuel_assumption))
(assert (! (not (forall ((@x0 Term) (@x1 Term) (@x2 Term) (@x3 Term) (@x4 Term) (@x5 Term) (@x6 Term) (@x7 Term) (@x8 Term)) (! (=> (and (HasType @x0 Tm_type) (HasType @x1 (Prims.list @x0)) (HasType @x2 (Prims.list @x0)) (HasType @x3 Prims.nat) (HasType @x4 Tm_type) (HasType @x5 (Prims.list @x4)) (HasType @x6 (Prims.list @x4)) (HasType @x7 (Tm_refine_58fceed7c72a3b99712c57774975edd5 @x4 @x0 @x5 @x1 @x6 @x2 @x3)) (HasType @x8 (Prims.squash (Prims.l_and (Prims.b2t (Prims.op_GreaterThanOrEqual @x7 (FStar.List.Tot.Base.length @x4 @x5))) (Prims.b2t (Prims.op_LessThan @x7 (FStar.List.Tot.Base.length @x4 (FStar.List.Tot.Base.append @x4 @x5 @x6)))))))) (forall ((@x9 Term)) (! (=> (and (HasType @x9 Prims.unit) (= (FStar.List.Tot.Base.length @x4 (FStar.List.Tot.Base.op_At @x4 @x5 @x6)) (Prims.op_Addition (FStar.List.Tot.Base.length @x4 @x5) (FStar.List.Tot.Base.length @x4 @x6))) ) (and (=> (or (Valid (Prims.precedes (Prims.list @x4) (Prims.list @x0) @x5 @x1) ) (and (= (Prims.list @x4) (Prims.list @x0)) (= @x5 @x1) (or (Valid (Prims.precedes (Prims.list @x4) (Prims.list @x0) @x6 @x2) ) (and (= (Prims.list @x4) (Prims.list @x0)) (= @x6 @x2) (Valid (Prims.precedes Prims.nat Prims.nat @x7 @x3) ) ) ) ) ) (or label_255 (< (BoxInt_proj_0 @x7) (BoxInt_proj_0 (FStar.List.Tot.Base.length @x4 (FStar.List.Tot.Base.append @x4 @x5 @x6)))) ) ) (forall ((@x10 Term)) (! (=> (and (HasType @x10 (Tm_refine_58fceed7c72a3b99712c57774975edd5 @x4 @x0 @x5 @x1 @x6 @x2 @x3)) (= @x7 @x10) ) (forall ((@x11 Term)) (! (=> (and (HasType @x11 (FStar.Pervasives.Native.tuple3 (Prims.list @x4) @x4 (Prims.list @x4))) (= (FStar.List.Tot.Base.split3 @x4 (FStar.List.Tot.Base.append @x4 @x5 @x6) @x7) @x11) ) (forall ((@x12 Term)) (! (=> (HasType @x12 (Prims.list @x4)) (forall ((@x13 Term)) (! (=> (HasType @x13 @x4) (forall ((@x14 Term)) (! (=> (and (HasType @x14 (Prims.list @x4)) (= (FStar.List.Tot.Base.split3 @x4 (FStar.List.Tot.Base.append @x4 @x5 @x6) @x7) (FStar.Pervasives.Native.Mktuple3 (Prims.list @x4) @x4 (Prims.list @x4) @x12 @x13 @x14)) ) (and (or label_256 (>= (BoxInt_proj_0 (Prims.op_Subtraction @x7 (FStar.List.Tot.Base.length @x4 @x5))) (BoxInt_proj_0 (BoxInt 0))) ) (or label_257 (< (BoxInt_proj_0 (Prims.op_Subtraction @x7 (FStar.List.Tot.Base.length @x4 @x5))) (BoxInt_proj_0 (FStar.List.Tot.Base.length @x4 @x6))) ) ) ) :qid @query.6)) ) :qid @query.5)) ) :qid @query.4)) ) :qid @query.3)) ) :qid @query.2)) ) ) :qid @query.1)) ) :qid @query))) :named query))
(check-sat)
