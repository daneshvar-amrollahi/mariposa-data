(set-option :auto-config false)
(set-option :produce-unsat-cores false)
(set-option :smt.mbqi.max_iterations 10000000)
(set-option :smt.relevancy 0)
(declare-fun c0 () Bool)
(declare-fun c1 () Bool)
(define-fun e2 () Bool (not c1))
(define-fun e3 () Bool (and c0 e2))
(declare-fun c4 () Bool)
(define-fun e5 () Bool (and e3 c4))
(define-fun e6 () Bool (not e5))
(define-fun e7 () Bool (not c4))
(declare-fun c8 () (_ BitVec 64))
(define-fun e9 () (_ BitVec 64) (_ bv1024 64))
(define-fun e10 () Bool (bvult c8 e9))
(define-fun e11 () (_ BitVec 64) (_ bv0 64))
(declare-fun c12 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e13 () (_ BitVec 64) (c12 c8))
(define-fun e14 () Bool (= e11 e13))
(define-fun e15 () Bool (and e10 e14))
(define-fun e16 () Bool (not e15))
(define-fun e17 () (_ BitVec 64) (_ bv1 64))
(define-fun e18 () Bool (= e17 e13))
(define-fun e19 () Bool (and e10 e18))
(declare-fun c20 ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(define-fun e21 () (_ BitVec 64) (c20 c8 e17))
(define-fun e22 () Bool (= e17 e21))
(define-fun e23 () Bool (not e22))
(define-fun e24 () Bool (and e19 e23))
(define-fun e25 () Bool (not e24))
(define-fun e26 () (_ BitVec 64) (_ bv2 64))
(define-fun e27 () (_ BitVec 64) (c20 c8 e26))
(define-fun e28 () Bool (= e26 e27))
(define-fun e29 () Bool (not e28))
(define-fun e30 () Bool (and e19 e29))
(define-fun e31 () Bool (not e30))
(define-fun e32 () Bool (not e19))
(declare-fun c33 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e34 () (_ BitVec 64) (c33 c8))
(define-fun e35 () (_ BitVec 64) (c20 e34 e26))
(define-fun e36 () Bool (= e26 e35))
(define-fun e37 () Bool (not e36))
(define-fun e38 () Bool (and e32 e37))
(define-fun e39 () Bool (not e38))
(define-fun e40 () Bool (and e7 e10 e16 e25 e31 e39))
(define-fun e41 () Bool (not e10))
(define-fun e42 () Bool (and e31 e32 e37))
(define-fun e43 () Bool (or e30 e42))
(define-fun e44 () Bool (and e25 e43))
(define-fun e45 () Bool (or e24 e44))
(define-fun e46 () Bool (and e16 e45))
(define-fun e47 () Bool (or e15 e46))
(define-fun e48 () Bool (and e10 e47))
(define-fun e49 () Bool (or e41 e48))
(define-fun e50 () Bool (and e7 e49))
(define-fun e51 () Bool (or c4 e50))
(define-fun e52 () Bool (or e40 e51))
(define-fun e53 () Bool (or e52 e6))
(define-fun e54 () Bool (not e40))
(define-fun e55 () Bool (or e54 e6))
(declare-fun c56 () Bool)
(define-fun e57 () Bool (not c56))
(declare-fun c58 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e59 () (_ BitVec 64) (c58 c8))
(define-fun e60 () Bool (= e11 e59))
(define-fun e61 () Bool (and e10 e60))
(define-fun e62 () Bool (not e61))
(define-fun e63 () Bool (= e17 e59))
(define-fun e64 () Bool (and e10 e63))
(declare-fun c65 ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(define-fun e66 () (_ BitVec 64) (c65 c8 e17))
(define-fun e67 () Bool (= e17 e66))
(define-fun e68 () Bool (not e67))
(define-fun e69 () Bool (and e64 e68))
(define-fun e70 () Bool (not e69))
(define-fun e71 () (_ BitVec 64) (c65 c8 e26))
(define-fun e72 () Bool (= e26 e71))
(define-fun e73 () Bool (not e72))
(define-fun e74 () Bool (and e64 e73))
(define-fun e75 () Bool (not e74))
(define-fun e76 () Bool (not e64))
(declare-fun c77 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e78 () (_ BitVec 64) (c77 c8))
(define-fun e79 () (_ BitVec 64) (c65 e78 e26))
(define-fun e80 () Bool (= e26 e79))
(define-fun e81 () Bool (not e80))
(define-fun e82 () Bool (and e76 e81))
(define-fun e83 () Bool (not e82))
(define-fun e84 () Bool (and e10 e57 e62 e70 e75 e83))
(define-fun e85 () Bool (and e75 e76 e81))
(define-fun e86 () Bool (or e74 e85))
(define-fun e87 () Bool (and e70 e86))
(define-fun e88 () Bool (or e69 e87))
(define-fun e89 () Bool (and e62 e88))
(define-fun e90 () Bool (or e61 e89))
(define-fun e91 () Bool (and e10 e90))
(define-fun e92 () Bool (or e41 e91))
(define-fun e93 () Bool (and e57 e92))
(define-fun e94 () Bool (or c56 e93))
(define-fun e95 () Bool (or e84 e94))
(define-fun e96 () Bool (or e95 e6))
(define-fun e97 () Bool (and e53 e55 e96))
(define-fun e98 () Bool (or e6 e97))
(define-fun e99 () Bool (not e98))
(assert e99)
(check-sat)
