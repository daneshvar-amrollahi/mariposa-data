(set-option :auto-config false)
(set-option :produce-unsat-cores false)
(set-option :smt.mbqi.max_iterations 10000000)
(set-option :smt.relevancy 0)
(declare-fun c1 () Bool)
(define-fun e2 ((c0 (_ BitVec 64))) Bool (not c1))
(declare-fun c3 () (_ BitVec 64))
(define-fun e4 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv512 64))
(define-fun e5 ((c0 (_ BitVec 64))) Bool (bvult c3 (e4 c0)))
(declare-fun c6 () (_ BitVec 64))
(define-fun e7 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv1024 64))
(define-fun e8 ((c0 (_ BitVec 64))) Bool (bvult c6 (e7 c0)))
(define-fun e9 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv4 64))
(declare-fun c10 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e11 ((c0 (_ BitVec 64))) (_ BitVec 64) (c10 c6))
(define-fun e12 ((c0 (_ BitVec 64))) Bool (= (e9 c0) (e11 c0)))
(define-fun e13 ((c0 (_ BitVec 64))) Bool (and (e8 c0) (e12 c0)))
(define-fun e14 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv0 64))
(declare-fun c15 ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(define-fun e16 ((c0 (_ BitVec 64))) (_ BitVec 64) (c15 c6 c3))
(define-fun e17 ((c0 (_ BitVec 64))) Bool (= (e14 c0) (e16 c0)))
(declare-fun c18 () (_ BitVec 64))
(define-fun e19 ((c0 (_ BitVec 64))) Bool (bvult c18 (e7 c0)))
(define-fun e20 ((c0 (_ BitVec 64))) (_ BitVec 64) (c10 c18))
(define-fun e21 ((c0 (_ BitVec 64))) Bool (= (e14 c0) (e20 c0)))
(define-fun e22 ((c0 (_ BitVec 64))) Bool (and (e19 c0) (e21 c0)))
(declare-fun c23 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e24 ((c0 (_ BitVec 64))) (_ BitVec 64) (c23 c6))
(define-fun e25 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv2 64))
(define-fun e26 ((c0 (_ BitVec 64))) (_ BitVec 64) (c15 (e24 c0) (e25 c0)))
(define-fun e27 ((c0 (_ BitVec 64))) Bool (= (e14 c0) (e26 c0)))
(define-fun e28 ((c0 (_ BitVec 64))) Bool (and (e2 c0) (e5 c0) (e13 c0) (e17 c0) (e22 c0) (e27 c0)))
(define-fun e29 ((c0 (_ BitVec 64))) Bool (= c18 c0))
(define-fun e30 ((c0 (_ BitVec 64))) (_ BitVec 64) (c23 c0))
(define-fun e31 ((c0 (_ BitVec 64))) (_ BitVec 64) (ite (e29 c0) (e24 c0) (e30 c0)))
(define-fun e32 ((c0 (_ BitVec 64))) Bool (not (e5 c0)))
(define-fun e33 ((c0 (_ BitVec 64))) Bool (not (e13 c0)))
(define-fun e34 ((c0 (_ BitVec 64))) Bool (not (e17 c0)))
(define-fun e35 ((c0 (_ BitVec 64))) Bool (not (e19 c0)))
(define-fun e36 ((c0 (_ BitVec 64))) Bool (not (e22 c0)))
(define-fun e37 ((c0 (_ BitVec 64))) Bool (not (e27 c0)))
(define-fun e38 ((c0 (_ BitVec 64))) Bool (and (e22 c0) (e37 c0)))
(define-fun e39 ((c0 (_ BitVec 64))) Bool (or (e36 c0) (e38 c0)))
(define-fun e40 ((c0 (_ BitVec 64))) Bool (and (e19 c0) (e39 c0)))
(define-fun e41 ((c0 (_ BitVec 64))) Bool (or (e35 c0) (e40 c0)))
(define-fun e42 ((c0 (_ BitVec 64))) Bool (and (e17 c0) (e41 c0)))
(define-fun e43 ((c0 (_ BitVec 64))) Bool (or (e34 c0) (e42 c0)))
(define-fun e44 ((c0 (_ BitVec 64))) Bool (and (e13 c0) (e43 c0)))
(define-fun e45 ((c0 (_ BitVec 64))) Bool (or (e33 c0) (e44 c0)))
(define-fun e46 ((c0 (_ BitVec 64))) Bool (and (e5 c0) (e45 c0)))
(define-fun e47 ((c0 (_ BitVec 64))) Bool (or (e32 c0) (e46 c0)))
(define-fun e48 ((c0 (_ BitVec 64))) Bool (and (e2 c0) (e47 c0)))
(define-fun e49 ((c0 (_ BitVec 64))) Bool (or c1 (e48 c0)))
(define-fun e50 ((c0 (_ BitVec 64))) (_ BitVec 64) (bvor (ite (e28 c0) (e31 c0) (_ bv0 64)) (ite (e49 c0) (e30 c0) (_ bv0 64))))
(define-fun e51 ((c0 (_ BitVec 64))) Bool (bvult (e50 c0) (e7 c0)))
(define-fun e52 ((c0 (_ BitVec 64))) Bool (bvult c0 (e7 c0)))
(define-fun e53 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv5 64))
(define-fun e54 ((c0 (_ BitVec 64))) (_ BitVec 64) (c10 c0))
(define-fun e55 ((c0 (_ BitVec 64))) (_ BitVec 64) (ite (e29 c0) (e53 c0) (e54 c0)))
(define-fun e56 ((c0 (_ BitVec 64))) (_ BitVec 64) (bvor (ite (e28 c0) (e55 c0) (_ bv0 64)) (ite (e49 c0) (e54 c0) (_ bv0 64))))
(define-fun e57 ((c0 (_ BitVec 64))) Bool (= (e14 c0) (e56 c0)))
(define-fun e58 ((c0 (_ BitVec 64))) Bool (not (e57 c0)))
(define-fun e59 ((c0 (_ BitVec 64))) Bool (and (e52 c0) (e58 c0)))
(define-fun e60 ((c0 (_ BitVec 64))) Bool (not (e59 c0)))
(define-fun e61 ((c0 (_ BitVec 64))) Bool (or (e51 c0) (e60 c0)))
(define-fun e62 () Bool (forall ((c0 (_ BitVec 64))) (e61 c0)))
(define-fun e63 ((c0 (_ BitVec 64))) Bool (= c0 (e30 c0)))
(define-fun e64 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv1 64))
(define-fun e65 ((c0 (_ BitVec 64))) Bool (= (e64 c0) (e54 c0)))
(define-fun e66 ((c0 (_ BitVec 64))) Bool (and (e52 c0) (e65 c0)))
(define-fun e67 ((c0 (_ BitVec 64))) Bool (not (e66 c0)))
(define-fun e68 ((c0 (_ BitVec 64))) Bool (or (e63 c0) (e67 c0)))
(define-fun e69 () Bool (forall ((c0 (_ BitVec 64))) (e68 c0)))
(define-fun e70 ((c0 (_ BitVec 64))) Bool (bvult (e30 c0) (e7 c0)))
(define-fun e71 ((c0 (_ BitVec 64))) Bool (= (e14 c0) (e54 c0)))
(define-fun e72 ((c0 (_ BitVec 64))) Bool (not (e71 c0)))
(define-fun e73 ((c0 (_ BitVec 64))) Bool (and (e52 c0) (e72 c0)))
(define-fun e74 ((c0 (_ BitVec 64))) Bool (not (e73 c0)))
(define-fun e75 ((c0 (_ BitVec 64))) Bool (or (e70 c0) (e74 c0)))
(define-fun e76 () Bool (forall ((c0 (_ BitVec 64))) (e75 c0)))
(declare-fun c77 () (_ BitVec 64))
(define-fun e78 () (_ BitVec 64) (_ bv1024 64))
(define-fun e79 () Bool (bvult c77 e78))
(define-fun e80 () (_ BitVec 64) (_ bv2 64))
(define-fun e81 () (_ BitVec 64) (c10 c77))
(define-fun e82 () Bool (= e80 e81))
(define-fun e83 () Bool (and e79 e82))
(declare-fun c84 () (_ BitVec 64))
(define-fun e85 () (_ BitVec 64) (c23 c77))
(define-fun e86 () Bool (= c84 e85))
(define-fun e87 () (_ BitVec 64) (_ bv1 64))
(define-fun e88 () (_ BitVec 64) (c15 c84 e80))
(define-fun e89 () Bool (= e87 e88))
(define-fun e90 () Bool (and e83 e86 e89))
(define-fun e91 () Bool (not c1))
(define-fun e92 () Bool (or e90 e91))
(define-fun e93 () Bool (and e69 e76 e79 e92))
(define-fun e95 ((c94 (_ BitVec 64))) (_ BitVec 64) (c23 c94))
(define-fun e96 ((c94 (_ BitVec 64))) (_ BitVec 64) (_ bv1024 64))
(define-fun e97 ((c94 (_ BitVec 64))) Bool (bvult (e95 c94) (e96 c94)))
(define-fun e98 ((c94 (_ BitVec 64))) (_ BitVec 64) (_ bv1 64))
(define-fun e99 ((c94 (_ BitVec 64))) (_ BitVec 64) (c10 (e95 c94)))
(define-fun e100 ((c94 (_ BitVec 64))) Bool (= (e98 c94) (e99 c94)))
(define-fun e101 ((c94 (_ BitVec 64))) Bool (and (e97 c94) (e100 c94)))
(define-fun e102 ((c94 (_ BitVec 64))) Bool (bvult c94 (e96 c94)))
(define-fun e103 ((c94 (_ BitVec 64))) (_ BitVec 64) (_ bv0 64))
(define-fun e104 ((c94 (_ BitVec 64))) (_ BitVec 64) (c10 c94))
(define-fun e105 ((c94 (_ BitVec 64))) Bool (= (e103 c94) (e104 c94)))
(define-fun e106 ((c94 (_ BitVec 64))) Bool (not (e105 c94)))
(define-fun e107 ((c94 (_ BitVec 64))) Bool (and (e102 c94) (e106 c94)))
(define-fun e108 ((c94 (_ BitVec 64))) Bool (not (e107 c94)))
(define-fun e109 ((c94 (_ BitVec 64))) Bool (or (e101 c94) (e108 c94)))
(define-fun e110 () Bool (forall ((c94 (_ BitVec 64))) (e109 c94)))
(define-fun e111 () Bool (and e93 e110))
(define-fun e112 () Bool (not e111))
(define-fun e113 () Bool (or e62 e112))
(define-fun e114 () Bool (not e113))
(assert e114)
(check-sat)
