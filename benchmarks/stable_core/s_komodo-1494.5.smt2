(set-option :auto-config false)
(set-option :produce-unsat-cores false)
(set-option :smt.mbqi.max_iterations 10000000)
(set-option :smt.relevancy 0)
(declare-fun c0 () Bool)
(declare-fun c1 () Bool)
(define-fun e2 () Bool (not c1))
(declare-fun c3 () Bool)
(define-fun e4 () Bool (not c3))
(define-fun e5 () Bool (and c0 e2 e4))
(declare-fun c6 () Bool)
(define-fun e7 () Bool (not c6))
(define-fun e8 () Bool (and e5 e7))
(define-fun e9 () Bool (not e8))
(define-fun e10 () (_ BitVec 64) (bvneg (_ bv38 64)))
(declare-fun c11 () (_ BitVec 64))
(define-fun e12 () Bool (= e10 c11))
(declare-fun c13 () (_ BitVec 64))
(define-fun e14 () (_ BitVec 64) (_ bv4 64))
(define-fun e15 () (_ BitVec 64) (bvadd e14 c13))
(define-fun e16 () Bool (= c13 e15))
(define-fun e17 () Bool (and e12 e16))
(define-fun e18 () Bool (and c6 e17))
(define-fun e19 () (_ BitVec 64) (_ bv1265460335 64))
(define-fun e20 () Bool (= e19 c11))
(define-fun e21 () Bool (and e16 e20))
(define-fun e22 () Bool (and e7 e21))
(define-fun e23 () Bool (or e18 e22))
(declare-fun c24 () (_ BitVec 64))
(declare-fun c25 () (_ BitVec 64))
(define-fun e26 () Bool (= c24 c25))
(define-fun e27 () Bool (and c6 e26))
(define-fun e28 () Bool (not e27))
(define-fun e29 () Bool (or e23 e28))
(declare-fun c31 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e32 ((c30 (_ BitVec 64))) (_ BitVec 64) (c31 c30))
(define-fun e33 ((c30 (_ BitVec 64))) (_ BitVec 64) (_ bv1024 64))
(define-fun e34 ((c30 (_ BitVec 64))) Bool (bvult (e32 c30) (e33 c30)))
(define-fun e35 ((c30 (_ BitVec 64))) (_ BitVec 64) (_ bv1 64))
(declare-fun c36 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e37 ((c30 (_ BitVec 64))) (_ BitVec 64) (c36 (e32 c30)))
(define-fun e38 ((c30 (_ BitVec 64))) Bool (= (e35 c30) (e37 c30)))
(define-fun e39 ((c30 (_ BitVec 64))) Bool (and (e34 c30) (e38 c30)))
(define-fun e40 ((c30 (_ BitVec 64))) Bool (bvult c30 (e33 c30)))
(define-fun e41 ((c30 (_ BitVec 64))) (_ BitVec 64) (_ bv0 64))
(define-fun e42 ((c30 (_ BitVec 64))) (_ BitVec 64) (c36 c30))
(define-fun e43 ((c30 (_ BitVec 64))) Bool (= (e41 c30) (e42 c30)))
(define-fun e44 ((c30 (_ BitVec 64))) Bool (not (e43 c30)))
(define-fun e45 ((c30 (_ BitVec 64))) Bool (and (e40 c30) (e44 c30)))
(define-fun e46 ((c30 (_ BitVec 64))) Bool (not (e45 c30)))
(define-fun e47 ((c30 (_ BitVec 64))) Bool (or (e39 c30) (e46 c30)))
(define-fun e48 () Bool (forall ((c30 (_ BitVec 64))) (e47 c30)))
(define-fun e50 ((c49 (_ BitVec 64))) (_ BitVec 64) (c31 c49))
(define-fun e51 ((c49 (_ BitVec 64))) Bool (= c49 (e50 c49)))
(define-fun e52 ((c49 (_ BitVec 64))) (_ BitVec 64) (_ bv1024 64))
(define-fun e53 ((c49 (_ BitVec 64))) Bool (bvult c49 (e52 c49)))
(define-fun e54 ((c49 (_ BitVec 64))) (_ BitVec 64) (_ bv1 64))
(define-fun e55 ((c49 (_ BitVec 64))) (_ BitVec 64) (c36 c49))
(define-fun e56 ((c49 (_ BitVec 64))) Bool (= (e54 c49) (e55 c49)))
(define-fun e57 ((c49 (_ BitVec 64))) Bool (and (e53 c49) (e56 c49)))
(define-fun e58 ((c49 (_ BitVec 64))) Bool (not (e57 c49)))
(define-fun e59 ((c49 (_ BitVec 64))) Bool (or (e51 c49) (e58 c49)))
(define-fun e60 () Bool (forall ((c49 (_ BitVec 64))) (e59 c49)))
(define-fun e61 ((c49 (_ BitVec 64))) Bool (bvult (e50 c49) (e52 c49)))
(define-fun e62 ((c49 (_ BitVec 64))) (_ BitVec 64) (_ bv0 64))
(define-fun e63 ((c49 (_ BitVec 64))) Bool (= (e62 c49) (e55 c49)))
(define-fun e64 ((c49 (_ BitVec 64))) Bool (not (e63 c49)))
(define-fun e65 ((c49 (_ BitVec 64))) Bool (and (e53 c49) (e64 c49)))
(define-fun e66 ((c49 (_ BitVec 64))) Bool (not (e65 c49)))
(define-fun e67 ((c49 (_ BitVec 64))) Bool (or (e61 c49) (e66 c49)))
(define-fun e68 () Bool (forall ((c49 (_ BitVec 64))) (e67 c49)))
(declare-fun c69 () (_ BitVec 64))
(define-fun e70 () (_ BitVec 64) (_ bv1024 64))
(define-fun e71 () Bool (bvult c69 e70))
(define-fun e72 () (_ BitVec 64) (_ bv2 64))
(define-fun e73 () (_ BitVec 64) (c36 c69))
(define-fun e74 () Bool (= e72 e73))
(define-fun e75 () Bool (and e71 e74))
(define-fun e76 () (_ BitVec 64) (c31 c69))
(define-fun e77 () Bool (= c25 e76))
(define-fun e78 () (_ BitVec 64) (_ bv1 64))
(declare-fun c79 ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(define-fun e80 () (_ BitVec 64) (c79 c25 e72))
(define-fun e81 () Bool (= e78 e80))
(define-fun e82 () Bool (and e75 e77 e81))
(define-fun e83 () Bool (or e7 e82))
(define-fun e84 () Bool (and e48 e60 e68 e71 e83))
(define-fun e85 () Bool (not e84))
(define-fun e86 () Bool (or e29 e85))
(define-fun e87 () Bool (or e9 e86))
(define-fun e88 () Bool (not e87))
(assert e88)
(check-sat)
