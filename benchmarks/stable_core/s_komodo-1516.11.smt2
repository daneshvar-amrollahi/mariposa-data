(set-option :auto-config false)
(set-option :produce-unsat-cores false)
(set-option :smt.mbqi.max_iterations 10000000)
(set-option :smt.relevancy 0)
(declare-fun c0 () Bool)
(declare-fun c1 () Bool)
(define-fun e2 () Bool (not c1))
(define-fun e3 () Bool (and c0 e2))
(define-fun e4 () Bool (not e3))
(declare-fun c5 () (_ BitVec 64))
(define-fun e6 () (_ BitVec 64) (_ bv512 64))
(define-fun e7 () Bool (bvult c5 e6))
(declare-fun c8 () (_ BitVec 64))
(define-fun e9 () (_ BitVec 64) (_ bv1024 64))
(define-fun e10 () Bool (bvult c8 e9))
(define-fun e11 () (_ BitVec 64) (_ bv4 64))
(declare-fun c12 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e13 () (_ BitVec 64) (c12 c8))
(define-fun e14 () Bool (= e11 e13))
(define-fun e15 () Bool (and e10 e14))
(define-fun e16 () (_ BitVec 64) (_ bv0 64))
(declare-fun c17 ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(define-fun e18 () (_ BitVec 64) (c17 c8 c5))
(define-fun e19 () Bool (= e16 e18))
(declare-fun c20 () (_ BitVec 64))
(define-fun e21 () Bool (bvult c20 e9))
(define-fun e22 () (_ BitVec 64) (c12 c20))
(define-fun e23 () Bool (= e16 e22))
(define-fun e24 () Bool (and e21 e23))
(declare-fun c25 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e26 () (_ BitVec 64) (c25 c8))
(define-fun e27 () (_ BitVec 64) (_ bv2 64))
(define-fun e28 () (_ BitVec 64) (c17 e26 e27))
(define-fun e29 () Bool (= e16 e28))
(define-fun e30 () Bool (and e2 e7 e15 e19 e24 e29))
(define-fun e31 () Bool (not e7))
(define-fun e32 () Bool (not e15))
(define-fun e33 () Bool (not e19))
(define-fun e34 () Bool (not e21))
(define-fun e35 () Bool (not e24))
(define-fun e36 () Bool (not e29))
(define-fun e37 () Bool (and e24 e36))
(define-fun e38 () Bool (or e35 e37))
(define-fun e39 () Bool (and e21 e38))
(define-fun e40 () Bool (or e34 e39))
(define-fun e41 () Bool (and e19 e40))
(define-fun e42 () Bool (or e33 e41))
(define-fun e43 () Bool (and e15 e42))
(define-fun e44 () Bool (or e32 e43))
(define-fun e45 () Bool (and e7 e44))
(define-fun e46 () Bool (or e31 e45))
(define-fun e47 () Bool (and e2 e46))
(define-fun e48 () Bool (or c1 e47))
(define-fun e49 () Bool (or e30 e48))
(define-fun e50 () Bool (or e49 e4))
(declare-fun c51 () Bool)
(define-fun e52 () Bool (not c51))
(declare-fun c53 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e54 () (_ BitVec 64) (c53 c8))
(define-fun e55 () Bool (= e11 e54))
(define-fun e56 () Bool (and e10 e55))
(declare-fun c57 ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(define-fun e58 () (_ BitVec 64) (c57 c8 c5))
(define-fun e59 () Bool (= e16 e58))
(define-fun e60 () (_ BitVec 64) (c53 c20))
(define-fun e61 () Bool (= e16 e60))
(define-fun e62 () Bool (and e21 e61))
(declare-fun c63 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e64 () (_ BitVec 64) (c63 c8))
(define-fun e65 () (_ BitVec 64) (c57 e64 e27))
(define-fun e66 () Bool (= e16 e65))
(define-fun e67 () Bool (and e7 e52 e56 e59 e62 e66))
(define-fun e68 () Bool (not e56))
(define-fun e69 () Bool (not e59))
(define-fun e70 () Bool (not e62))
(define-fun e71 () Bool (not e66))
(define-fun e72 () Bool (and e62 e71))
(define-fun e73 () Bool (or e70 e72))
(define-fun e74 () Bool (and e21 e73))
(define-fun e75 () Bool (or e34 e74))
(define-fun e76 () Bool (and e59 e75))
(define-fun e77 () Bool (or e69 e76))
(define-fun e78 () Bool (and e56 e77))
(define-fun e79 () Bool (or e68 e78))
(define-fun e80 () Bool (and e7 e79))
(define-fun e81 () Bool (or e31 e80))
(define-fun e82 () Bool (and e52 e81))
(define-fun e83 () Bool (or c51 e82))
(define-fun e84 () Bool (or e67 e83))
(define-fun e85 () Bool (or e84 e4))
(define-fun e86 () Bool (and e50 e85))
(define-fun e87 () Bool (or e4 e86))
(define-fun e88 () Bool (not e87))
(assert e88)
(check-sat)
