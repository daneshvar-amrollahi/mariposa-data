(set-option :auto-config false)
(set-option :produce-unsat-cores false)
(set-option :smt.mbqi.max_iterations 10000000)
(set-option :smt.relevancy 0)
(define-fun e1 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv0 64))
(declare-fun c2 () Bool)
(define-fun e3 ((c0 (_ BitVec 64))) Bool (not c2))
(declare-fun c4 () (_ BitVec 64))
(define-fun e5 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv512 64))
(define-fun e6 ((c0 (_ BitVec 64))) Bool (bvult c4 (e5 c0)))
(declare-fun c7 () (_ BitVec 64))
(define-fun e8 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv256 64))
(define-fun e9 ((c0 (_ BitVec 64))) Bool (bvult c7 (e8 c0)))
(define-fun e10 ((c0 (_ BitVec 64))) Bool (not (e9 c0)))
(declare-fun c11 () (_ BitVec 64))
(define-fun e12 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv1024 64))
(define-fun e13 ((c0 (_ BitVec 64))) Bool (bvult c11 (e12 c0)))
(define-fun e14 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv5 64))
(declare-fun c15 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e16 ((c0 (_ BitVec 64))) (_ BitVec 64) (c15 c11))
(define-fun e17 ((c0 (_ BitVec 64))) Bool (= (e14 c0) (e16 c0)))
(define-fun e18 ((c0 (_ BitVec 64))) Bool (and (e13 c0) (e17 c0)))
(define-fun e19 ((c0 (_ BitVec 64))) Bool (not (e18 c0)))
(define-fun e20 ((c0 (_ BitVec 64))) Bool (or (e10 c0) (e19 c0)))
(define-fun e21 ((c0 (_ BitVec 64))) Bool (not (e20 c0)))
(declare-fun c22 ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(define-fun e23 ((c0 (_ BitVec 64))) (_ BitVec 64) (c22 c11 c4))
(define-fun e24 ((c0 (_ BitVec 64))) Bool (= (e1 c0) (e23 c0)))
(declare-fun c25 () (_ BitVec 64))
(define-fun e26 ((c0 (_ BitVec 64))) Bool (bvult c25 (e12 c0)))
(define-fun e27 ((c0 (_ BitVec 64))) (_ BitVec 64) (c15 c25))
(define-fun e28 ((c0 (_ BitVec 64))) Bool (= (e1 c0) (e27 c0)))
(define-fun e29 ((c0 (_ BitVec 64))) Bool (and (e26 c0) (e28 c0)))
(declare-fun c30 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e31 ((c0 (_ BitVec 64))) (_ BitVec 64) (c30 c11))
(define-fun e32 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv2 64))
(define-fun e33 ((c0 (_ BitVec 64))) (_ BitVec 64) (c22 (e31 c0) (e32 c0)))
(define-fun e34 ((c0 (_ BitVec 64))) Bool (= (e1 c0) (e33 c0)))
(define-fun e35 ((c0 (_ BitVec 64))) Bool (and (e3 c0) (e6 c0) (e21 c0) (e24 c0) (e29 c0) (e34 c0)))
(define-fun e36 ((c0 (_ BitVec 64))) Bool (= c0 (e31 c0)))
(define-fun e37 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv1 64))
(declare-fun c38 ((_ BitVec 64)) (_ BitVec 64))
(define-fun e39 ((c0 (_ BitVec 64))) (_ BitVec 64) (c38 c0))
(define-fun e40 ((c0 (_ BitVec 64))) (_ BitVec 64) (bvadd (e37 c0) (e39 c0)))
(define-fun e41 ((c0 (_ BitVec 64))) (_ BitVec 64) (ite (e36 c0) (e40 c0) (e39 c0)))
(define-fun e42 ((c0 (_ BitVec 64))) Bool (not (e6 c0)))
(define-fun e43 ((c0 (_ BitVec 64))) Bool (not (e24 c0)))
(define-fun e44 ((c0 (_ BitVec 64))) Bool (not (e26 c0)))
(define-fun e45 ((c0 (_ BitVec 64))) Bool (not (e29 c0)))
(define-fun e46 ((c0 (_ BitVec 64))) Bool (not (e34 c0)))
(define-fun e47 ((c0 (_ BitVec 64))) Bool (and (e29 c0) (e46 c0)))
(define-fun e48 ((c0 (_ BitVec 64))) Bool (or (e45 c0) (e47 c0)))
(define-fun e49 ((c0 (_ BitVec 64))) Bool (and (e26 c0) (e48 c0)))
(define-fun e50 ((c0 (_ BitVec 64))) Bool (or (e44 c0) (e49 c0)))
(define-fun e51 ((c0 (_ BitVec 64))) Bool (and (e24 c0) (e50 c0)))
(define-fun e52 ((c0 (_ BitVec 64))) Bool (or (e43 c0) (e51 c0)))
(define-fun e53 ((c0 (_ BitVec 64))) Bool (and (e21 c0) (e52 c0)))
(define-fun e54 ((c0 (_ BitVec 64))) Bool (or (e20 c0) (e53 c0)))
(define-fun e55 ((c0 (_ BitVec 64))) Bool (and (e6 c0) (e54 c0)))
(define-fun e56 ((c0 (_ BitVec 64))) Bool (or (e42 c0) (e55 c0)))
(define-fun e57 ((c0 (_ BitVec 64))) Bool (and (e3 c0) (e56 c0)))
(define-fun e58 ((c0 (_ BitVec 64))) Bool (or c2 (e57 c0)))
(define-fun e59 ((c0 (_ BitVec 64))) (_ BitVec 64) (bvor (ite (e35 c0) (e41 c0) (_ bv0 64)) (ite (e58 c0) (e39 c0) (_ bv0 64))))
(define-fun e60 ((c0 (_ BitVec 64))) Bool (= (e1 c0) (e59 c0)))
(define-fun e61 ((c0 (_ BitVec 64))) Bool (bvult c0 (e12 c0)))
(define-fun e62 ((c0 (_ BitVec 64))) Bool (= c25 c0))
(define-fun e63 ((c0 (_ BitVec 64))) (_ BitVec 64) (_ bv6 64))
(define-fun e64 ((c0 (_ BitVec 64))) (_ BitVec 64) (c15 c0))
(define-fun e65 ((c0 (_ BitVec 64))) (_ BitVec 64) (ite (e62 c0) (e63 c0) (e64 c0)))
(define-fun e66 ((c0 (_ BitVec 64))) (_ BitVec 64) (bvor (ite (e35 c0) (e65 c0) (_ bv0 64)) (ite (e58 c0) (e64 c0) (_ bv0 64))))
(define-fun e67 ((c0 (_ BitVec 64))) Bool (= (e37 c0) (e66 c0)))
(define-fun e68 ((c0 (_ BitVec 64))) Bool (and (e61 c0) (e67 c0)))
(define-fun e69 ((c0 (_ BitVec 64))) Bool (not (e68 c0)))
(define-fun e70 ((c0 (_ BitVec 64))) Bool (and (e61 c0) (e69 c0)))
(define-fun e71 ((c0 (_ BitVec 64))) Bool (not (e70 c0)))
(define-fun e72 ((c0 (_ BitVec 64))) Bool (or (e60 c0) (e71 c0)))
(define-fun e73 () Bool (forall ((c0 (_ BitVec 64))) (e72 c0)))
(define-fun e74 ((c0 (_ BitVec 64))) (_ BitVec 64) (c30 c0))
(define-fun e75 ((c0 (_ BitVec 64))) Bool (= c0 (e74 c0)))
(define-fun e76 ((c0 (_ BitVec 64))) Bool (= (e37 c0) (e64 c0)))
(define-fun e77 ((c0 (_ BitVec 64))) Bool (and (e61 c0) (e76 c0)))
(define-fun e78 ((c0 (_ BitVec 64))) Bool (not (e77 c0)))
(define-fun e79 ((c0 (_ BitVec 64))) Bool (or (e75 c0) (e78 c0)))
(define-fun e80 () Bool (forall ((c0 (_ BitVec 64))) (e79 c0)))
(define-fun e81 ((c0 (_ BitVec 64))) Bool (bvult (e74 c0) (e12 c0)))
(define-fun e82 ((c0 (_ BitVec 64))) Bool (= (e1 c0) (e64 c0)))
(define-fun e83 ((c0 (_ BitVec 64))) Bool (not (e82 c0)))
(define-fun e84 ((c0 (_ BitVec 64))) Bool (and (e61 c0) (e83 c0)))
(define-fun e85 ((c0 (_ BitVec 64))) Bool (not (e84 c0)))
(define-fun e86 ((c0 (_ BitVec 64))) Bool (or (e81 c0) (e85 c0)))
(define-fun e87 () Bool (forall ((c0 (_ BitVec 64))) (e86 c0)))
(declare-fun c88 () (_ BitVec 64))
(define-fun e89 () (_ BitVec 64) (_ bv1024 64))
(define-fun e90 () Bool (bvult c88 e89))
(define-fun e91 () (_ BitVec 64) (_ bv2 64))
(define-fun e92 () (_ BitVec 64) (c15 c88))
(define-fun e93 () Bool (= e91 e92))
(define-fun e94 () Bool (and e90 e93))
(define-fun e95 () Bool (not c2))
(define-fun e96 () Bool (or e94 e95))
(define-fun e97 ((c0 (_ BitVec 64))) Bool (= (e1 c0) (e39 c0)))
(define-fun e98 ((c0 (_ BitVec 64))) Bool (and (e61 c0) (e78 c0)))
(define-fun e99 ((c0 (_ BitVec 64))) Bool (not (e98 c0)))
(define-fun e100 ((c0 (_ BitVec 64))) Bool (or (e97 c0) (e99 c0)))
(define-fun e101 () Bool (forall ((c0 (_ BitVec 64))) (e100 c0)))
(define-fun e102 ((c0 (_ BitVec 64))) (_ BitVec 64) (c22 c0 (e37 c0)))
(define-fun e103 ((c0 (_ BitVec 64))) Bool (= (e39 c0) (e102 c0)))
(define-fun e104 ((c0 (_ BitVec 64))) Bool (or (e78 c0) (e103 c0)))
(define-fun e105 () Bool (forall ((c0 (_ BitVec 64))) (e104 c0)))
(declare-fun c108 ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(define-fun e109 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) (_ BitVec 64) (c108 c106 c107))
(define-fun e110 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) (_ BitVec 64) (_ bv1024 64))
(define-fun e111 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) Bool (bvult (e109 c106 c107) (e110 c106 c107)))
(define-fun e112 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) Bool (bvult c106 (e110 c106 c107)))
(define-fun e113 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) Bool (bvult c107 (e110 c106 c107)))
(define-fun e114 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) Bool (and (e112 c106 c107) (e113 c106 c107)))
(define-fun e115 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) Bool (not (e114 c106 c107)))
(define-fun e116 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) Bool (or (e111 c106 c107) (e115 c106 c107)))
(define-fun e117 () Bool (forall ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) (e116 c106 c107)))
(declare-fun c119 ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(define-fun e120 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64)) (c118 (_ BitVec 64))) (_ BitVec 64) (c119 c106 c118))
(define-fun e121 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64)) (c118 (_ BitVec 64))) (_ BitVec 64) (c108 c106 (e120 c106 c107 c118)))
(define-fun e122 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64)) (c118 (_ BitVec 64))) Bool (= c118 (e121 c106 c107 c118)))
(define-fun e123 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64)) (c118 (_ BitVec 64))) (_ BitVec 64) (c108 c106 c107))
(define-fun e124 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64)) (c118 (_ BitVec 64))) (_ BitVec 64) (c119 c106 (e123 c106 c107 c118)))
(define-fun e125 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64)) (c118 (_ BitVec 64))) Bool (= c107 (e124 c106 c107 c118)))
(define-fun e126 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64)) (c118 (_ BitVec 64))) Bool (and (e122 c106 c107 c118) (e125 c106 c107 c118)))
(define-fun e127 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64)) (c118 (_ BitVec 64))) (_ BitVec 64) (_ bv1024 64))
(define-fun e128 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64)) (c118 (_ BitVec 64))) Bool (bvult c106 (e127 c106 c107 c118)))
(define-fun e129 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64)) (c118 (_ BitVec 64))) Bool (bvult c107 (e127 c106 c107 c118)))
(define-fun e130 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64)) (c118 (_ BitVec 64))) Bool (bvult c118 (e127 c106 c107 c118)))
(define-fun e131 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64)) (c118 (_ BitVec 64))) Bool (and (e128 c106 c107 c118) (e129 c106 c107 c118) (e130 c106 c107 c118)))
(define-fun e132 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64)) (c118 (_ BitVec 64))) Bool (not (e131 c106 c107 c118)))
(define-fun e133 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64)) (c118 (_ BitVec 64))) Bool (or (e126 c106 c107 c118) (e132 c106 c107 c118)))
(define-fun e134 () Bool (forall ((c106 (_ BitVec 64)) (c107 (_ BitVec 64)) (c118 (_ BitVec 64))) (e133 c106 c107 c118)))
(define-fun e135 ((c106 (_ BitVec 64))) (_ BitVec 64) (_ bv0 64))
(define-fun e136 ((c106 (_ BitVec 64))) (_ BitVec 64) (c108 c106 c106))
(define-fun e137 ((c106 (_ BitVec 64))) Bool (= (e135 c106) (e136 c106)))
(define-fun e138 ((c106 (_ BitVec 64))) (_ BitVec 64) (c119 c106 (e135 c106)))
(define-fun e139 ((c106 (_ BitVec 64))) Bool (= c106 (e138 c106)))
(define-fun e140 ((c106 (_ BitVec 64))) Bool (and (e137 c106) (e139 c106)))
(define-fun e141 ((c106 (_ BitVec 64))) (_ BitVec 64) (_ bv1024 64))
(define-fun e142 ((c106 (_ BitVec 64))) Bool (bvult c106 (e141 c106)))
(define-fun e143 ((c106 (_ BitVec 64))) (_ BitVec 64) (c30 c106))
(define-fun e144 ((c106 (_ BitVec 64))) Bool (= c106 (e143 c106)))
(define-fun e145 ((c106 (_ BitVec 64))) (_ BitVec 64) (c15 c106))
(define-fun e146 ((c106 (_ BitVec 64))) Bool (= (e135 c106) (e145 c106)))
(define-fun e147 ((c106 (_ BitVec 64))) Bool (and (e142 c106) (e146 c106)))
(define-fun e148 ((c106 (_ BitVec 64))) Bool (not (e147 c106)))
(define-fun e149 ((c106 (_ BitVec 64))) Bool (and (e144 c106) (e148 c106)))
(define-fun e150 ((c106 (_ BitVec 64))) Bool (and (e142 c106) (e149 c106)))
(define-fun e151 ((c106 (_ BitVec 64))) Bool (not (e150 c106)))
(define-fun e152 ((c106 (_ BitVec 64))) Bool (or (e140 c106) (e151 c106)))
(define-fun e153 () Bool (forall ((c106 (_ BitVec 64))) (e152 c106)))
(define-fun e154 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) (_ BitVec 64) (c30 c107))
(define-fun e155 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) Bool (= c106 (e154 c106 c107)))
(define-fun e156 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) (_ BitVec 64) (_ bv0 64))
(define-fun e157 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) (_ BitVec 64) (c15 c107))
(define-fun e158 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) Bool (= (e156 c106 c107) (e157 c106 c107)))
(define-fun e159 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) Bool (and (e113 c106 c107) (e158 c106 c107)))
(define-fun e160 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) Bool (not (e159 c106 c107)))
(define-fun e161 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) Bool (and (e155 c106 c107) (e160 c106 c107)))
(define-fun e162 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) (_ BitVec 64) (c38 c106))
(define-fun e163 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) Bool (bvult (e109 c106 c107) (e162 c106 c107)))
(define-fun e164 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) Bool (and (=> (e161 c106 c107) (e163 c106 c107)) (=> (e163 c106 c107) (e161 c106 c107))))
(define-fun e165 ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) Bool (or (e115 c106 c107) (e164 c106 c107)))
(define-fun e166 () Bool (forall ((c106 (_ BitVec 64)) (c107 (_ BitVec 64))) (e165 c106 c107)))
(define-fun e167 ((c106 (_ BitVec 64))) (_ BitVec 64) (c38 c106))
(define-fun e168 ((c106 (_ BitVec 64))) Bool (bvule (e167 c106) (e141 c106)))
(define-fun e169 ((c106 (_ BitVec 64))) Bool (not (e142 c106)))
(define-fun e170 ((c106 (_ BitVec 64))) Bool (or (e168 c106) (e169 c106)))
(define-fun e171 () Bool (forall ((c106 (_ BitVec 64))) (e170 c106)))
(define-fun e172 () Bool (and e117 e134 e153 e166 e171))
(define-fun e173 () Bool (and e80 e87 e90 e96 e101 e105 e172))
(define-fun e174 () Bool (not e173))
(define-fun e175 () Bool (or e73 e174))
(define-fun e176 () Bool (not e175))
(assert e176)
(check-sat)
